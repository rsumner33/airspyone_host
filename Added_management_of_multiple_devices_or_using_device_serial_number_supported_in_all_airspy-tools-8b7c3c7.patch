From 8b7c3c76df741ce1fed6e4c1cfb13a3a3377099a Mon Sep 17 00:00:00 2001
From: bvernoux <bvernoux@gmail.com>
Date: Tue, 18 Nov 2014 16:15:07 +0100
Subject: [PATCH] Added management of multiple devices or using device serial number supported in all airspy-tools Added Visual Studio 2013 projects for all airspy-tools Updated version to 1.0.0 Beta Updated README.md (removed support for cygwin)

---
 CMakeLists.txt                               |   17 +++++++++++++++++
 README.md                                    |   28 ++++++----------------------
 airspy-tools/src/CMakeLists.txt              |    8 ++++++++
 airspy-tools/src/airspy_gpio.c               |  309 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 airspy-tools/src/airspy_gpiodir.c            |  300 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 airspy-tools/src/airspy_info.c               |  174 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------
 airspy-tools/src/airspy_r820t.c              |  134 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++---------------------
 airspy-tools/src/airspy_rx.c                 |  105 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++----------------------------------
 airspy-tools/src/airspy_si5351c.c            |  103 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++------------
 airspy-tools/src/airspy_spiflash.c           |   64 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----
 libairspy/CMakeLists.txt                     |   17 +++++++++++++++--
 libairspy/src/CMakeLists.txt                 |    8 +++++++-
 libairspy/src/airspy.c                       |
 libairspy/src/airspy.h                       |   10 +++++-----
 libairspy/vc/airspy.sln                      |   21 ---------------------
 libairspy/vc/airspy.vcxproj                  |  298 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 libairspy/vc/airspy_2013.sln                 |  115 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_2013.vcxproj             |  315 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_gpio_2013.vcxproj        |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_gpiodir_2013.vcxproj     |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_info_2013.vcxproj        |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_lib_version_2013.vcxproj |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_r820t_2013.vcxproj       |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_rx_2013.vcxproj          |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_si5351c_2013.vcxproj     |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/airspy_spiflash_2013.vcxproj    |  172 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/getopt/getopt.c                 |
 libairspy/vc/getopt/getopt.h                 |  180 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/getopt/getopt1.c                |  188 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/getopt_2013.vcxproj             |  137 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 libairspy/vc/libs/libusb-1.0.dll             | Bin 0 -> 95744 bytes
 libairspy/vc/libs/pthreadVCE2.dll            | Bin 0 -> 61952 bytes
 libs_win32/libusb-1.0.dll                    | Bin 0 -> 348305 bytes
 libs_win32/pthreadGC2.dll                    | Bin 0 -> 119888 bytes
 34 files changed, 5036 insertions(+), 958 deletions(-)
 create mode 100644 airspy-tools/src/airspy_gpio.c
 create mode 100644 airspy-tools/src/airspy_gpiodir.c
 delete mode 100644 libairspy/vc/airspy.sln
 delete mode 100644 libairspy/vc/airspy.vcxproj
 create mode 100644 libairspy/vc/airspy_2013.sln
 create mode 100644 libairspy/vc/airspy_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_gpio_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_gpiodir_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_info_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_lib_version_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_r820t_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_rx_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_si5351c_2013.vcxproj
 create mode 100644 libairspy/vc/airspy_spiflash_2013.vcxproj
 create mode 100644 libairspy/vc/getopt/getopt.c
 create mode 100644 libairspy/vc/getopt/getopt.h
 create mode 100644 libairspy/vc/getopt/getopt1.c
 create mode 100644 libairspy/vc/getopt_2013.vcxproj
 create mode 100644 libairspy/vc/libs/libusb-1.0.dll
 create mode 100644 libairspy/vc/libs/pthreadVCE2.dll
 create mode 100644 libs_win32/libusb-1.0.dll
 create mode 100644 libs_win32/pthreadGC2.dll

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 475b8f0..dd27de9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -19,3 +19,20 @@ configure_file(
 add_custom_target(uninstall
     ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake
 )
+
+########################################################################
+# Copy Files Win32 only
+########################################################################
+
+if(WIN32)
+ configure_file(
+     ${CMAKE_CURRENT_BINARY_DIR}/../libs_win32/libusb-1.0.dll
+     ${CMAKE_CURRENT_BINARY_DIR}/airspy-tools/src/libusb-1.0.dll
+ COPYONLY)
+
+ configure_file(
+     ${CMAKE_CURRENT_BINARY_DIR}/../libs_win32/pthreadGC2.dll
+     ${CMAKE_CURRENT_BINARY_DIR}/airspy-tools/src/pthreadGC2.dll
+ COPYONLY)
+endif()
+
diff --git a/README.md b/README.md
index ca35fec..4e950b4 100644
--- a/README.md
+++ b/README.md
@@ -10,41 +10,25 @@ AirSpy: http://www.airspy.com
 
 ##How to build host software on Windows:
 
-###Prerequisites for cygwin or mingw:
+###Prerequisites for mingw:
 
 * cmake-2.8.12.1 or more see http://www.cmake.org/cmake/resources/software.html
-* libusbx-1.0.18 or more see http://sourceforge.net/projects/libusbx/files/latest/download?source=files
-* Install Windows driver for AirSpy hardware or use Zadig see http://sourceforge.net/projects/libwdi/files/zadig
+* libusb-1.0.19 or more see http://sourceforge.net/projects/libusb/files/libusb-1.0/libusb-1.0.19/libusb-1.0.19.7z/download
+* For Windows OS less than Vista Install Windows driver for AirSpy hardware or use Zadig see http://sourceforge.net/projects/libwdi/files/zadig
   - If you want to use Zadig  select AirSpy USB device and just install/replace it with WinUSB driver.
 
 >**Note for Windows build:**
  You shall always execute airspy_tools from Windows command shell and not from Cygwin or Mingw shell because on Cygwin/Mingw
  Ctrl C is not managed correctly and especially for airspy_rx the Ctrl C(abort) will not stop correctly and will corrupt the file.
 
-###For VisualStudio 2012 or later (only to build library):
+###For VisualStudio 2013 or later (only to build library):
 
-* Download http://sourceforge.net/projects/libusbx/files/releases/1.0.18/binaries/libusbx-1.0.18-win.7z/download
-* Extract libusbx-1.0.18-win.7z to host directory
+* Download http://sourceforge.net/projects/libusb/files/libusb-1.0/libusb-1.0.19/libusb-1.0.19.7z/download
+* Extract libusb-1.0.19.7z to host directory
 * Download ftp://mirrors.kernel.org/sourceware/pthreads-win32/pthreads-w32-2-9-1-release.zip
 * Extract pthreads-w32-2-9-1-release.zip to host directory
 * Launch host\libairspy\vc\airspy.sln with VisualStudio, choose Release and Build
 
-
-###For Cygwin:
-
-`cd host`
-
-`mkdir build`
-
-`cd build`
-
-`cmake ../ -G "Unix Makefiles" -DCMAKE_LEGACY_CYGWIN_WIN32=1 -DLIBUSB_INCLUDE_DIR=/usr/local/include/libusb-1.0/`
-
-`make`
-
-`make install`
-
-
 ###For MinGW:
 
 `cd host`
diff --git a/airspy-tools/src/CMakeLists.txt b/airspy-tools/src/CMakeLists.txt
index 208e5eb..e0c2178 100644
--- a/airspy-tools/src/CMakeLists.txt
+++ b/airspy-tools/src/CMakeLists.txt
@@ -29,6 +29,12 @@ add_library(libgetopt_static STATIC
 )
 endif()
 
+add_executable(airspy_gpio airspy_gpio.c)
+install(TARGETS airspy_gpio RUNTIME DESTINATION ${INSTALL_DEFAULT_BINDIR})
+
+add_executable(airspy_gpiodir airspy_gpiodir.c)
+install(TARGETS airspy_gpiodir RUNTIME DESTINATION ${INSTALL_DEFAULT_BINDIR})
+
 add_executable(airspy_lib_version airspy_lib_version.c)
 install(TARGETS airspy_lib_version RUNTIME DESTINATION ${INSTALL_DEFAULT_BINDIR})
 
@@ -58,6 +64,8 @@ if(MSVC)
 LIST(APPEND TOOLS_LINK_LIBS libgetopt_static)
 endif()
 
+target_link_libraries(airspy_gpio ${TOOLS_LINK_LIBS})
+target_link_libraries(airspy_gpiodir ${TOOLS_LINK_LIBS})
 target_link_libraries(airspy_lib_version ${TOOLS_LINK_LIBS})
 target_link_libraries(airspy_si5351c ${TOOLS_LINK_LIBS})
 target_link_libraries(airspy_r820t ${TOOLS_LINK_LIBS})
diff --git a/airspy-tools/src/airspy_gpio.c b/airspy-tools/src/airspy_gpio.c
new file mode 100644
index 0000000..1642678
--- /dev/null
+++ b/airspy-tools/src/airspy_gpio.c
@@ -0,0 +1,309 @@
+/*
+ * Copyright 2013/2014 Benjamin Vernoux <bvernoux@airspy.com>
+ *
+ * This file is part of AirSpy (based on HackRF project).
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#include <airspy.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <getopt.h>
+
+#ifndef bool
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+
+#define PORT_NUM_INVALID (255)
+#define PIN_NUM_INVALID  (255)
+
+#define PORT_NUM_MIN (0)
+#define PORT_NUM_MAX (7)
+
+#define PIN_NUM_MIN (0)
+#define PIN_NUM_MAX (31)
+
+static void usage() {
+	printf("Usage:\n");
+	printf("\t-p, --port_no <p>: set port number<p>[0,7] for subsequent read/write operations\n");
+	printf("\t-n, --pin_no <n>: set pin number<n>[0,31] for subsequent read/write operations\n");
+	printf("\t-r, --read: read port number/pin number value and direction specified by last -n argument, or all port/pin\n");
+	printf("\t-w, --write <v>: write value specified by last -n argument with value<v>[0,1]\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
+	printf("\nExamples:\n");
+	printf("\t<command> -p 0 -n 12 -r # reads from port 0 pin number 12\n");
+	printf("\t<command> -r          # reads all pins on all ports\n");
+	printf("\t<command> -p 0 -n 10 -w 1 # writes port 0 pin number 10 with 1 decimal\n");
+	printf("\nHardware Info AirSpy:\n");
+	printf("LED1(out): -p 0 -n 12 (0=OFF, 1=ON)\n");
+	printf("Enable R820T(out): -p 1 -n 7 (0=OFF, 1=ON)\n");
+	printf("Enable BiasT(out): -p 1 -n 13 (0=OFF, 1=ON)\n");
+}
+
+static struct option long_options[] = {
+	{ "port_no", required_argument, 0, 'p' },
+	{ "pin_no", required_argument, 0, 'n' },
+	{ "write", required_argument, 0, 'w' },
+	{ "read", no_argument, 0, 'r' },
+	{ 0, 0, 0, 0 },
+};
+
+int parse_u8(char* const s, uint8_t* const value) {
+	char* s_end = s;
+	const long int long_value = strtol(s, &s_end, 10);
+	if( (s != s_end) && (*s_end == 0) ) {
+		if((long_value >=0 ) && (long_value < 256)) {
+			*value = (uint8_t)long_value;
+			return AIRSPY_SUCCESS;
+		} else {
+			return AIRSPY_ERROR_INVALID_PARAM;
+		}
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
+		return AIRSPY_SUCCESS;
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+int dump_port_pin(struct airspy_device* device,
+									airspy_gpio_port_t port_number,
+									airspy_gpio_pin_t pin_number)
+{
+	uint8_t value;
+	int result = airspy_gpio_read(device, port_number, pin_number, &value);
+
+	if( result == AIRSPY_SUCCESS ) {
+		printf("gpio[%1d][%2d] -> 0x%02X", port_number, pin_number, value);
+
+		result = airspy_gpiodir_read(device, port_number, pin_number, &value);
+		if( result == AIRSPY_SUCCESS ) {
+			if(value == 1)
+				printf(" out(1)\n");
+			else
+				printf(" in(0)\n");
+		} else {
+			printf("airspy_gpiodir_read() failed: %s (%d)\n", airspy_error_name(result), result);
+		}
+	} else {
+		printf("airspy_gpio_read() failed: %s (%d)\n", airspy_error_name(result), result);
+	}
+
+	return result;
+}
+
+int dump_port(struct airspy_device* device, airspy_gpio_port_t port_number)
+{
+	airspy_gpio_pin_t pin_number;
+	int result = AIRSPY_SUCCESS;
+
+	for(pin_number = GPIO_PIN0; pin_number < (GPIO_PIN31+1); pin_number++)
+	{
+		result = dump_port_pin(device, port_number, pin_number);
+	}
+	return result;
+}
+
+int dump_ports(struct airspy_device* device)
+{
+	uint8_t port_number;
+	int result = AIRSPY_SUCCESS;
+
+	for(port_number = GPIO_PORT0; port_number < (GPIO_PORT7+1); port_number++)
+	{
+		result = dump_port(device, port_number);
+		if( result != AIRSPY_SUCCESS ) {
+			break;
+		}
+	}
+	return result;
+}
+
+int write_port_pin(struct airspy_device* device,
+										airspy_gpio_port_t port_number,
+										airspy_gpio_pin_t pin_number,
+										uint8_t value)
+{
+	int result;
+	result = airspy_gpio_write(device, port_number, pin_number, value);
+
+	if( result == AIRSPY_SUCCESS ) {
+		printf("0x%02X -> gpio[%1d][%2d]\n", value, port_number, pin_number);
+	} else {
+		printf("airspy_r820t_write() failed: %s (%d)\n", airspy_error_name(result), result);
+	}
+	return result;
+}
+
+bool serial_number = false;
+uint64_t serial_number_val;
+
+int main(int argc, char** argv) {
+	int opt;
+	uint8_t port_number = PORT_NUM_INVALID;
+	uint8_t pin_number = PIN_NUM_INVALID;
+	uint8_t value;
+	struct airspy_device* device = NULL;
+	int option_index;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
+	int result;
+
+	option_index = 0;
+	while( (opt = getopt_long(argc, argv,  "p:n:rw:s:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ) {
+
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+		}
+	}
+
+	result = airspy_init();
+	if( result ) {
+		printf("airspy_init() failed: %s (%d)\n", airspy_error_name(result), result);
+		return EXIT_FAILURE;
+	}
+
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}
+
+	result = AIRSPY_ERROR_OTHER;
+	option_index = 0;
+	optind = 0;
+	while( (opt = getopt_long(argc, argv, "p:n:rw:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ){
+		case 'p':
+			result = parse_u8(optarg, &port_number);
+			if((result != AIRSPY_SUCCESS) || (port_number > PORT_NUM_MAX))
+			{
+				printf("Error parameter -p shall be between %d and %d\n", PORT_NUM_MIN, PORT_NUM_MAX);
+				result = AIRSPY_ERROR_OTHER;
+			}
+			break;
+
+		case 'n':
+			result = parse_u8(optarg, &pin_number);
+			if((result != AIRSPY_SUCCESS) || (pin_number > PIN_NUM_MAX))
+			{
+				printf("Error parameter -n shall be between %d and %d\n", PIN_NUM_MIN, PIN_NUM_MAX);
+				result = AIRSPY_ERROR_OTHER;
+			}
+			break;
+
+		case 'r':
+			if( port_number == PORT_NUM_INVALID )
+			{
+				result = dump_ports(device);
+			} else
+			{
+				if( pin_number == PORT_NUM_INVALID )
+				{
+					result = dump_port(device, port_number);
+				} else
+				{
+					result = dump_port_pin(device, port_number, pin_number);
+				}
+			}
+			if( result != AIRSPY_SUCCESS )
+				printf("argument error: %s (%d)\n", airspy_error_name(result), result);
+			break;
+
+		case 'w':
+			result = parse_u8(optarg, &value);
+			if( result == AIRSPY_SUCCESS ) {
+				result = write_port_pin(device, port_number, pin_number, value);
+				if( result != AIRSPY_SUCCESS )
+					printf("argument error: %s (%d)\n", airspy_error_name(result), result);
+			}
+			break;
+		}
+
+		if( result != AIRSPY_SUCCESS )
+		{
+			break;
+		}
+	}
+
+	if( result != AIRSPY_SUCCESS )
+	{
+		usage();
+	}
+
+	result = airspy_close(device);
+	if( result ) {
+		printf("airspy_close() failed: %s (%d)\n", airspy_error_name(result), result);
+		airspy_exit();
+		return EXIT_FAILURE;
+	}
+
+	airspy_exit();
+
+	return 0;
+}
+
diff --git a/airspy-tools/src/airspy_gpiodir.c b/airspy-tools/src/airspy_gpiodir.c
new file mode 100644
index 0000000..9569a73
--- /dev/null
+++ b/airspy-tools/src/airspy_gpiodir.c
@@ -0,0 +1,300 @@
+/*
+ * Copyright 2013/2014 Benjamin Vernoux <bvernoux@airspy.com>
+ *
+ * This file is part of AirSpy (based on HackRF project).
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#include <airspy.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <getopt.h>
+
+#ifndef bool
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+
+#define PORT_NUM_INVALID (255)
+#define PIN_NUM_INVALID  (255)
+
+#define PORT_NUM_MIN (0)
+#define PORT_NUM_MAX (7)
+
+#define PIN_NUM_MIN (0)
+#define PIN_NUM_MAX (31)
+
+static void usage() {
+	printf("WARNING this tool reconfigure GPIO Direction IN/OUT and can destroy GPIO/MCU in case of mistake\n");
+	printf("Usage:\n");
+	printf("\t-p, --port_no <p>: set port number<p>[0,7] for subsequent read/write operations\n");
+	printf("\t-n, --pin_no <n>: set pin number<n>[0,31] for subsequent read/write operations\n");
+	printf("\t-r, --read: read port number/pin number direction specified by last -n argument, or all port/pin\n");
+	printf("\t-w, --write <v>: write value port direction specified by last -n argument with value<v>[0,1](0=IN,1=OUT)\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
+	printf("\nExamples:\n");
+	printf("\t<command> -p 0 -n 12 -r # reads gpio direction from port 0 pin number 12\n");
+	printf("\t<command> -r          # reads gpio direction on all pins and all ports\n");
+	printf("\t<command> -p 0 -n 10 -w 1 # writes gpio direction port 0 pin number 10 with 1(output) decimal\n");
+}
+
+static struct option long_options[] = {
+	{ "port_no", required_argument, 0, 'p' },
+	{ "pin_no", required_argument, 0, 'n' },
+	{ "write", required_argument, 0, 'w' },
+	{ "read", no_argument, 0, 'r' },
+	{ 0, 0, 0, 0 },
+};
+
+int parse_u8(char* const s, uint8_t* const value) {
+	char* s_end = s;
+	const long int long_value = strtol(s, &s_end, 10);
+	if( (s != s_end) && (*s_end == 0) ) {
+		if((long_value >=0 ) && (long_value < 256)) {
+			*value = (uint8_t)long_value;
+			return AIRSPY_SUCCESS;
+		} else {
+			return AIRSPY_ERROR_INVALID_PARAM;
+		}
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
+		return AIRSPY_SUCCESS;
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+int dump_port_pin(struct airspy_device* device,
+									airspy_gpio_port_t port_number,
+									airspy_gpio_pin_t pin_number)
+{
+	uint8_t value;
+	int result;
+
+	result = airspy_gpiodir_read(device, port_number, pin_number, &value);
+	if( result == AIRSPY_SUCCESS ) {
+		if(value == 1)
+			printf("gpiodir[%1d][%2d] -> out(1)\n", port_number, pin_number);
+		else
+			printf("gpiodir[%1d][%2d] -> in(0)\n", port_number, pin_number);
+	} else {
+		printf("airspy_gpiodir_read() failed: %s (%d)\n", airspy_error_name(result), result);
+	}
+	return result;
+}
+
+int dump_port(struct airspy_device* device, airspy_gpio_port_t port_number)
+{
+	airspy_gpio_pin_t pin_number;
+	int result = AIRSPY_SUCCESS;
+
+	for(pin_number = GPIO_PIN0; pin_number < (GPIO_PIN31+1); pin_number++)
+	{
+		result = dump_port_pin(device, port_number, pin_number);
+	}
+	return result;
+}
+
+int dump_ports(struct airspy_device* device)
+{
+	uint8_t port_number;
+	int result = AIRSPY_SUCCESS;
+
+	for(port_number = GPIO_PORT0; port_number < (GPIO_PORT7+1); port_number++)
+	{
+		result = dump_port(device, port_number);
+		if( result != AIRSPY_SUCCESS ) {
+			break;
+		}
+	}
+	return result;
+}
+
+int write_port_pin(struct airspy_device* device,
+										airspy_gpio_port_t port_number,
+										airspy_gpio_pin_t pin_number,
+										uint8_t value)
+{
+	int result;
+	result = airspy_gpiodir_write(device, port_number, pin_number, value);
+
+	if( result == AIRSPY_SUCCESS ) {
+		printf("0x%02X -> gpiodir[%1d][%2d]\n", value, port_number, pin_number);
+	} else {
+		printf("airspy_r820t_write() failed: %s (%d)\n", airspy_error_name(result), result);
+	}
+
+	return result;
+}
+
+bool serial_number = false;
+uint64_t serial_number_val;
+
+int main(int argc, char** argv) {
+	int opt;
+	uint8_t port_number = PORT_NUM_INVALID;
+	uint8_t pin_number = PIN_NUM_INVALID;
+	uint8_t value;
+	struct airspy_device* device = NULL;
+	int option_index;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
+	int result;
+
+	option_index = 0;
+	while( (opt = getopt_long(argc, argv,  "p:n:rw:s:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ) {
+
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+		}
+	}
+
+	result = airspy_init();
+	if( result ) {
+		printf("airspy_init() failed: %s (%d)\n", airspy_error_name(result), result);
+		return EXIT_FAILURE;
+	}
+
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}
+
+	result = AIRSPY_ERROR_OTHER;
+	option_index = 0;
+	optind = 0;
+	while( (opt = getopt_long(argc, argv, "p:n:rw:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ) {
+		case 'p':
+			result = parse_u8(optarg, &port_number);
+			if((result != AIRSPY_SUCCESS) || (port_number > PORT_NUM_MAX))
+			{
+				printf("Error parameter -p shall be between %d and %d\n", PORT_NUM_MIN, PORT_NUM_MAX);
+				result = AIRSPY_ERROR_OTHER;
+			}
+			break;
+
+		case 'n':
+			result = parse_u8(optarg, &pin_number);
+			if((result != AIRSPY_SUCCESS) || (pin_number > PIN_NUM_MAX))
+			{
+				printf("Error parameter -n shall be between %d and %d\n", PIN_NUM_MIN, PIN_NUM_MAX);
+				result = AIRSPY_ERROR_OTHER;
+			}
+			break;
+
+		case 'r':
+			if( port_number == PORT_NUM_INVALID )
+			{
+				result = dump_ports(device);
+			} else
+			{
+				if( pin_number == PORT_NUM_INVALID )
+				{
+					result = dump_port(device, port_number);
+				} else
+				{
+					result = dump_port_pin(device, port_number, pin_number);
+				}
+			}
+			if( result != AIRSPY_SUCCESS )
+				printf("argument error: %s (%d)\n", airspy_error_name(result), result);
+			break;
+
+		case 'w':
+			result = parse_u8(optarg, &value);
+			if( result == AIRSPY_SUCCESS ) {
+				result = write_port_pin(device, port_number, pin_number, value);
+				if( result != AIRSPY_SUCCESS )
+					printf("argument error: %s (%d)\n", airspy_error_name(result), result);
+			}
+			break;
+		}
+
+		if( result != AIRSPY_SUCCESS )
+		{
+			break;
+		}
+	}
+
+	if( result != AIRSPY_SUCCESS )
+	{
+		usage();
+	}
+
+	result = airspy_close(device);
+	if( result ) {
+		printf("airspy_close() failed: %s (%d)\n", airspy_error_name(result), result);
+		airspy_exit();
+		return EXIT_FAILURE;
+	}
+
+	airspy_exit();
+
+	return 0;
+}
+
diff --git a/airspy-tools/src/airspy_info.c b/airspy-tools/src/airspy_info.c
index dd1ecd0..e1450b1 100644
--- a/airspy-tools/src/airspy_info.c
+++ b/airspy-tools/src/airspy_info.c
@@ -25,16 +25,91 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
+#include <getopt.h>
 
+#ifndef bool
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+
+#define AIRSPY_MAX_DEVICE (32)
 char version[255 + 1];
 airspy_read_partid_serialno_t read_partid_serialno;
+struct airspy_device* devices[AIRSPY_MAX_DEVICE+1] = { NULL };
+
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
+		return AIRSPY_SUCCESS;
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+static void usage(void)
+{
+	printf("Usage:\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
+}
+
+bool serial_number = false;
+uint64_t serial_number_val;
 
 int main(int argc, char** argv)
 {
-	struct airspy_device* device = NULL;
-	int result = AIRSPY_SUCCESS;
+	int i;
+	int result;
+	int opt;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
 	uint8_t board_id = AIRSPY_BOARD_ID_INVALID;
 
+	while( (opt = getopt(argc, argv, "s:")) != EOF )
+	{
+		result = AIRSPY_SUCCESS;
+		switch( opt ) 
+		{
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+
+		default:
+			printf("unknown argument '-%c %s'\n", opt, optarg);
+			usage();
+			return EXIT_FAILURE;
+		}
+		
+		if( result != AIRSPY_SUCCESS ) {
+			printf("argument error: '-%c %s' %s (%d)\n", opt, optarg, airspy_error_name(result), result);
+			usage();
+			return EXIT_FAILURE;
+		}		
+	}
+
 	result = airspy_init();
 	if (result != AIRSPY_SUCCESS) {
 		fprintf(stderr, "airspy_init() failed: %s (%d)\n",
@@ -42,55 +117,72 @@ int main(int argc, char** argv)
 		return EXIT_FAILURE;
 	}
 
-	result = airspy_open(&device);
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_open() failed: %s (%d)\n",
-				airspy_error_name(result), result);
-		return EXIT_FAILURE;
+	for (i = 0; i < AIRSPY_MAX_DEVICE; i++)
+	{
+		if(serial_number == true)
+		{
+			result = airspy_open_sn(&devices[i], serial_number_val);
+		}else
+		{
+			result = airspy_open(&devices[i]);
+		}
+		if (result != AIRSPY_SUCCESS)
+		{
+			if(i == 0)
+			{
+				fprintf(stderr, "airspy_open() board %d failed: %s (%d)\n",
+						i+1, airspy_error_name(result), result);
+			}
+			break;
+		}
 	}
 
-	printf("Found AirSpy board.\n");
+	for(i = 0; i < AIRSPY_MAX_DEVICE; i++)
+	{
+		if(devices[i] != NULL)
+		{
+			printf("\nFound AirSpy board %d\n", i + 1);
+			fflush(stdout);
+			result = airspy_board_id_read(devices[i], &board_id);
+			if (result != AIRSPY_SUCCESS) {
+				fprintf(stderr, "airspy_board_id_read() failed: %s (%d)\n",
+					airspy_error_name(result), result);
+				continue;
+			}
+			printf("Board ID Number: %d (%s)\n", board_id,
+				airspy_board_id_name(board_id));
 
-	result = airspy_board_id_read(device, &board_id);
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_board_id_read() failed: %s (%d)\n",
-				airspy_error_name(result), result);
-		return EXIT_FAILURE;
-	}
-	printf("Board ID Number: %d (%s)\n", board_id,
-			airspy_board_id_name(board_id));
+			result = airspy_version_string_read(devices[i], &version[0], 255);
+			if (result != AIRSPY_SUCCESS) {
+				fprintf(stderr, "airspy_version_string_read() failed: %s (%d)\n",
+					airspy_error_name(result), result);
+				continue;
+			}
+			printf("Firmware Version: %s\n", version);
 
-	result = airspy_version_string_read(device, &version[0], 255);
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_version_string_read() failed: %s (%d)\n",
-				airspy_error_name(result), result);
-		return EXIT_FAILURE;
-	}
-	printf("Firmware Version: %s\n", version);
-
-	result = airspy_board_partid_serialno_read(device, &read_partid_serialno);	
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_board_partid_serialno_read() failed: %s (%d)\n",
-				airspy_error_name(result), result);
-		return EXIT_FAILURE;
-	}
-	printf("Part ID Number: 0x%08X 0x%08X\n", 
+			result = airspy_board_partid_serialno_read(devices[i], &read_partid_serialno);
+			if (result != AIRSPY_SUCCESS) {
+				fprintf(stderr, "airspy_board_partid_serialno_read() failed: %s (%d)\n",
+					airspy_error_name(result), result);
+				continue;
+			}
+			printf("Part ID Number: 0x%08X 0x%08X\n",
 				read_partid_serialno.part_id[0],
 				read_partid_serialno.part_id[1]);
-	printf("Serial Number: 0x%08X 0x%08X 0x%08X 0x%08X\n", 
-				read_partid_serialno.serial_no[0],
-				read_partid_serialno.serial_no[1],
+			printf("Serial Number: 0x%08X%08X\n",
 				read_partid_serialno.serial_no[2],
 				read_partid_serialno.serial_no[3]);
-	
-	result = airspy_close(device);
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_close() failed: %s (%d)\n",
-				airspy_error_name(result), result);
-		return EXIT_FAILURE;
+
+			printf("Close board %d\n", i+1);
+			result = airspy_close(devices[i]);
+			if (result != AIRSPY_SUCCESS) {
+				fprintf(stderr, "airspy_close() board %d failed: %s (%d)\n",
+						i+1, airspy_error_name(result), result);
+				continue;
+			}
+		}
 	}
 
 	airspy_exit();
-
 	return EXIT_SUCCESS;
 }
diff --git a/airspy-tools/src/airspy_r820t.c b/airspy-tools/src/airspy_r820t.c
index 44421cd..ca9ce5e 100644
--- a/airspy-tools/src/airspy_r820t.c
+++ b/airspy-tools/src/airspy_r820t.c
@@ -23,14 +23,25 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include <getopt.h>
 
+#ifndef bool
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+
+#define REGISTER_NUM_MIN (0)
+#define REGISTER_NUM_MAX (31)
+
 static void usage() {
-	printf("\nUsage:\n");
-	printf("\t-n, --register <n>: set register number for subsequent read/write operations\n");
+	printf("Usage:\n");
+	printf("\t-n, --register <n>: set register <n>[%d,%d] for subsequent read/write operations\n", REGISTER_NUM_MIN, REGISTER_NUM_MAX);
 	printf("\t-r, --read: read register specified by last -n argument, or all registers\n");
-	printf("\t-w, --write <v>: write register specified by last -n argument with value <v>\n");
+	printf("\t-w, --write <v>: write register specified by last -n argument with value <v>[0,255]\n");
 	printf("\t-c, --config: configure registers to r820t default mode for test\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
 	printf("\nExamples:\n");
 	printf("\t<command> -n 12 -r    # reads from register 12\n");
 	printf("\t<command> -r          # reads all registers\n");
@@ -45,11 +56,42 @@ static struct option long_options[] = {
 	{ 0, 0, 0, 0 },
 };
 
-int parse_int(char* const s, uint8_t* const value) {
+int parse_u8(char* const s, uint8_t* const value) {
 	char* s_end = s;
-	const long long_value = strtol(s, &s_end, 10);
+	const long int long_value = strtol(s, &s_end, 10);
 	if( (s != s_end) && (*s_end == 0) ) {
-		*value = (uint8_t)long_value;
+		if((long_value >=0 ) && (long_value < 256)) {
+			*value = (uint8_t)long_value;
+			return AIRSPY_SUCCESS;
+		} else {
+			return AIRSPY_ERROR_INVALID_PARAM;
+		}
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
 		return AIRSPY_SUCCESS;
 	} else {
 		return AIRSPY_ERROR_INVALID_PARAM;
@@ -138,36 +180,84 @@ int configure_registers(struct airspy_device* device)
 }
 
 #define REGISTER_INVALID 255
+bool serial_number = false;
+uint64_t serial_number_val;
 
 int main(int argc, char** argv) {
 	int opt;
 	uint8_t register_number = REGISTER_INVALID;
 	uint8_t register_value;
 	struct airspy_device* device = NULL;
-	int option_index = 0;
+	int option_index;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
+	int result;
+
+	option_index = 0;
+	while( (opt = getopt_long(argc, argv, "cn:rw:s:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ) {
+
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+		}
+	}
 
-	int result = airspy_init();
+	result = airspy_init();
 	if( result ) {
 		printf("airspy_init() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+		return EXIT_FAILURE;
 	}
 
-	result = airspy_open(&device);
-	if( result ) {
-		printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
 	}
 
-	while( (opt = getopt_long(argc, argv, "cn:rw:", long_options, &option_index)) != EOF ) {
+	result = AIRSPY_ERROR_OTHER;
+	option_index = 0;
+	optind = 0;
+	while( (opt = getopt_long(argc, argv, "cn:rw:", long_options, &option_index)) != EOF )
+	{
 		switch( opt ) {
 		case 'n':
-			result = parse_int(optarg, &register_number);
+			result = parse_u8(optarg, &register_number);
+			if((result != AIRSPY_SUCCESS) || (register_number > REGISTER_NUM_MAX))
+			{
+				register_number = REGISTER_INVALID;
+				printf("Error parameter -n shall be between %d and %d\n", REGISTER_NUM_MIN, REGISTER_NUM_MAX);
+				result = AIRSPY_ERROR_OTHER;
+			}
 			break;
 
 		case 'w':
-			result = parse_int(optarg, &register_value);
+			result = parse_u8(optarg, &register_value);
 			if( result == AIRSPY_SUCCESS ) {
 				result = write_register(device, register_number, register_value);
+			}else
+			{
+				printf("Error parameter -w shall be between 0 and 255\n");
+				result = AIRSPY_ERROR_OTHER;
 			}
 			break;
 
@@ -182,22 +272,24 @@ int main(int argc, char** argv) {
 		case 'c':
 				result = configure_registers(device);
 			break;
-
-		default:
-			usage();
 		}
 
 		if( result != AIRSPY_SUCCESS )
 		{
-			printf("argument error: %s (%d)\n", airspy_error_name(result), result);
 			break;
 		}
 	}
 
+	if( result != AIRSPY_SUCCESS )
+	{
+		usage();
+	}
+
 	result = airspy_close(device);
 	if( result ) {
 		printf("airspy_close() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+		airspy_exit();
+		return EXIT_FAILURE;
 	}
 
 	airspy_exit();
diff --git a/airspy-tools/src/airspy_rx.c b/airspy-tools/src/airspy_rx.c
index 7867839..10ef9f8 100644
--- a/airspy-tools/src/airspy_rx.c
+++ b/airspy-tools/src/airspy_rx.c
@@ -170,6 +170,8 @@ unsigned int vga_gain=0;
 unsigned int lna_gain=8;
 unsigned int mixer_gain=8;
 
+airspy_read_partid_serialno_t read_partid_serialno;
+
 static float
 TimevalDiff(const struct timeval *a, const struct timeval *b)
 {
@@ -290,12 +292,15 @@ struct timeval time_start;
 struct timeval t_start;
 	
 bool freq = false;
-uint64_t freq_hz;
+uint32_t freq_hz;
 
 bool limit_num_samples = false;
 uint64_t samples_to_xfer = 0;
 uint64_t bytes_to_xfer = 0;
 
+bool serial_number = false;
+uint64_t serial_number_val;
+
 #define RX_BUFFER_SIZE (32*1024*1024)
 uint16_t rx_buffer[RX_BUFFER_SIZE];
 #define SAMPLE_SCALE_FLOAT_TO_INT ( (8192.0f) )
@@ -304,7 +309,7 @@ enum airspy_sample_type sample_type = AIRSPY_SAMPLE_INT16_IQ;
 
 int rx_callback(airspy_transfer_t* transfer)
 {
-	int i;
+	uint32_t i;
 	uint32_t bytes_to_write;
 	uint32_t nb_data;
 	uint16_t* rx_samples_u16;
@@ -365,14 +370,15 @@ int rx_callback(airspy_transfer_t* transfer)
 static void usage(void)
 {
 	printf("Usage:\n");
-	printf("\t-r <filename> # Receive data into file.\n");
-	printf("\t-w # Receive data into file with WAV header and automatic name.\n");
-	printf("\t   # This is for SDR# compatibility and may not work with other software.\n");
-	printf("\t[-f set_freq_hz] # Set Freq in Hz between [%luMHz, %luMHz].\n", FREQ_MIN_HZ/FREQ_ONE_MHZ, FREQ_MAX_HZ/FREQ_ONE_MHZ);
-	printf("\t[-v gain] # Set VGA gain, 0-%d (default %d)\n", MAX_VGA_GAIN, vga_gain);
-	printf("\t[-m gain] # Set Mixer gain, 0-%d (default %d)\n", MAX_MIXER_GAIN, mixer_gain);
-	printf("\t[-l gain] # Set LNA gain, 0-%d (default %d)\n", MAX_LNA_GAIN, lna_gain);
-	printf("\t[-n num_samples] # Number of samples to transfer (default is unlimited).\n");
+	printf("\t-r <filename>: Receive data into file.\n");
+	printf("\t-w Receive data into file with WAV header and automatic name.\n");
+	printf("\t   This is for SDR# compatibility and may not work with other software.\n");
+	printf("\t[-f set_freq_hz]: Set Freq in Hz between [%luMHz, %luMHz].\n", FREQ_MIN_HZ/FREQ_ONE_MHZ, FREQ_MAX_HZ/FREQ_ONE_MHZ);
+	printf("\t[-v gain]: Set VGA gain, 0-%d (default %d)\n", MAX_VGA_GAIN, vga_gain);
+	printf("\t[-m gain]: Set Mixer gain, 0-%d (default %d)\n", MAX_MIXER_GAIN, mixer_gain);
+	printf("\t[-l gain]: Set LNA gain, 0-%d (default %d)\n", MAX_LNA_GAIN, lna_gain);
+	printf("\t[-n num_samples]: Number of samples to transfer (default is unlimited).\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
 }
 
 struct airspy_device* device = NULL;
@@ -414,8 +420,10 @@ int main(int argc, char** argv)
 	int exit_code = EXIT_SUCCESS;
 	struct timeval t_end;
 	float time_diff;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
 
-	while( (opt = getopt(argc, argv, "wr:f:n:v:m:l:")) != EOF )
+	while( (opt = getopt(argc, argv, "wr:f:n:v:m:l:s:")) != EOF )
 	{
 		result = AIRSPY_SUCCESS;
 		switch( opt ) 
@@ -431,7 +439,7 @@ int main(int argc, char** argv)
 
 		case 'f':
 			freq = true;
-			result = parse_u64(optarg, &freq_hz);
+			result = parse_u32(optarg, &freq_hz);
 			break;
 
 		case 'v':
@@ -452,6 +460,14 @@ int main(int argc, char** argv)
 			bytes_to_xfer = samples_to_xfer * 2;
 			break;
 
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+
 		default:
 			printf("unknown argument '-%c %s'\n", opt, optarg);
 			usage();
@@ -486,7 +502,7 @@ int main(int argc, char** argv)
 	}
 
 	receiver_mode = RECEIVER_MODE_RX;
-
+	
 	if( receive_wav ) 
 	{
 		time (&rawtime);
@@ -504,7 +520,7 @@ int main(int argc, char** argv)
 		usage();
 		return EXIT_FAILURE;
 	}
-	
+
 	if(vga_gain > MAX_VGA_GAIN) {
 		printf("vga_gain out of range\n");
 		usage();
@@ -526,35 +542,60 @@ int main(int argc, char** argv)
 	result = airspy_init();
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_init() failed: %s (%d)\n", airspy_error_name(result), result);
-		usage();
 		return EXIT_FAILURE;
 	}
 
-	result = airspy_open(&device);
-	if( result != AIRSPY_SUCCESS ) {
-		printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
-		usage();
-		return EXIT_FAILURE;
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
 	}
 	
+	result = airspy_board_partid_serialno_read(device, &read_partid_serialno);
+	if (result != AIRSPY_SUCCESS) {
+			fprintf(stderr, "airspy_board_partid_serialno_read() failed: %s (%d)\n",
+				airspy_error_name(result), result);
+			airspy_close(device);
+			airspy_exit();
+			return EXIT_FAILURE;
+	}
+	printf("Board Serial Number: 0x%08X%08X\n",
+		read_partid_serialno.serial_no[2],
+		read_partid_serialno.serial_no[3]);
+
 	result = airspy_set_sample_type(device, sample_type);
 	if( result != AIRSPY_SUCCESS ) {
-		printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
-		usage();
+		printf("airspy_set_sample_type() failed: %s (%d)\n", airspy_error_name(result), result);
+		airspy_close(device);
+		airspy_exit();
 		return EXIT_FAILURE;
 	}
 
 	fd = fopen(path, "wb");
-
 	if( fd == NULL ) {
 		printf("Failed to open file: %s\n", path);
+		airspy_close(device);
+		airspy_exit();
 		return EXIT_FAILURE;
 	}
 	/* Change fd buffer to have bigger one to store or read data on/to HDD */
 	result = setvbuf(fd , NULL , _IOFBF , FD_BUFFER_SIZE);
 	if( result != 0 ) {
 		printf("setvbuf() failed: %d\n", result);
-		usage();
+		airspy_close(device);
+		airspy_exit();
 		return EXIT_FAILURE;
 	}
 	
@@ -579,30 +620,25 @@ int main(int argc, char** argv)
 	result = airspy_set_vga_gain(device, vga_gain);
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_set_vga_gain() failed: %s (%d)\n", airspy_error_name(result), result);
-		//usage();
-		//return EXIT_FAILURE;
 	}
 
 	printf("call airspy_set_mixer_gain(%u)\n", mixer_gain);
 	result = airspy_set_mixer_gain(device, mixer_gain);
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_set_mixer_gain() failed: %s (%d)\n", airspy_error_name(result), result);
-		//usage();
-		//return EXIT_FAILURE;
 	}
 
 	printf("call airspy_set_lna_gain(%u)\n", lna_gain);
 	result = airspy_set_lna_gain(device, lna_gain);
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_set_lna_gain() failed: %s (%d)\n", airspy_error_name(result), result);
-		//usage();
-		//return EXIT_FAILURE;
 	}
 
 	result = airspy_start_rx(device, rx_callback, NULL);
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_start_rx() failed: %s (%d)\n", airspy_error_name(result), result);
-		usage();
+		airspy_close(device);
+		airspy_exit();
 		return EXIT_FAILURE;
 	}
 
@@ -610,10 +646,11 @@ int main(int argc, char** argv)
 	result = airspy_set_freq(device, freq_hz);
 	if( result != AIRSPY_SUCCESS ) {
 		printf("airspy_set_freq() failed: %s (%d)\n", airspy_error_name(result), result);
-		usage();
+		airspy_close(device);
+		airspy_exit();
 		return EXIT_FAILURE;
 	}
-	
+
 	if( limit_num_samples ) {
 		printf("samples_to_xfer %s/%sMio\n", u64toa(samples_to_xfer, &ascii_u64_data1), u64toa((samples_to_xfer/FREQ_ONE_MHZ), &ascii_u64_data2) );
 	}
@@ -689,7 +726,7 @@ int main(int argc, char** argv)
 			/* Get size of file */
 			file_pos = ftell(fd);
 			/* Update Wav Header */
-			wave_file_hdr.hdr.size = file_pos+8;
+			wave_file_hdr.hdr.size = file_pos-8;
 			wave_file_hdr.fmt_chunk.dwSamplesPerSec = (uint32_t)DEFAULT_SAMPLE_RATE_HZ;
 			wave_file_hdr.fmt_chunk.dwAvgBytesPerSec = wave_file_hdr.fmt_chunk.dwSamplesPerSec*2;
 			wave_file_hdr.data_chunk.chunkSize = file_pos - sizeof(t_wav_file_hdr);
diff --git a/airspy-tools/src/airspy_si5351c.c b/airspy-tools/src/airspy_si5351c.c
index bf1baa1..4d32afd 100644
--- a/airspy-tools/src/airspy_si5351c.c
+++ b/airspy-tools/src/airspy_si5351c.c
@@ -24,14 +24,22 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include <getopt.h>
 
+#ifndef bool
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+
 static void usage() {
 	printf("\nUsage:\n");
 	printf("\t-c, --config: print textual configuration information\n");
 	printf("\t-n, --register <n>: set register number for subsequent read/write operations\n");
 	printf("\t-r, --read: read register specified by last -n argument, or all registers\n");
 	printf("\t-w, --write <v>: write register specified by last -n argument with value <v>\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
 	printf("\nExamples:\n");
 	printf("\t<command> -n 12 -r    # reads from register 12\n");
 	printf("\t<command> -r          # reads all registers\n");
@@ -57,6 +65,33 @@ int parse_int(char* const s, uint8_t* const value) {
 	}
 }
 
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
+		return AIRSPY_SUCCESS;
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
 int dump_register(struct airspy_device* device, const uint8_t register_number) {
 	uint8_t register_value;
 	int result;
@@ -180,26 +215,64 @@ int dump_configuration(struct airspy_device* device) {
 	return AIRSPY_SUCCESS;
 }
 
+bool serial_number = false;
+uint64_t serial_number_val;
+
 int main(int argc, char** argv) {
 	int opt;
 	int n_opt = 0;
 	uint8_t register_number = 0;
 	uint8_t register_value;
 	struct airspy_device* device = NULL;
-	int option_index = 0;
+	int option_index;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
+	int result;
+
+	option_index = 0;
+	while( (opt = getopt_long(argc, argv,  "cn:rw:s:", long_options, &option_index)) != EOF )
+	{
+		switch( opt ) {
 
-	int result = airspy_init();
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+		}
+	}
+
+	result = airspy_init();
 	if( result ) {
 		printf("airspy_init() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+		return EXIT_FAILURE;
 	}
-	
-	result = airspy_open(&device);
-	if( result ) {
-		printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			airspy_exit();
+			return EXIT_FAILURE;
+		}
 	}
 
+	result = AIRSPY_ERROR_OTHER;
+	option_index = 0;
+	optind = 0;
 	while( (opt = getopt_long(argc, argv, "cn:rw:", long_options, &option_index)) != EOF ) {
 		switch( opt ) {
 		case 'n':
@@ -230,16 +303,22 @@ int main(int argc, char** argv) {
 			usage();
 		}
 		
-		if( result != AIRSPY_SUCCESS ) {
-			printf("argument error: %s (%d)\n", airspy_error_name(result), result);
+		if( result != AIRSPY_SUCCESS )
+		{
 			break;
 		}
 	}
-	
+
+	if( result != AIRSPY_SUCCESS )
+	{
+		usage();
+	}
+
 	result = airspy_close(device);
 	if( result ) {
 		printf("airspy_close() failed: %s (%d)\n", airspy_error_name(result), result);
-		return -1;
+		airspy_exit();
+		return EXIT_FAILURE;
 	}
 	
 	airspy_exit();
diff --git a/airspy-tools/src/airspy_spiflash.c b/airspy-tools/src/airspy_spiflash.c
index 218ab0e..1533e2c 100644
--- a/airspy-tools/src/airspy_spiflash.c
+++ b/airspy-tools/src/airspy_spiflash.c
@@ -89,6 +89,33 @@ int parse_u32(char* s, uint32_t* const value)
 	}
 }
 
+int parse_u64(char* s, uint64_t* const value) {
+	uint_fast8_t base = 10;
+	char* s_end;
+	uint64_t u64_value;
+
+	if( strlen(s) > 2 ) {
+		if( s[0] == '0' ) {
+			if( (s[1] == 'x') || (s[1] == 'X') ) {
+				base = 16;
+				s += 2;
+			} else if( (s[1] == 'b') || (s[1] == 'B') ) {
+				base = 2;
+				s += 2;
+			}
+		}
+	}
+
+	s_end = s;
+	u64_value = strtoull(s, &s_end, base);
+	if( (s != s_end) && (*s_end == 0) ) {
+		*value = u64_value;
+		return AIRSPY_SUCCESS;
+	} else {
+		return AIRSPY_ERROR_INVALID_PARAM;
+	}
+}
+
 static void usage()
 {
 	printf("Usage:\n");
@@ -96,8 +123,12 @@ static void usage()
 	printf("\t-l, --length <n>: number of bytes to read (default: 0)\n");
 	printf("\t-r <filename>: Read data into file (SPIFI@0x80000000).\n");
 	printf("\t-w <filename>: Write data from file.\n");
+	printf("\t[-s serial_number_64bits]: Open board with specified 64bits serial number.\n");
 }
 
+bool serial_number = false;
+uint64_t serial_number_val;
+
 int main(int argc, char** argv)
 {
 	int opt;
@@ -114,8 +145,11 @@ int main(int argc, char** argv)
 	FILE* fd = NULL;
 	bool read = false;
 	bool write = false;
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
 
-	while ((opt = getopt_long(argc, argv, "a:l:r:w:", long_options, &option_index)) != EOF) {
+	while ((opt = getopt_long(argc, argv, "a:l:r:w:s:", long_options, &option_index)) != EOF)
+	{
 		switch (opt) {
 		case 'a':
 			result = parse_u32(optarg, &address);
@@ -135,6 +169,14 @@ int main(int argc, char** argv)
 			path = optarg;
 			break;
 
+		case 's':
+			serial_number = true;
+			result = parse_u64(optarg, &serial_number_val);
+			serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+			serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+			printf("Board serial number to open: 0x%08X%08X\n", serial_number_msb_val, serial_number_lsb_val);
+			break;
+
 		default:
 			fprintf(stderr, "opt error: %d\n", opt);
 			usage();
@@ -218,10 +260,22 @@ int main(int argc, char** argv)
 		return EXIT_FAILURE;
 	}
 
-	result = airspy_open(&device);
-	if (result != AIRSPY_SUCCESS) {
-		fprintf(stderr, "airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
-		return EXIT_FAILURE;
+	if(serial_number == true)
+	{
+		result = airspy_open_sn(&device, serial_number_val);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open_sn() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			return EXIT_FAILURE;
+		}
+	}else
+	{
+		result = airspy_open(&device);
+		if( result != AIRSPY_SUCCESS ) {
+			printf("airspy_open() failed: %s (%d)\n", airspy_error_name(result), result);
+			usage();
+			return EXIT_FAILURE;
+		}
 	}
 
 	if (read) 
diff --git a/libairspy/CMakeLists.txt b/libairspy/CMakeLists.txt
index 1ae096d..08fbc9c 100644
--- a/libairspy/CMakeLists.txt
+++ b/libairspy/CMakeLists.txt
@@ -23,10 +23,23 @@
 
 cmake_minimum_required(VERSION 2.8)
 project(libairspy C)
-file(READ ${CMAKE_CURRENT_SOURCE_DIR}/src/airspy.h _airspy_h_contents)
+file(READ ${CMAKE_CURRENT_SOURCE_DIR}/src/airspy.h AIRSPY_H_CONTENTS)
+
+STRING(REGEX MATCH "\#define AIRSPY_VER_MAJOR[ \t]+([0-9]+)" AIRSPY_VER_MJ ${AIRSPY_H_CONTENTS})
+STRING(REGEX MATCH "([0-9]+)" AIRSPY_VER_MJ ${AIRSPY_VER_MJ})
+
+STRING(REGEX MATCH "\#define AIRSPY_VER_MINOR[ \t]+([0-9]+)" AIRSPY_VER_MI ${AIRSPY_H_CONTENTS})
+STRING(REGEX MATCH "([0-9]+)" AIRSPY_VER_MI ${AIRSPY_VER_MI})
+
+STRING(REGEX MATCH "\#define AIRSPY_VER_REVISION[ \t]+([0-9]+)" AIRSPY_VER_RE ${AIRSPY_H_CONTENTS})
+STRING(REGEX MATCH "([0-9]+)" AIRSPY_VER_RE ${AIRSPY_VER_RE})
+
+set(AIRSPY_VER_MAJOR ${AIRSPY_VER_MJ})
+set(AIRSPY_VER_MINOR ${AIRSPY_VER_MI})
+set(AIRSPY_VER_REVISION ${AIRSPY_VER_RE})
 
 set(PACKAGE libairspy)
-set(VERSION_STRING ${MAJOR_VERSION}.${MINOR_VERSION})
+set(VERSION_STRING ${AIRSPY_VER_MAJOR}.${AIRSPY_VER_MINOR})
 set(VERSION ${VERSION_STRING})
 set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../cmake/modules)
 set(CMAKE_C_FLAGS_RELEASE "-O2")
diff --git a/libairspy/src/CMakeLists.txt b/libairspy/src/CMakeLists.txt
index b86063d..0ed03eb 100644
--- a/libairspy/src/CMakeLists.txt
+++ b/libairspy/src/CMakeLists.txt
@@ -1,8 +1,8 @@
 #
 # Copyright (c) 2012, Jared Boone <jared@sharebrained.com>
 # Copyright (c) 2013, Michael Ossmann <mike@ossmann.com>
-# Copyright (c) 2013, Benjamin Vernoux <bvernoux@airspy.com>
 # Copyright (c) 2013, Youssef Touil <youssef@airspy.com>
+# Copyright (c) 2013/2014, Benjamin Vernoux <bvernoux@airspy.com>
 #
 # This file is part of AirSpy (based on HackRF project).
 # 
@@ -51,6 +51,12 @@ add_library(airspy SHARED ${c_sources} ${AIRSPY_DLL_SRCS})
 set_target_properties(airspy PROPERTIES VERSION ${AIRSPY_VER_MAJOR}.${AIRSPY_VER_MINOR}.${AIRSPY_VER_REVISION})
 set_target_properties(airspy PROPERTIES SOVERSION 0)
 
+if( ${WIN32} )
+set_target_properties(airspy PROPERTIES
+                      RUNTIME_OUTPUT_DIRECTORY_RELEASE ../../airspy-tools/src
+                      )
+endif( ${WIN32} )
+
 # Static library
 add_library(airspy-static STATIC ${c_sources})
 if(MSVC)
diff --git a/libairspy/src/airspy.c b/libairspy/src/airspy.c
index ff31d5e..a23cae4 100644
--- a/libairspy/src/airspy.c
+++ b/libairspy/src/airspy.c
@@ -22,6 +22,7 @@ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABI
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
+#include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include <libusb.h>
@@ -65,6 +66,7 @@ typedef struct {
 
 typedef struct airspy_device
 {
+	libusb_context* usb_context;
 	libusb_device_handle* usb_device;
 	struct libusb_transfer** transfers;
 	airspy_sample_block_cb_fn callback;
@@ -85,16 +87,21 @@ typedef struct airspy_device
 	iqconveter_int16_t *cnv_i;
 	void* ctx;
 	enum airspy_sample_type sample_type;
-	libusb_context* usb_context;
 } airspy_device_t;
 
 static const uint16_t airspy_usb_vid = 0x1d50;
 static const uint16_t airspy_usb_pid = 0x60a1;
 
 #define STR_PRODUCT_AIRSPY_SIZE (6)
-const unsigned char str_product_airspy[STR_PRODUCT_AIRSPY_SIZE] = 
+static const char str_product_airspy[STR_PRODUCT_AIRSPY_SIZE] = 
 { 'A', 'I', 'R', 'S', 'P', 'Y' };
 
+#define STR_PREFIX_SERIAL_AIRSPY_SIZE (10)
+static const char str_prefix_serial_airspy[STR_PREFIX_SERIAL_AIRSPY_SIZE] =
+{ 'A', 'I', 'R', 'S', 'P', 'Y', ' ', 'S', 'N', ':' };
+
+#define SERIAL_AIRSPY_EXPECTED_SIZE (26)
+
 static int cancel_transfers(airspy_device_t* device)
 {
 	uint32_t transfer_index;
@@ -186,14 +193,14 @@ static int allocate_transfers(airspy_device_t* const device)
 			}
 
 			libusb_fill_bulk_transfer(
-				device->transfers[transfer_index],
-				device->usb_device,
-				0,
-				(unsigned char*)malloc(device->buffer_size),
-				device->buffer_size,
-				NULL,
-				device,
-				0
+			device->transfers[transfer_index],
+			device->usb_device,
+			0,
+			(unsigned char*)malloc(device->buffer_size),
+			device->buffer_size,
+			NULL,
+			device,
+			0
 			);
 
 			if( device->transfers[transfer_index]->buffer == NULL )
@@ -405,7 +412,7 @@ static void* transfer_threadproc(void* arg)
 		if (error < 0)
 		{
 			if (error != LIBUSB_ERROR_INTERRUPTED)
-				device->streaming = false;
+			device->streaming = false;
 		}
 	}
 
@@ -481,106 +488,137 @@ static void airspy_open_exit(airspy_device_t* device)
 		device->usb_device = NULL;
 	}
 	libusb_exit(device->usb_context);
+	device->usb_context = NULL;
 }
 
-static libusb_device_handle* airspy_open_device(libusb_context* usb_context,
-																								int* ret,
-																								uint16_t vid,
-																								uint16_t pid,
-																								uint64_t serial_number)
+static void airspy_open_device(airspy_device_t* device,
+								int* ret,
+								uint16_t vid,
+								uint16_t pid,
+								uint64_t serial_number_val)
 {
+	int i;
 	int result;
-	libusb_device_handle* usb_device;
-	unsigned char str_desc[STR_DESCRIPTOR_SIZE+1] = { 0 };
-
-	if(serial_number == SERIAL_NUMBER_UNUSED)
+	libusb_device_handle** libusb_dev_handle;
+	int serial_number_len;
+	libusb_device_handle* dev_handle;
+	libusb_device *dev;
+	libusb_device** devices = NULL;
+
+	ssize_t cnt;
+	int serial_descriptor_index;
+	struct libusb_device_descriptor device_descriptor;
+	char serial_number_expected[SERIAL_AIRSPY_EXPECTED_SIZE+1];
+	unsigned char serial_number[SERIAL_AIRSPY_EXPECTED_SIZE+1];
+	uint32_t serial_number_msb_val;
+	uint32_t serial_number_lsb_val;
+
+	libusb_dev_handle = &device->usb_device;
+	*libusb_dev_handle = NULL;
+
+	cnt = libusb_get_device_list(device->usb_context, &devices);
+	if (cnt < 0)
 	{
-		// TODO: Do proper scanning of available devices.
-		usb_device = libusb_open_device_with_vid_pid(usb_context, vid, pid);
-		if( usb_device == NULL )
-		{
-			*ret = AIRSPY_ERROR_NOT_FOUND;
-			return NULL;
-		}
+		*ret = AIRSPY_ERROR_NOT_FOUND;
+		return;
+	}
 
-		/* Get Product Descriptor */
-		result = libusb_get_string_descriptor_ascii(usb_device, USB_PRODUCT_ID, str_desc, STR_DESCRIPTOR_SIZE);
-		if( result != 0 )
-		{
-			/* Check Product corresponds to AIRSPY product */
-			result = memcmp(str_desc, str_product_airspy, STR_PRODUCT_AIRSPY_SIZE);
-			if(result != 0)
-			{
-				libusb_close(usb_device);
-				*ret = AIRSPY_ERROR_NOT_FOUND;
-				return NULL;
-			}
-		}else
-		{
-			libusb_close(usb_device);
-			*ret = AIRSPY_ERROR_LIBUSB;
-			return NULL;
-		}
-	}else
+	i = 0;
+	while( (dev = devices[i++]) != NULL )
 	{
-		// TODO: Do proper scanning of available devices, searching unit with specified serial number.
-		usb_device = libusb_open_device_with_vid_pid(usb_context, vid, pid);
-		if(usb_device == NULL)
-		{
-			*ret = AIRSPY_ERROR_NOT_FOUND;
-			return NULL;
-		}
+		libusb_get_device_descriptor(dev, &device_descriptor);
 
-		/* Get Product Descriptor */
-		result = libusb_get_string_descriptor_ascii(usb_device, USB_PRODUCT_ID, str_desc, STR_DESCRIPTOR_SIZE);
-		if( result != 0 )
+		if ((device_descriptor.idVendor == vid) &&
+			(device_descriptor.idProduct == pid))
 		{
-			/* Check Product corresponds to AIRSPY product */
-			result = memcmp(str_desc, str_product_airspy, STR_PRODUCT_AIRSPY_SIZE);
-			if(result != 0)
+			if (serial_number_val != SERIAL_NUMBER_UNUSED)
 			{
-				libusb_close(usb_device);
-				*ret = AIRSPY_ERROR_NOT_FOUND;
-				return NULL;
+				serial_descriptor_index = device_descriptor.iSerialNumber;
+				if (serial_descriptor_index > 0)
+				{
+					if (libusb_open(dev, libusb_dev_handle) != 0)
+					{
+						*libusb_dev_handle = NULL;
+						continue;
+					}
+					dev_handle = *libusb_dev_handle;
+					serial_number_len = libusb_get_string_descriptor_ascii(dev_handle,
+																			  serial_descriptor_index,
+																			  serial_number,
+																			  sizeof(serial_number));
+					if (serial_number_len == SERIAL_AIRSPY_EXPECTED_SIZE)
+					{
+						serial_number[SERIAL_AIRSPY_EXPECTED_SIZE] = 0;
+						serial_number_msb_val = (uint32_t)(serial_number_val >> 32);
+						serial_number_lsb_val = (uint32_t)(serial_number_val & 0xFFFFFFFF);
+
+						sprintf(serial_number_expected, "%s%08X%08X",
+								str_prefix_serial_airspy,
+								serial_number_msb_val,
+								serial_number_lsb_val);
+
+						if (strncmp((const char*)serial_number, serial_number_expected, SERIAL_AIRSPY_EXPECTED_SIZE) == 0)
+						{
+							break;
+						} else
+						{
+							libusb_close(dev_handle);
+							*libusb_dev_handle = NULL;
+							continue;
+						}
+					}else 
+					{
+						libusb_close(dev_handle);
+						*libusb_dev_handle = NULL;
+						continue;
+					}
+				}
+			}else 
+			{
+				if (libusb_open(dev, libusb_dev_handle) == 0)
+				{
+					dev_handle = *libusb_dev_handle;
+					result = libusb_set_configuration(dev_handle, 1);
+					if (result != 0)
+					{
+						libusb_close(dev_handle);
+						*libusb_dev_handle = NULL;
+						continue;
+					}
+					result = libusb_claim_interface(dev_handle, 0);
+					if (result != 0)
+					{
+						libusb_close(dev_handle);
+						*libusb_dev_handle = NULL;
+						continue;
+					}
+					break;
+				}
 			}
-		}else
-		{
-			libusb_close(usb_device);
-			*ret = AIRSPY_ERROR_LIBUSB;
-			return NULL;
 		}
 	}
+	libusb_free_device_list(devices, 1);
 
-	result = libusb_set_configuration(usb_device, 1);
-	if( result != 0 )
-	{
-		libusb_close(usb_device);
-		*ret = AIRSPY_ERROR_LIBUSB;
-		return NULL;
-	}
-
-	result = libusb_claim_interface(usb_device, 0);
-	if( result != 0 )
+	dev_handle = device->usb_device;
+	if (dev_handle == NULL)
 	{
-		libusb_close(usb_device);
-		*ret = AIRSPY_ERROR_LIBUSB;
-		return NULL;
+		*ret = AIRSPY_ERROR_NOT_FOUND;
+		return;
 	}
 
 	*ret = AIRSPY_SUCCESS;
-	return usb_device;
+	return;
 }
 
 static int airspy_open_init(airspy_device_t** device, uint64_t serial_number)
 {
-	libusb_device_handle* usb_device;
 	airspy_device_t* lib_device;
 	int libusb_error;
 	int result;
 
 	*device = NULL;
 	lib_device = NULL;
-	lib_device = (airspy_device_t*)malloc(sizeof(*lib_device));
+	lib_device = (airspy_device_t*)malloc(sizeof(airspy_device_t));
 	if(lib_device == NULL)
 	{
 		return AIRSPY_ERROR_NO_MEM;
@@ -593,19 +631,18 @@ static int airspy_open_init(airspy_device_t** device, uint64_t serial_number)
 		return AIRSPY_ERROR_LIBUSB;
 	}
 
-	usb_device = airspy_open_device(lib_device->usb_context,
-																	&result,
-																	airspy_usb_vid,
-																	airspy_usb_pid,
-																	serial_number);
-	if(usb_device == NULL)
+	airspy_open_device(lib_device,
+										&result,
+										airspy_usb_vid,
+										airspy_usb_pid,
+										serial_number);
+	if(lib_device->usb_device == NULL)
 	{
 		libusb_exit(lib_device->usb_context);
 		free(lib_device);
 		return result;
 	}
 
-	lib_device->usb_device = usb_device;
 	lib_device->transfers = NULL;
 	lib_device->callback = NULL;
 	/*
@@ -644,78 +681,76 @@ extern "C"
 {
 #endif
 
-void ADDCALL airspy_lib_version(airspy_lib_version_t* lib_version)
-{
-	lib_version->major_version = AIRSPY_VER_MAJOR;
-	lib_version->minor_version = AIRSPY_VER_MINOR;
-	lib_version->revision = AIRSPY_VER_REVISION;
-}
-
-/* airspy_init() deprecated */
-int ADDCALL airspy_init(void)
-{
-	return AIRSPY_SUCCESS;
-}
-
-/* airspy_exit() deprecated */
-int ADDCALL airspy_exit(void)
-{
-	return AIRSPY_SUCCESS;
-}
+	void ADDCALL airspy_lib_version(airspy_lib_version_t* lib_version)
+	{
+		lib_version->major_version = AIRSPY_VER_MAJOR;
+		lib_version->minor_version = AIRSPY_VER_MINOR;
+		lib_version->revision = AIRSPY_VER_REVISION;
+	}
 
+	/* airspy_init() deprecated */
+	int ADDCALL airspy_init(void)
+	{
+		return AIRSPY_SUCCESS;
+	}
 
-int ADDCALL airspy_open_sn(airspy_device_t** device, uint64_t serial_number)
-{
-	int result;
+	/* airspy_exit() deprecated */
+	int ADDCALL airspy_exit(void)
+	{
+		return AIRSPY_SUCCESS;
+	}
 
-	result = airspy_open_init(device, serial_number);
-	return result;
-}
+	int ADDCALL airspy_open_sn(airspy_device_t** device, uint64_t serial_number)
+	{
+		int result;
 
-int ADDCALL airspy_open(airspy_device_t** device)
-{
-	int result;
+		result = airspy_open_init(device, serial_number);
+		return result;
+	}
 
-	result = airspy_open_init(device, SERIAL_NUMBER_UNUSED);
-	return result;
-}
+	int ADDCALL airspy_open(airspy_device_t** device)
+	{
+		int result;
 
-int ADDCALL airspy_close(airspy_device_t* device)
-{
-	int result;
+		result = airspy_open_init(device, SERIAL_NUMBER_UNUSED);
+		return result;
+	}
 
-	result = AIRSPY_SUCCESS;
-	
-	if(device != NULL)
+	int ADDCALL airspy_close(airspy_device_t* device)
 	{
-		result = airspy_stop_rx(device);
+		int result;
 
-		free_transfers(device);
+		result = AIRSPY_SUCCESS;
+		
+		if(device != NULL)
+		{
+			result = airspy_stop_rx(device);
 
-		iqconverter_float_free(device->cnv_f);
-		iqconverter_int16_free(device->cnv_i);
+			free_transfers(device);
 
-		pthread_cond_destroy(&device->conversion_cv);
-		pthread_mutex_destroy(&device->conversion_mp);
+			iqconverter_float_free(device->cnv_f);
+			iqconverter_int16_free(device->cnv_i);
 
-		airspy_open_exit(device);
-		free(device);
-	}
+			pthread_cond_destroy(&device->conversion_cv);
+			pthread_mutex_destroy(&device->conversion_mp);
 
-	return result;
-}
+			airspy_open_exit(device);
+			free(device);
+		}
 
+		return result;
+	}
 
-int ADDCALL airspy_set_samplerate(airspy_device_t* device, airspy_samplerate_t samplerate)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_samplerate(airspy_device_t* device, airspy_samplerate_t samplerate)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_SAMPLERATE,
@@ -724,20 +759,20 @@ int ADDCALL airspy_set_samplerate(airspy_device_t* device, airspy_samplerate_t s
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_receiver_mode(airspy_device_t* device, receiver_mode_t value)
-{
-	int result;
-	result = libusb_control_transfer(
+	int ADDCALL airspy_set_receiver_mode(airspy_device_t* device, receiver_mode_t value)
+	{
+		int result;
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_RECEIVER_MODE,
@@ -746,49 +781,49 @@ int ADDCALL airspy_set_receiver_mode(airspy_device_t* device, receiver_mode_t va
 		NULL,
 		0,
 		0
-	);
+		);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
-
-int ADDCALL airspy_start_rx(airspy_device_t* device, airspy_sample_block_cb_fn callback, void* ctx)
-{
-	int result;
 
-	result = airspy_set_receiver_mode(device, RECEIVER_MODE_RX);
-	if( result == AIRSPY_SUCCESS )
+	int ADDCALL airspy_start_rx(airspy_device_t* device, airspy_sample_block_cb_fn callback, void* ctx)
 	{
-		device->ctx = ctx;
-		result = create_io_threads(device, callback);
-	}
-	return result;
-}
+		int result;
 
-int ADDCALL airspy_stop_rx(airspy_device_t* device)
-{
-	int result1, result2;
-	result1 = kill_io_threads(device);
+		result = airspy_set_receiver_mode(device, RECEIVER_MODE_RX);
+		if( result == AIRSPY_SUCCESS )
+		{
+			device->ctx = ctx;
+			result = create_io_threads(device, callback);
+		}
+		return result;
+	}
 
-	result2 = airspy_set_receiver_mode(device, RECEIVER_MODE_OFF);
-	if (result2 != AIRSPY_SUCCESS)
+	int ADDCALL airspy_stop_rx(airspy_device_t* device)
 	{
-		return result2;
+		int result1, result2;
+		result1 = kill_io_threads(device);
+
+		result2 = airspy_set_receiver_mode(device, RECEIVER_MODE_OFF);
+		if (result2 != AIRSPY_SUCCESS)
+		{
+			return result2;
+		}
+		return result1;
 	}
-	return result1;
-}
 
-int ADDCALL airspy_si5351c_read(airspy_device_t* device, uint8_t register_number, uint8_t* value)
-{
-	uint8_t temp_value;
-	int result;
+	int ADDCALL airspy_si5351c_read(airspy_device_t* device, uint8_t register_number, uint8_t* value)
+	{
+		uint8_t temp_value;
+		int result;
 
-	temp_value = 0;
-	result = libusb_control_transfer(
+		temp_value = 0;
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SI5351C_READ,
@@ -798,20 +833,20 @@ int ADDCALL airspy_si5351c_read(airspy_device_t* device, uint8_t register_number
 		1,
 		0);
 
-	if( result < 1 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		*value = temp_value;
-		return AIRSPY_SUCCESS;
+		if( result < 1 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			*value = temp_value;
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_si5351c_write(airspy_device_t* device, uint8_t register_number, uint8_t value)
-{
-	int result;
+	int ADDCALL airspy_si5351c_write(airspy_device_t* device, uint8_t register_number, uint8_t value)
+	{
+		int result;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SI5351C_WRITE,
@@ -821,19 +856,19 @@ int ADDCALL airspy_si5351c_write(airspy_device_t* device, uint8_t register_numbe
 		0,
 		0);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_r820t_read(airspy_device_t* device, uint8_t register_number, uint8_t* value)
-{
-	int result;
+	int ADDCALL airspy_r820t_read(airspy_device_t* device, uint8_t register_number, uint8_t* value)
+	{
+		int result;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_R820T_READ,
@@ -843,19 +878,19 @@ int ADDCALL airspy_r820t_read(airspy_device_t* device, uint8_t register_number, 
 		1,
 		0);
 
-	if( result < 1 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result < 1 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_r820t_write(airspy_device_t* device, uint8_t register_number, uint8_t value)
-{
-	int result;
-	
-	result = libusb_control_transfer(
+	int ADDCALL airspy_r820t_write(airspy_device_t* device, uint8_t register_number, uint8_t value)
+	{
+		int result;
+		
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_R820T_WRITE,
@@ -865,23 +900,23 @@ int ADDCALL airspy_r820t_write(airspy_device_t* device, uint8_t register_number,
 		0,
 		0);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_gpio_read(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value)
-{
-	int result;
-	uint8_t port_pin;
+	int ADDCALL airspy_gpio_read(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value)
+	{
+		int result;
+		uint8_t port_pin;
 
-	port_pin = ((uint8_t)port) << 5;
-	port_pin = port_pin | pin;
+		port_pin = ((uint8_t)port) << 5;
+		port_pin = port_pin | pin;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_GPIO_READ,
@@ -891,23 +926,23 @@ int ADDCALL airspy_gpio_read(airspy_device_t* device, airspy_gpio_port_t port, a
 		1,
 		0);
 
-	if( result < 1 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result < 1 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_gpio_write(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value)
-{
-	int result;
-	uint8_t port_pin;
+	int ADDCALL airspy_gpio_write(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value)
+	{
+		int result;
+		uint8_t port_pin;
 
-	port_pin = ((uint8_t)port) << 5;
-	port_pin = port_pin | pin;
+		port_pin = ((uint8_t)port) << 5;
+		port_pin = port_pin | pin;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_GPIO_WRITE,
@@ -917,24 +952,24 @@ int ADDCALL airspy_gpio_write(airspy_device_t* device, airspy_gpio_port_t port, 
 		0,
 		0);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
 
-int ADDCALL airspy_gpiodir_read(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value)
-{
-	int result;
-	uint8_t port_pin;
+	int ADDCALL airspy_gpiodir_read(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value)
+	{
+		int result;
+		uint8_t port_pin;
 
-	port_pin = ((uint8_t)port) << 5;
-	port_pin = port_pin | pin;
+		port_pin = ((uint8_t)port) << 5;
+		port_pin = port_pin | pin;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_GPIODIR_READ,
@@ -944,23 +979,23 @@ int ADDCALL airspy_gpiodir_read(airspy_device_t* device, airspy_gpio_port_t port
 		1,
 		0);
 
-	if( result < 1 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result < 1 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_gpiodir_write(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value)
-{
-	int result;
-	uint8_t port_pin;
+	int ADDCALL airspy_gpiodir_write(airspy_device_t* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value)
+	{
+		int result;
+		uint8_t port_pin;
 
-	port_pin = ((uint8_t)port) << 5;
-	port_pin = port_pin | pin;
+		port_pin = ((uint8_t)port) << 5;
+		port_pin = port_pin | pin;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_GPIODIR_WRITE,
@@ -970,18 +1005,18 @@ int ADDCALL airspy_gpiodir_write(airspy_device_t* device, airspy_gpio_port_t por
 		0,
 		0);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_spiflash_erase(airspy_device_t* device)
-{
-	int result;
-	result = libusb_control_transfer(
+	int ADDCALL airspy_spiflash_erase(airspy_device_t* device)
+	{
+		int result;
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SPIFLASH_ERASE,
@@ -991,24 +1026,24 @@ int ADDCALL airspy_spiflash_erase(airspy_device_t* device)
 		0,
 		0);
 
-	if (result != 0)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result != 0)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_spiflash_write(airspy_device_t* device, const uint32_t address, const uint16_t length, unsigned char* const data)
-{
-	int result;
-	
-	if (address > 0x0FFFFF)
+	int ADDCALL airspy_spiflash_write(airspy_device_t* device, const uint32_t address, const uint16_t length, unsigned char* const data)
 	{
-		return AIRSPY_ERROR_INVALID_PARAM;
-	}
+		int result;
+		
+		if (address > 0x0FFFFF)
+		{
+			return AIRSPY_ERROR_INVALID_PARAM;
+		}
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SPIFLASH_WRITE,
@@ -1018,19 +1053,19 @@ int ADDCALL airspy_spiflash_write(airspy_device_t* device, const uint32_t addres
 		length,
 		0);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_spiflash_read(airspy_device_t* device, const uint32_t address, const uint16_t length, unsigned char* data)
-{
-	int result;
+	int ADDCALL airspy_spiflash_read(airspy_device_t* device, const uint32_t address, const uint16_t length, unsigned char* data)
+	{
+		int result;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SPIFLASH_READ,
@@ -1040,18 +1075,18 @@ int ADDCALL airspy_spiflash_read(airspy_device_t* device, const uint32_t address
 		length,
 		0);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_board_id_read(airspy_device_t* device, uint8_t* value)
-{
-	int result;
-	result = libusb_control_transfer(
+	int ADDCALL airspy_board_id_read(airspy_device_t* device, uint8_t* value)
+	{
+		int result;
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_BOARD_ID_READ,
@@ -1061,21 +1096,21 @@ int ADDCALL airspy_board_id_read(airspy_device_t* device, uint8_t* value)
 		1,
 		0);
 
-	if (result < 1)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < 1)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_version_string_read(airspy_device_t* device, char* version, uint8_t length)
-{
-	int result;
+	int ADDCALL airspy_version_string_read(airspy_device_t* device, char* version, uint8_t length)
+	{
+		int result;
 
-	memset(version, 0, length);
+		memset(version, 0, length);
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_VERSION_STRING_READ,
@@ -1085,22 +1120,22 @@ int ADDCALL airspy_version_string_read(airspy_device_t* device, char* version, u
 		(length-1),
 		0);
 
-	if (result < 0)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else
-	{
-		return AIRSPY_SUCCESS;
+		if (result < 0)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else
+		{
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_board_partid_serialno_read(airspy_device_t* device, airspy_read_partid_serialno_t* read_partid_serialno)
-{
-	uint8_t length;
-	int result;
-	
-	length = sizeof(airspy_read_partid_serialno_t);
-	result = libusb_control_transfer(
+	int ADDCALL airspy_board_partid_serialno_read(airspy_device_t* device, airspy_read_partid_serialno_t* read_partid_serialno)
+	{
+		uint8_t length;
+		int result;
+		
+		length = sizeof(airspy_read_partid_serialno_t);
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_BOARD_PARTID_SERIALNO_READ,
@@ -1110,38 +1145,38 @@ int ADDCALL airspy_board_partid_serialno_read(airspy_device_t* device, airspy_re
 		length,
 		0);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
 
-		read_partid_serialno->part_id[0] = TO_LE(read_partid_serialno->part_id[0]);
-		read_partid_serialno->part_id[1] = TO_LE(read_partid_serialno->part_id[1]);
-		read_partid_serialno->serial_no[0] = TO_LE(read_partid_serialno->serial_no[0]);
-		read_partid_serialno->serial_no[1] = TO_LE(read_partid_serialno->serial_no[1]);
-		read_partid_serialno->serial_no[2] = TO_LE(read_partid_serialno->serial_no[2]);
-		read_partid_serialno->serial_no[3] = TO_LE(read_partid_serialno->serial_no[3]);
+			read_partid_serialno->part_id[0] = TO_LE(read_partid_serialno->part_id[0]);
+			read_partid_serialno->part_id[1] = TO_LE(read_partid_serialno->part_id[1]);
+			read_partid_serialno->serial_no[0] = TO_LE(read_partid_serialno->serial_no[0]);
+			read_partid_serialno->serial_no[1] = TO_LE(read_partid_serialno->serial_no[1]);
+			read_partid_serialno->serial_no[2] = TO_LE(read_partid_serialno->serial_no[2]);
+			read_partid_serialno->serial_no[3] = TO_LE(read_partid_serialno->serial_no[3]);
 
-		return AIRSPY_SUCCESS;
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_sample_type(struct airspy_device* device, enum airspy_sample_type sample_type)
-{
-	device->sample_type = sample_type;
-	return AIRSPY_SUCCESS;
-}
+	int ADDCALL airspy_set_sample_type(struct airspy_device* device, enum airspy_sample_type sample_type)
+	{
+		device->sample_type = sample_type;
+		return AIRSPY_SUCCESS;
+	}
 
-int ADDCALL airspy_set_freq(airspy_device_t* device, const uint32_t freq_hz)
-{
-	set_freq_params_t set_freq_params;
-	uint8_t length;
-	int result;
+	int ADDCALL airspy_set_freq(airspy_device_t* device, const uint32_t freq_hz)
+	{
+		set_freq_params_t set_freq_params;
+		uint8_t length;
+		int result;
 
-	set_freq_params.freq_hz = TO_LE(freq_hz);
-	length = sizeof(set_freq_params_t);
+		set_freq_params.freq_hz = TO_LE(freq_hz);
+		length = sizeof(set_freq_params_t);
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_FREQ,
@@ -1150,25 +1185,25 @@ int ADDCALL airspy_set_freq(airspy_device_t* device, const uint32_t freq_hz)
 		(unsigned char*)&set_freq_params,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_lna_gain(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_lna_gain(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_LNA_GAIN,
@@ -1177,25 +1212,25 @@ int ADDCALL airspy_set_lna_gain(airspy_device_t* device, uint8_t value)
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_mixer_gain(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_mixer_gain(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_MIXER_GAIN,
@@ -1204,25 +1239,25 @@ int ADDCALL airspy_set_mixer_gain(airspy_device_t* device, uint8_t value)
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_vga_gain(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_vga_gain(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_VGA_GAIN,
@@ -1231,25 +1266,25 @@ int ADDCALL airspy_set_vga_gain(airspy_device_t* device, uint8_t value)
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_lna_agc(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_lna_agc(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_LNA_AGC,
@@ -1258,25 +1293,25 @@ int ADDCALL airspy_set_lna_agc(airspy_device_t* device, uint8_t value)
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_mixer_agc(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	uint8_t retval;
-	uint8_t length;
+	int ADDCALL airspy_set_mixer_agc(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		uint8_t retval;
+		uint8_t length;
 
-	length = 1;
+		length = 1;
 
-	result = libusb_control_transfer(
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_IN | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_MIXER_AGC,
@@ -1285,20 +1320,20 @@ int ADDCALL airspy_set_mixer_agc(airspy_device_t* device, uint8_t value)
 		&retval,
 		length,
 		0
-	);
+		);
 
-	if (result < length)
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if (result < length)
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_set_rf_bias(airspy_device_t* device, uint8_t value)
-{
-	int result;
-	result = libusb_control_transfer(
+	int ADDCALL airspy_set_rf_bias(airspy_device_t* device, uint8_t value)
+	{
+		int result;
+		result = libusb_control_transfer(
 		device->usb_device,
 		LIBUSB_ENDPOINT_OUT | LIBUSB_REQUEST_TYPE_VENDOR | LIBUSB_RECIPIENT_DEVICE,
 		AIRSPY_SET_RF_BIAS_CMD,
@@ -1307,77 +1342,77 @@ int ADDCALL airspy_set_rf_bias(airspy_device_t* device, uint8_t value)
 		NULL,
 		0,
 		0
-	);
+		);
 
-	if( result != 0 )
-	{
-		return AIRSPY_ERROR_LIBUSB;
-	} else {
-		return AIRSPY_SUCCESS;
+		if( result != 0 )
+		{
+			return AIRSPY_ERROR_LIBUSB;
+		} else {
+			return AIRSPY_SUCCESS;
+		}
 	}
-}
 
-int ADDCALL airspy_is_streaming(airspy_device_t* device)
-{
-	return device->streaming == true;
-}
+	int ADDCALL airspy_is_streaming(airspy_device_t* device)
+	{
+		return device->streaming == true;
+	}
 
-const char* ADDCALL airspy_error_name(enum airspy_error errcode)
-{
-	switch(errcode)
+	const char* ADDCALL airspy_error_name(enum airspy_error errcode)
 	{
-	case AIRSPY_SUCCESS:
-		return "AIRSPY_SUCCESS";
+		switch(errcode)
+		{
+		case AIRSPY_SUCCESS:
+			return "AIRSPY_SUCCESS";
 
-	case AIRSPY_TRUE:
-		return "AIRSPY_TRUE";
+		case AIRSPY_TRUE:
+			return "AIRSPY_TRUE";
 
-	case AIRSPY_ERROR_INVALID_PARAM:
-		return "AIRSPY_ERROR_INVALID_PARAM";
+		case AIRSPY_ERROR_INVALID_PARAM:
+			return "AIRSPY_ERROR_INVALID_PARAM";
 
-	case AIRSPY_ERROR_NOT_FOUND:
-		return "AIRSPY_ERROR_NOT_FOUND";
+		case AIRSPY_ERROR_NOT_FOUND:
+			return "AIRSPY_ERROR_NOT_FOUND";
 
-	case AIRSPY_ERROR_BUSY:
-		return "AIRSPY_ERROR_BUSY";
+		case AIRSPY_ERROR_BUSY:
+			return "AIRSPY_ERROR_BUSY";
 
-	case AIRSPY_ERROR_NO_MEM:
-		return "AIRSPY_ERROR_NO_MEM";
+		case AIRSPY_ERROR_NO_MEM:
+			return "AIRSPY_ERROR_NO_MEM";
 
-	case AIRSPY_ERROR_LIBUSB:
-		return "AIRSPY_ERROR_LIBUSB";
+		case AIRSPY_ERROR_LIBUSB:
+			return "AIRSPY_ERROR_LIBUSB";
 
-	case AIRSPY_ERROR_THREAD:
-		return "AIRSPY_ERROR_THREAD";
+		case AIRSPY_ERROR_THREAD:
+			return "AIRSPY_ERROR_THREAD";
 
-	case AIRSPY_ERROR_STREAMING_THREAD_ERR:
-		return "AIRSPY_ERROR_STREAMING_THREAD_ERR";
+		case AIRSPY_ERROR_STREAMING_THREAD_ERR:
+			return "AIRSPY_ERROR_STREAMING_THREAD_ERR";
 
-	case AIRSPY_ERROR_STREAMING_STOPPED:
-		return "AIRSPY_ERROR_STREAMING_STOPPED";
+		case AIRSPY_ERROR_STREAMING_STOPPED:
+			return "AIRSPY_ERROR_STREAMING_STOPPED";
 
-	case AIRSPY_ERROR_OTHER:
-		return "AIRSPY_ERROR_OTHER";
+		case AIRSPY_ERROR_OTHER:
+			return "AIRSPY_ERROR_OTHER";
 
-	default:
-		return "airspy unknown error";
+		default:
+			return "airspy unknown error";
+		}
 	}
-}
 
-const char* ADDCALL airspy_board_id_name(enum airspy_board_id board_id)
-{
-	switch(board_id)
+	const char* ADDCALL airspy_board_id_name(enum airspy_board_id board_id)
 	{
-	case AIRSPY_BOARD_ID_PROTO_AIRSPY:
-		return "AIRSPY";
+		switch(board_id)
+		{
+		case AIRSPY_BOARD_ID_PROTO_AIRSPY:
+			return "AIRSPY";
 
-	case AIRSPY_BOARD_ID_INVALID:
-		return "Invalid Board ID";
+		case AIRSPY_BOARD_ID_INVALID:
+			return "Invalid Board ID";
 
-	default:
-		return "Unknown Board ID";
+		default:
+			return "Unknown Board ID";
+		}
 	}
-}
 
 #ifdef __cplusplus
 } // __cplusplus defined.
diff --git a/libairspy/src/airspy.h b/libairspy/src/airspy.h
index 8839669..fc3f3a6 100644
--- a/libairspy/src/airspy.h
+++ b/libairspy/src/airspy.h
@@ -28,7 +28,7 @@ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSI
 #include <stdint.h>
 #include "airspy_commands.h"
 
-#define AIRSPY_VERSION "1.0.0"
+#define AIRSPY_VERSION "1.0.0 Beta"
 #define AIRSPY_VER_MAJOR 1
 #define AIRSPY_VER_MINOR 0
 #define AIRSPY_VER_REVISION 0
@@ -122,13 +122,13 @@ extern ADDAPI int ADDCALL airspy_open(struct airspy_device** device);
 extern ADDAPI int ADDCALL airspy_close(struct airspy_device* device);
 
 extern ADDAPI int ADDCALL airspy_set_samplerate(struct airspy_device* device, airspy_samplerate_t samplerate);
- 
+
 extern ADDAPI int ADDCALL airspy_start_rx(struct airspy_device* device, airspy_sample_block_cb_fn callback, void* rx_ctx);
 extern ADDAPI int ADDCALL airspy_stop_rx(struct airspy_device* device);
 
 /* return AIRSPY_TRUE if success */
 extern ADDAPI int ADDCALL airspy_is_streaming(struct airspy_device* device);
- 
+
 extern ADDAPI int ADDCALL airspy_si5351c_write(struct airspy_device* device, uint8_t register_number, uint8_t value);
 extern ADDAPI int ADDCALL airspy_si5351c_read(struct airspy_device* device, uint8_t register_number, uint8_t* value);
 
@@ -139,7 +139,7 @@ extern ADDAPI int ADDCALL airspy_r820t_read(struct airspy_device* device, uint8_
 extern ADDAPI int ADDCALL airspy_gpio_write(struct airspy_device* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value);
 /* Parameter value corresponds to GPIO state 0 or 1 */
 extern ADDAPI int ADDCALL airspy_gpio_read(struct airspy_device* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value);
- 
+
 /* Parameter value shall be 0=GPIO Input direction or 1=GPIO Output direction */
 extern ADDAPI int ADDCALL airspy_gpiodir_write(struct airspy_device* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t value);
 extern ADDAPI int ADDCALL airspy_gpiodir_read(struct airspy_device* device, airspy_gpio_port_t port, airspy_gpio_pin_t pin, uint8_t* value);
@@ -147,7 +147,7 @@ extern ADDAPI int ADDCALL airspy_gpiodir_read(struct airspy_device* device, airs
 extern ADDAPI int ADDCALL airspy_spiflash_erase(struct airspy_device* device);
 extern ADDAPI int ADDCALL airspy_spiflash_write(struct airspy_device* device, const uint32_t address, const uint16_t length, unsigned char* const data);
 extern ADDAPI int ADDCALL airspy_spiflash_read(struct airspy_device* device, const uint32_t address, const uint16_t length, unsigned char* data);
-		
+
 extern ADDAPI int ADDCALL airspy_board_id_read(struct airspy_device* device, uint8_t* value);
 extern ADDAPI int ADDCALL airspy_version_string_read(struct airspy_device* device, char* version, uint8_t length);
 
diff --git a/libairspy/vc/airspy.sln b/libairspy/vc/airspy.sln
deleted file mode 100644
index 89f031b..0000000
--- a/libairspy/vc/airspy.sln
+++ /dev/null
@@ -1,21 +0,0 @@
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 2013
-VisualStudioVersion = 12.0.21005.1
-MinimumVisualStudioVersion = 10.0.40219.1
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy", "airspy.vcxproj", "{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}"
-EndProject
-Global
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|Win32 = Debug|Win32
-		Release|Win32 = Release|Win32
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Debug|Win32.ActiveCfg = Debug|Win32
-		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Debug|Win32.Build.0 = Debug|Win32
-		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Release|Win32.ActiveCfg = Release|Win32
-		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Release|Win32.Build.0 = Release|Win32
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-EndGlobal
diff --git a/libairspy/vc/airspy.vcxproj b/libairspy/vc/airspy.vcxproj
deleted file mode 100644
index 7108d1d..0000000
--- a/libairspy/vc/airspy.vcxproj
+++ /dev/null
@@ -1,298 +0,0 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="MinSizeRel|Win32">
-      <Configuration>MinSizeRel</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="RelWithDebInfo|Win32">
-      <Configuration>RelWithDebInfo</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGUID>{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}</ProjectGUID>
-    <Keyword>Win32Proj</Keyword>
-    <Platform>Win32</Platform>
-    <ProjectName>airspy</ProjectName>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseOfMfc>false</UseOfMfc>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v120</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup>
-    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
-    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">airspy</TargetName>
-    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.dll</TargetExt>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
-    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
-    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">airspy</TargetName>
-    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.dll</TargetExt>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
-    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\airspy\host\libairspy\src\MinSizeRel\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">airspy.dir\MinSizeRel\</IntDir>
-    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">airspy</TargetName>
-    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">.dll</TargetExt>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkIncremental>
-    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">true</GenerateManifest>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\airspy\host\libairspy\src\RelWithDebInfo\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">airspy.dir\RelWithDebInfo\</IntDir>
-    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">airspy</TargetName>
-    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">.dll</TargetExt>
-    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</LinkIncremental>
-    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">true</GenerateManifest>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <LibraryPath>..\..\libusbx-1.0.18-win\MS32\dll;..\..\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
-    <IncludePath>..\..\libusbx-1.0.18-win\include\libusbx-1.0;..\..\libpthread-2-9-1-win\include;$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(WindowsSdkDir_71A)include;$(FrameworkSDKDir_71A)include</IncludePath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
-    <LibraryPath>D:\airspy\host\libusbx-1.0.18-win\MS32\dll;D:\airspy\host\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
-    <LibraryPath>D:\airspy\host\libusbx-1.0.18-win\MS32\dll;D:\airspy\host\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <LibraryPath>..\..\libusbx-1.0.18-win\MS32\dll;..\..\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
-    <IncludePath>..\..\libusbx-1.0.18-win\include\libusbx-1.0;..\..\libpthread-2-9-1-win\include;$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(WindowsSDK_IncludePath);</IncludePath>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <CompileAs>CompileAsC</CompileAs>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <ExceptionHandling>
-      </ExceptionHandling>
-      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
-      <Optimization>Disabled</Optimization>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR="Debug";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Fast</FloatingPointModel>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR=\"Debug\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Midl>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <OutputDirectory>$(IntDir)</OutputDirectory>
-      <HeaderFileName>%(Filename).h</HeaderFileName>
-      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
-      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
-      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
-    </Midl>
-    <Link>
-      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
-      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <Version>
-      </Version>
-    </Link>
-    <ProjectReference>
-      <LinkLibraryDependencies>false</LinkLibraryDependencies>
-    </ProjectReference>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <CompileAs>CompileAsC</CompileAs>
-      <ExceptionHandling>
-      </ExceptionHandling>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <Optimization>MaxSpeed</Optimization>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>
-      </DebugInformationFormat>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-      <AdditionalOptions>/Qvec-report:2 %(AdditionalOptions)</AdditionalOptions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <FloatingPointModel>Fast</FloatingPointModel>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Midl>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <OutputDirectory>$(IntDir)</OutputDirectory>
-      <HeaderFileName>%(Filename).h</HeaderFileName>
-      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
-      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
-      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
-    </Midl>
-    <Link>
-      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
-      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <GenerateDebugInformation>false</GenerateDebugInformation>
-      <SubSystem>Console</SubSystem>
-      <Version>
-      </Version>
-    </Link>
-    <ProjectReference>
-      <LinkLibraryDependencies>false</LinkLibraryDependencies>
-    </ProjectReference>
-    <CustomBuildStep>
-      <Command>
-      </Command>
-    </CustomBuildStep>
-    <PostBuildEvent>
-      <Command>
-      </Command>
-    </PostBuildEvent>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
-      <CompileAs>CompileAsC</CompileAs>
-      <ExceptionHandling>
-      </ExceptionHandling>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <Optimization>MinSpace</Optimization>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <DebugInformationFormat>
-      </DebugInformationFormat>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <ObjectFileName>$(IntDir)</ObjectFileName>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Midl>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <OutputDirectory>$(IntDir)</OutputDirectory>
-      <HeaderFileName>%(Filename).h</HeaderFileName>
-      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
-      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
-      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
-    </Midl>
-    <Link>
-      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
-      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <GenerateDebugInformation>false</GenerateDebugInformation>
-      <ImportLibrary>D:/airspy/host/libairspy/src/MinSizeRel/airspy.lib</ImportLibrary>
-      <ProgramDataBaseFile>D:/airspy/host/libairspy/src/MinSizeRel/airspy.pdb</ProgramDataBaseFile>
-      <SubSystem>Console</SubSystem>
-      <Version>
-      </Version>
-    </Link>
-    <ProjectReference>
-      <LinkLibraryDependencies>false</LinkLibraryDependencies>
-    </ProjectReference>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
-    <ClCompile>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
-      <CompileAs>CompileAsC</CompileAs>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <ExceptionHandling>
-      </ExceptionHandling>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
-      <Optimization>MaxSpeed</Optimization>
-      <PrecompiledHeader>NotUsing</PrecompiledHeader>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <WarningLevel>Level3</WarningLevel>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <ObjectFileName>$(IntDir)</ObjectFileName>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
-    </ClCompile>
-    <ResourceCompile>
-      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ResourceCompile>
-    <Midl>
-      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-      <OutputDirectory>$(IntDir)</OutputDirectory>
-      <HeaderFileName>%(Filename).h</HeaderFileName>
-      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
-      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
-      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
-    </Midl>
-    <Link>
-      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
-      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
-      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <ImportLibrary>D:/airspy/host/libairspy/src/RelWithDebInfo/airspy.lib</ImportLibrary>
-      <ProgramDataBaseFile>D:/airspy/host/libairspy/src/RelWithDebInfo/airspy.pdb</ProgramDataBaseFile>
-      <SubSystem>Console</SubSystem>
-      <Version>
-      </Version>
-    </Link>
-    <ProjectReference>
-      <LinkLibraryDependencies>false</LinkLibraryDependencies>
-    </ProjectReference>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClCompile Include="..\src\airspy.c" />
-    <ClCompile Include="..\src\iqconverter_float.c" />
-    <ClCompile Include="..\src\iqconverter_int16.c" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\src\airspy.h" />
-    <ClInclude Include="..\src\airspy_commands.h" />
-    <ClInclude Include="..\src\filters.h" />
-    <ClInclude Include="..\src\iqconverter_float.h" />
-    <ClInclude Include="..\src\iqconverter_int16.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ResourceCompile Include="..\src\win32\airspy.rc" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_2013.sln b/libairspy/vc/airspy_2013.sln
new file mode 100644
index 0000000..ecbeb97
--- /dev/null
+++ b/libairspy/vc/airspy_2013.sln
@@ -0,0 +1,115 @@
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 2013
+VisualStudioVersion = 12.0.31101.0
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy", "airspy_2013.vcxproj", "{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "getopt", "getopt_2013.vcxproj", "{BCA73C04-5A94-420B-877E-FE9692740FA4}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_gpio", "airspy_gpio_2013.vcxproj", "{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_gpiodir", "airspy_gpiodir_2013.vcxproj", "{7FA0181B-9A58-44FB-93C4-E7447C532C14}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_info", "airspy_info_2013.vcxproj", "{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_lib_version", "airspy_lib_version_2013.vcxproj", "{FB70E4C7-4299-4B0B-81C5-5F081274F985}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_r820t", "airspy_r820t_2013.vcxproj", "{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_rx", "airspy_rx_2013.vcxproj", "{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_si5351c", "airspy_si5351c_2013.vcxproj", "{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}"
+EndProject
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "airspy_spiflash", "airspy_spiflash_2013.vcxproj", "{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Win32 = Debug|Win32
+		Debug|x64 = Debug|x64
+		Release|Win32 = Release|Win32
+		Release|x64 = Release|x64
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Debug|Win32.ActiveCfg = Debug|Win32
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Debug|Win32.Build.0 = Debug|Win32
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Debug|x64.ActiveCfg = Debug|Win32
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Release|Win32.ActiveCfg = Release|Win32
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Release|Win32.Build.0 = Release|Win32
+		{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}.Release|x64.ActiveCfg = Release|Win32
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Debug|Win32.ActiveCfg = Debug|Win32
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Debug|Win32.Build.0 = Debug|Win32
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Debug|x64.ActiveCfg = Debug|x64
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Debug|x64.Build.0 = Debug|x64
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Release|Win32.ActiveCfg = Release|Win32
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Release|Win32.Build.0 = Release|Win32
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Release|x64.ActiveCfg = Release|x64
+		{BCA73C04-5A94-420B-877E-FE9692740FA4}.Release|x64.Build.0 = Release|x64
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Debug|Win32.ActiveCfg = Debug|Win32
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Debug|Win32.Build.0 = Debug|Win32
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Debug|x64.ActiveCfg = Debug|x64
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Debug|x64.Build.0 = Debug|x64
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Release|Win32.ActiveCfg = Release|Win32
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Release|Win32.Build.0 = Release|Win32
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Release|x64.ActiveCfg = Release|x64
+		{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}.Release|x64.Build.0 = Release|x64
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Debug|Win32.ActiveCfg = Debug|Win32
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Debug|Win32.Build.0 = Debug|Win32
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Debug|x64.ActiveCfg = Debug|x64
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Debug|x64.Build.0 = Debug|x64
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Release|Win32.ActiveCfg = Release|Win32
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Release|Win32.Build.0 = Release|Win32
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Release|x64.ActiveCfg = Release|x64
+		{7FA0181B-9A58-44FB-93C4-E7447C532C14}.Release|x64.Build.0 = Release|x64
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Debug|Win32.ActiveCfg = Debug|Win32
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Debug|Win32.Build.0 = Debug|Win32
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Debug|x64.ActiveCfg = Debug|x64
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Debug|x64.Build.0 = Debug|x64
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Release|Win32.ActiveCfg = Release|Win32
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Release|Win32.Build.0 = Release|Win32
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Release|x64.ActiveCfg = Release|x64
+		{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}.Release|x64.Build.0 = Release|x64
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Debug|Win32.ActiveCfg = Debug|Win32
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Debug|Win32.Build.0 = Debug|Win32
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Debug|x64.ActiveCfg = Debug|x64
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Debug|x64.Build.0 = Debug|x64
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Release|Win32.ActiveCfg = Release|Win32
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Release|Win32.Build.0 = Release|Win32
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Release|x64.ActiveCfg = Release|x64
+		{FB70E4C7-4299-4B0B-81C5-5F081274F985}.Release|x64.Build.0 = Release|x64
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Debug|Win32.ActiveCfg = Debug|Win32
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Debug|Win32.Build.0 = Debug|Win32
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Debug|x64.ActiveCfg = Debug|x64
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Debug|x64.Build.0 = Debug|x64
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Release|Win32.ActiveCfg = Release|Win32
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Release|Win32.Build.0 = Release|Win32
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Release|x64.ActiveCfg = Release|x64
+		{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}.Release|x64.Build.0 = Release|x64
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Debug|Win32.ActiveCfg = Debug|Win32
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Debug|Win32.Build.0 = Debug|Win32
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Debug|x64.ActiveCfg = Debug|x64
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Debug|x64.Build.0 = Debug|x64
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Release|Win32.ActiveCfg = Release|Win32
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Release|Win32.Build.0 = Release|Win32
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Release|x64.ActiveCfg = Release|x64
+		{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}.Release|x64.Build.0 = Release|x64
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Debug|Win32.ActiveCfg = Debug|Win32
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Debug|Win32.Build.0 = Debug|Win32
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Debug|x64.ActiveCfg = Debug|x64
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Debug|x64.Build.0 = Debug|x64
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Release|Win32.ActiveCfg = Release|Win32
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Release|Win32.Build.0 = Release|Win32
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Release|x64.ActiveCfg = Release|x64
+		{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}.Release|x64.Build.0 = Release|x64
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Debug|Win32.ActiveCfg = Debug|Win32
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Debug|Win32.Build.0 = Debug|Win32
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Debug|x64.ActiveCfg = Debug|x64
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Debug|x64.Build.0 = Debug|x64
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Release|Win32.ActiveCfg = Release|Win32
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Release|Win32.Build.0 = Release|Win32
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Release|x64.ActiveCfg = Release|x64
+		{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}.Release|x64.Build.0 = Release|x64
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff --git a/libairspy/vc/airspy_2013.vcxproj b/libairspy/vc/airspy_2013.vcxproj
new file mode 100644
index 0000000..a027050
--- /dev/null
+++ b/libairspy/vc/airspy_2013.vcxproj
@@ -0,0 +1,315 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="MinSizeRel|Win32">
+      <Configuration>MinSizeRel</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="RelWithDebInfo|Win32">
+      <Configuration>RelWithDebInfo</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGUID>{7A6C1D5C-37FC-436E-8E7B-1EB3B2B3716D}</ProjectGUID>
+    <Keyword>Win32Proj</Keyword>
+    <Platform>Win32</Platform>
+    <ProjectName>airspy</ProjectName>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseOfMfc>false</UseOfMfc>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
+    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">airspy</TargetName>
+    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.dll</TargetExt>
+    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
+    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</GenerateManifest>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">airspy</TargetName>
+    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.dll</TargetExt>
+    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
+    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</GenerateManifest>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LibraryPath>..\..\libusb-1.0.19\MS32\dll;..\..\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
+    <IncludePath>..\..\libusb-1.0.19\include\libusb-1.0;..\..\libpthread-2-9-1-win\include;$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(WindowsSDK_IncludePath);</IncludePath>
+    <ExecutablePath>..\..\..\libs_win32;$(VC_ExecutablePath_x86);$(WindowsSDK_ExecutablePath);$(VS_ExecutablePath);$(MSBuild_ExecutablePath);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);</ExecutablePath>
+    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
+    <LibraryPath>D:\airspy\host\libusb-1.0.19\MS32\dll;D:\airspy\host\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
+    <ExecutablePath>..\..\..\libs_win32;$(VC_ExecutablePath_x86);$(WindowsSDK_ExecutablePath);$(VS_ExecutablePath);$(MSBuild_ExecutablePath);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);</ExecutablePath>
+    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
+    <LibraryPath>D:\airspy\host\libusb-1.0.19\MS32\dll;D:\airspy\host\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
+    <ExecutablePath>..\..\..\libs_win32;$(VC_ExecutablePath_x86);$(WindowsSDK_ExecutablePath);$(VS_ExecutablePath);$(MSBuild_ExecutablePath);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);</ExecutablePath>
+    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LibraryPath>..\..\libusb-1.0.19\MS32\dll;..\..\libpthread-2-9-1-win\lib\x86;$(LibraryPath)</LibraryPath>
+    <IncludePath>..\..\libusb-1.0.19\include\libusb-1.0;..\..\libpthread-2-9-1-win\include;$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(WindowsSDK_IncludePath);</IncludePath>
+    <ExecutablePath>..\..\..\libs_win32;$(VC_ExecutablePath_x86);$(WindowsSDK_ExecutablePath);$(VS_ExecutablePath);$(MSBuild_ExecutablePath);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);</ExecutablePath>
+    <CustomBuildAfterTargets>Build</CustomBuildAfterTargets>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <CompileAs>CompileAsC</CompileAs>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <ExceptionHandling>
+      </ExceptionHandling>
+      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
+      <Optimization>Disabled</Optimization>
+      <PrecompiledHeader>NotUsing</PrecompiledHeader>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR="Debug";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Fast</FloatingPointModel>
+    </ClCompile>
+    <ResourceCompile>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;CMAKE_INTDIR=\"Debug\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ResourceCompile>
+    <Midl>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <OutputDirectory>$(IntDir)</OutputDirectory>
+      <HeaderFileName>%(Filename).h</HeaderFileName>
+      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
+      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
+      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
+    </Midl>
+    <Link>
+      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
+      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <SubSystem>Console</SubSystem>
+      <Version>
+      </Version>
+    </Link>
+    <ProjectReference>
+      <LinkLibraryDependencies>false</LinkLibraryDependencies>
+    </ProjectReference>
+    <CustomBuildStep>
+      <Command>copy $(ProjectDir)\libs\* $(ProjectDir)\..\Win32</Command>
+    </CustomBuildStep>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <CompileAs>CompileAsC</CompileAs>
+      <ExceptionHandling>
+      </ExceptionHandling>
+      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
+      <Optimization>MaxSpeed</Optimization>
+      <PrecompiledHeader>NotUsing</PrecompiledHeader>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>
+      </DebugInformationFormat>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <AdditionalOptions>/Qvec-report:2 %(AdditionalOptions)</AdditionalOptions>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <FloatingPointModel>Fast</FloatingPointModel>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+    </ClCompile>
+    <ResourceCompile>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ResourceCompile>
+    <Midl>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <OutputDirectory>$(IntDir)</OutputDirectory>
+      <HeaderFileName>%(Filename).h</HeaderFileName>
+      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
+      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
+      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
+    </Midl>
+    <Link>
+      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
+      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>false</GenerateDebugInformation>
+      <SubSystem>Console</SubSystem>
+      <Version>
+      </Version>
+    </Link>
+    <ProjectReference>
+      <LinkLibraryDependencies>false</LinkLibraryDependencies>
+    </ProjectReference>
+    <CustomBuildStep>
+      <Command>copy $(ProjectDir)\libs\* $(ProjectDir)\..\Win32</Command>
+    </CustomBuildStep>
+    <PostBuildEvent>
+      <Command>
+      </Command>
+    </PostBuildEvent>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
+    <ClCompile>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
+      <CompileAs>CompileAsC</CompileAs>
+      <ExceptionHandling>
+      </ExceptionHandling>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <Optimization>MinSpace</Optimization>
+      <PrecompiledHeader>NotUsing</PrecompiledHeader>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>
+      </DebugInformationFormat>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ObjectFileName>$(IntDir)</ObjectFileName>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+    </ClCompile>
+    <ResourceCompile>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ResourceCompile>
+    <Midl>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <OutputDirectory>$(IntDir)</OutputDirectory>
+      <HeaderFileName>%(Filename).h</HeaderFileName>
+      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
+      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
+      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
+    </Midl>
+    <Link>
+      <AdditionalOptions> /machine:X86 %(AdditionalOptions)</AdditionalOptions>
+      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>false</GenerateDebugInformation>
+      <ImportLibrary>D:/airspy/host/libairspy/src/MinSizeRel/airspy.lib</ImportLibrary>
+      <ProgramDataBaseFile>D:/airspy/host/libairspy/src/MinSizeRel/airspy.pdb</ProgramDataBaseFile>
+      <SubSystem>Console</SubSystem>
+      <Version>
+      </Version>
+    </Link>
+    <ProjectReference>
+      <LinkLibraryDependencies>false</LinkLibraryDependencies>
+    </ProjectReference>
+    <CustomBuildStep>
+      <Command>copy $(ProjectDir)\libs\* $(ProjectDir)\..\Win32</Command>
+    </CustomBuildStep>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
+    <ClCompile>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
+      <CompileAs>CompileAsC</CompileAs>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <ExceptionHandling>
+      </ExceptionHandling>
+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
+      <Optimization>MaxSpeed</Optimization>
+      <PrecompiledHeader>NotUsing</PrecompiledHeader>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <ObjectFileName>$(IntDir)</ObjectFileName>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+    </ClCompile>
+    <ResourceCompile>
+      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\";airspy_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ResourceCompile>
+    <Midl>
+      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <OutputDirectory>$(IntDir)</OutputDirectory>
+      <HeaderFileName>%(Filename).h</HeaderFileName>
+      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
+      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
+      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
+    </Midl>
+    <Link>
+      <AdditionalOptions> /machine:X86 /debug %(AdditionalOptions)</AdditionalOptions>
+      <AdditionalDependencies>pthreadVCE2.lib;libusb-1.0.lib</AdditionalDependencies>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ImportLibrary>D:/airspy/host/libairspy/src/RelWithDebInfo/airspy.lib</ImportLibrary>
+      <ProgramDataBaseFile>D:/airspy/host/libairspy/src/RelWithDebInfo/airspy.pdb</ProgramDataBaseFile>
+      <SubSystem>Console</SubSystem>
+      <Version>
+      </Version>
+    </Link>
+    <ProjectReference>
+      <LinkLibraryDependencies>false</LinkLibraryDependencies>
+    </ProjectReference>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\src\airspy.c" />
+    <ClCompile Include="..\src\iqconverter_float.c" />
+    <ClCompile Include="..\src\iqconverter_int16.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\src\airspy.h" />
+    <ClInclude Include="..\src\airspy_commands.h" />
+    <ClInclude Include="..\src\filters.h" />
+    <ClInclude Include="..\src\iqconverter_float.h" />
+    <ClInclude Include="..\src\iqconverter_int16.h" />
+  </ItemGroup>
+  <ItemGroup>
+    <ResourceCompile Include="..\src\win32\airspy.rc" />
+  </ItemGroup>
+  <ItemGroup>
+    <CustomBuild Include=".\libs\libusb-1.0.dll">
+      <Message>Copying from %(Identity) to $(OutDir)libusb-1.0.dll ...</Message>
+      <Command>copy %(Identity) $(OutDir)libusb-1.0.dll</Command>
+      <Outputs>$(OutDir)libusb-1.0.dll</Outputs>
+    </CustomBuild>
+    <CustomBuild Include=".\libs\pthreadVCE2.dll">
+      <Message>Copying from %(Identity) to $(OutDir)pthreadVCE2.dll ...</Message>
+      <Command>copy %(Identity) $(OutDir)pthreadVCE2.dll</Command>
+      <Outputs>$(OutDir)pthreadVCE2.dll</Outputs>
+    </CustomBuild>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_gpio_2013.vcxproj b/libairspy/vc/airspy_gpio_2013.vcxproj
new file mode 100644
index 0000000..3ba7279
--- /dev/null
+++ b/libairspy/vc/airspy_gpio_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_gpio</ProjectName>
+    <ProjectGuid>{F4938DB0-3DE7-4737-9C5A-EAD1BE819F87}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_gpio.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_gpiodir_2013.vcxproj b/libairspy/vc/airspy_gpiodir_2013.vcxproj
new file mode 100644
index 0000000..e9d540a
--- /dev/null
+++ b/libairspy/vc/airspy_gpiodir_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_gpiodir</ProjectName>
+    <ProjectGuid>{7FA0181B-9A58-44FB-93C4-E7447C532C14}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_gpiodir.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_info_2013.vcxproj b/libairspy/vc/airspy_info_2013.vcxproj
new file mode 100644
index 0000000..8ea9a7d
--- /dev/null
+++ b/libairspy/vc/airspy_info_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_info</ProjectName>
+    <ProjectGuid>{C5B0AEB4-E59B-49E8-964B-69A584DB7CF1}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_info.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_lib_version_2013.vcxproj b/libairspy/vc/airspy_lib_version_2013.vcxproj
new file mode 100644
index 0000000..50bbdfd
--- /dev/null
+++ b/libairspy/vc/airspy_lib_version_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_lib_version</ProjectName>
+    <ProjectGuid>{FB70E4C7-4299-4B0B-81C5-5F081274F985}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_lib_version.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_r820t_2013.vcxproj b/libairspy/vc/airspy_r820t_2013.vcxproj
new file mode 100644
index 0000000..dd6e93b
--- /dev/null
+++ b/libairspy/vc/airspy_r820t_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_r820t</ProjectName>
+    <ProjectGuid>{8E3ABDB6-7566-48C4-962F-B20AE2BB614A}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_r820t.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_rx_2013.vcxproj b/libairspy/vc/airspy_rx_2013.vcxproj
new file mode 100644
index 0000000..8f84535
--- /dev/null
+++ b/libairspy/vc/airspy_rx_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_rx</ProjectName>
+    <ProjectGuid>{3AFB2325-FEE6-4949-A706-29F4FB10A7E5}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_rx.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_si5351c_2013.vcxproj b/libairspy/vc/airspy_si5351c_2013.vcxproj
new file mode 100644
index 0000000..bb526b5
--- /dev/null
+++ b/libairspy/vc/airspy_si5351c_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_si5351c</ProjectName>
+    <ProjectGuid>{FE48E20A-DE77-4876-8668-B4F1BA09E7E2}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_si5351c.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/airspy_spiflash_2013.vcxproj b/libairspy/vc/airspy_spiflash_2013.vcxproj
new file mode 100644
index 0000000..cc8fba7
--- /dev/null
+++ b/libairspy/vc/airspy_spiflash_2013.vcxproj
@@ -0,0 +1,172 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectName>airspy_spiflash</ProjectName>
+    <ProjectGuid>{47846DAA-BB23-4E49-9E90-31CCC9AB01A8}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>Application</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <Optimization>Disabled</Optimization>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;..\src;.\getopt;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX86</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <BuildLog>
+      <Path>$(IntDir)$(ProjectName).htm</Path>
+    </BuildLog>
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <AdditionalIncludeDirectories>..\libusb;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Link>
+      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
+      <ProgramDatabaseFile>$(TargetDir)$(ProjectName).pdb</ProgramDatabaseFile>
+      <SubSystem>Console</SubSystem>
+      <TargetMachine>MachineX64</TargetMachine>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="..\..\airspy-tools\src\airspy_spiflash.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="airspy_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+    <ProjectReference Include="getopt_2013.vcxproj">
+      <Project>{7a6c1d5c-37fc-436e-8e7b-1eb3b2b3716d}</Project>
+    </ProjectReference>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/getopt/getopt.c b/libairspy/vc/getopt/getopt.c
new file mode 100644
index 0000000..b7f26eb
--- /dev/null
+++ b/libairspy/vc/getopt/getopt.c
@@ -0,0 +1,1060 @@
+/* Getopt for GNU.
+   NOTE: getopt is now part of the C library, so if you don't know what
+   "Keep this file name-space clean" means, talk to drepper@gnu.org
+   before changing it!
+   Copyright (C) 1987,88,89,90,91,92,93,94,95,96,98,99,2000,2001
+   	Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+/* This tells Alpha OSF/1 not to define a getopt prototype in <stdio.h>.
+   Ditto for AIX 3.2 and <stdlib.h>.  */
+#ifndef _NO_PROTO
+# define _NO_PROTO
+#endif
+
+#ifdef HAVE_CONFIG_H
+# include <config.h>
+#endif
+
+#if !defined __STDC__ || !__STDC__
+/* This is a separate conditional since some stdc systems
+   reject `defined (const)'.  */
+# ifndef const
+#  define const
+# endif
+#endif
+
+#include <stdio.h>
+
+/* Comment out all this code if we are using the GNU C Library, and are not
+   actually compiling the library itself.  This code is part of the GNU C
+   Library, but also included in many other GNU distributions.  Compiling
+   and linking in this code is a waste when using the GNU C library
+   (especially if it is a shared library).  Rather than having every GNU
+   program understand `configure --with-gnu-libc' and omit the object files,
+   it is simpler to just do this in the source for each such file.  */
+
+#define GETOPT_INTERFACE_VERSION 2
+#if !defined _LIBC && defined __GLIBC__ && __GLIBC__ >= 2
+# include <gnu-versions.h>
+# if _GNU_GETOPT_INTERFACE_VERSION == GETOPT_INTERFACE_VERSION
+#  define ELIDE_CODE
+# endif
+#endif
+
+#ifndef ELIDE_CODE
+
+
+/* This needs to come after some library #include
+   to get __GNU_LIBRARY__ defined.  */
+#ifdef	__GNU_LIBRARY__
+/* Don't include stdlib.h for non-GNU C libraries because some of them
+   contain conflicting prototypes for getopt.  */
+# include <stdlib.h>
+# include <unistd.h>
+#endif	/* GNU C library.  */
+
+#ifdef VMS
+# include <unixlib.h>
+# if HAVE_STRING_H - 0
+#  include <string.h>
+# endif
+#endif
+
+#ifndef _
+/* This is for other GNU distributions with internationalized messages.  */
+# if (HAVE_LIBINTL_H && ENABLE_NLS) || defined _LIBC
+#  include <libintl.h>
+#  ifndef _
+#   define _(msgid)	gettext (msgid)
+#  endif
+# else
+#  define _(msgid)	(msgid)
+# endif
+#endif
+
+/* This version of `getopt' appears to the caller like standard Unix `getopt'
+   but it behaves differently for the user, since it allows the user
+   to intersperse the options with the other arguments.
+
+   As `getopt' works, it permutes the elements of ARGV so that,
+   when it is done, all the options precede everything else.  Thus
+   all application programs are extended to handle flexible argument order.
+
+   Setting the environment variable POSIXLY_CORRECT disables permutation.
+   Then the behavior is completely standard.
+
+   GNU application programs can use a third alternative mode in which
+   they can distinguish the relative order of options and other arguments.  */
+
+#include "getopt.h"
+
+/* For communication from `getopt' to the caller.
+   When `getopt' finds an option that takes an argument,
+   the argument value is returned here.
+   Also, when `ordering' is RETURN_IN_ORDER,
+   each non-option ARGV-element is returned here.  */
+
+char *optarg;
+
+/* Index in ARGV of the next element to be scanned.
+   This is used for communication to and from the caller
+   and for communication between successive calls to `getopt'.
+
+   On entry to `getopt', zero means this is the first call; initialize.
+
+   When `getopt' returns -1, this is the index of the first of the
+   non-option elements that the caller should itself scan.
+
+   Otherwise, `optind' communicates from one call to the next
+   how much of ARGV has been scanned so far.  */
+
+/* 1003.2 says this must be 1 before any call.  */
+int optind = 1;
+
+/* Formerly, initialization of getopt depended on optind==0, which
+   causes problems with re-calling getopt as programs generally don't
+   know that. */
+
+int __getopt_initialized;
+
+/* The next char to be scanned in the option-element
+   in which the last option character we returned was found.
+   This allows us to pick up the scan where we left off.
+
+   If this is zero, or a null string, it means resume the scan
+   by advancing to the next ARGV-element.  */
+
+static char *nextchar;
+
+/* Callers store zero here to inhibit the error message
+   for unrecognized options.  */
+
+int opterr = 1;
+
+/* Set to an option character which was unrecognized.
+   This must be initialized on some systems to avoid linking in the
+   system's own getopt implementation.  */
+
+int optopt = '?';
+
+/* Describe how to deal with options that follow non-option ARGV-elements.
+
+   If the caller did not specify anything,
+   the default is REQUIRE_ORDER if the environment variable
+   POSIXLY_CORRECT is defined, PERMUTE otherwise.
+
+   REQUIRE_ORDER means don't recognize them as options;
+   stop option processing when the first non-option is seen.
+   This is what Unix does.
+   This mode of operation is selected by either setting the environment
+   variable POSIXLY_CORRECT, or using `+' as the first character
+   of the list of option characters.
+
+   PERMUTE is the default.  We permute the contents of ARGV as we scan,
+   so that eventually all the non-options are at the end.  This allows options
+   to be given in any order, even with programs that were not written to
+   expect this.
+
+   RETURN_IN_ORDER is an option available to programs that were written
+   to expect options and other ARGV-elements in any order and that care about
+   the ordering of the two.  We describe each non-option ARGV-element
+   as if it were the argument of an option with character code 1.
+   Using `-' as the first character of the list of option characters
+   selects this mode of operation.
+
+   The special argument `--' forces an end of option-scanning regardless
+   of the value of `ordering'.  In the case of RETURN_IN_ORDER, only
+   `--' can cause `getopt' to return -1 with `optind' != ARGC.  */
+
+static enum
+{
+  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER
+} ordering;
+
+/* Value of POSIXLY_CORRECT environment variable.  */
+static char *posixly_correct;
+
+#ifdef	__GNU_LIBRARY__
+/* We want to avoid inclusion of string.h with non-GNU libraries
+   because there are many ways it can cause trouble.
+   On some systems, it contains special magic macros that don't work
+   in GCC.  */
+# include <string.h>
+# define my_index	strchr
+#else
+
+# if HAVE_STRING_H
+#  include <string.h>
+# else
+#  include <strings.h>
+# endif
+
+/* Avoid depending on library functions or files
+   whose names are inconsistent.  */
+
+#ifndef getenv
+#ifdef _MSC_VER
+// DDK will complain if you don't use the stdlib defined getenv
+#include <stdlib.h>
+#else
+extern char *getenv ();
+#endif
+#endif
+
+static char *
+my_index (str, chr)
+     const char *str;
+     int chr;
+{
+  while (*str)
+    {
+      if (*str == chr)
+	return (char *) str;
+      str++;
+    }
+  return 0;
+}
+
+/* If using GCC, we can safely declare strlen this way.
+   If not using GCC, it is ok not to declare it.  */
+#ifdef __GNUC__
+/* Note that Motorola Delta 68k R3V7 comes with GCC but not stddef.h.
+   That was relevant to code that was here before.  */
+# if (!defined __STDC__ || !__STDC__) && !defined strlen
+/* gcc with -traditional declares the built-in strlen to return int,
+   and has done so at least since version 2.4.5. -- rms.  */
+extern int strlen (const char *);
+# endif /* not __STDC__ */
+#endif /* __GNUC__ */
+
+#endif /* not __GNU_LIBRARY__ */
+
+/* Handle permutation of arguments.  */
+
+/* Describe the part of ARGV that contains non-options that have
+   been skipped.  `first_nonopt' is the index in ARGV of the first of them;
+   `last_nonopt' is the index after the last of them.  */
+
+static int first_nonopt;
+static int last_nonopt;
+
+#ifdef _LIBC
+/* Stored original parameters.
+   XXX This is no good solution.  We should rather copy the args so
+   that we can compare them later.  But we must not use malloc(3).  */
+extern int __libc_argc;
+extern char **__libc_argv;
+
+/* Bash 2.0 gives us an environment variable containing flags
+   indicating ARGV elements that should not be considered arguments.  */
+
+# ifdef USE_NONOPTION_FLAGS
+/* Defined in getopt_init.c  */
+extern char *__getopt_nonoption_flags;
+
+static int nonoption_flags_max_len;
+static int nonoption_flags_len;
+# endif
+
+# ifdef USE_NONOPTION_FLAGS
+#  define SWAP_FLAGS(ch1, ch2) \
+  if (nonoption_flags_len > 0)						      \
+    {									      \
+      char __tmp = __getopt_nonoption_flags[ch1];			      \
+      __getopt_nonoption_flags[ch1] = __getopt_nonoption_flags[ch2];	      \
+      __getopt_nonoption_flags[ch2] = __tmp;				      \
+    }
+# else
+#  define SWAP_FLAGS(ch1, ch2)
+# endif
+#else	/* !_LIBC */
+# define SWAP_FLAGS(ch1, ch2)
+#endif	/* _LIBC */
+
+/* Exchange two adjacent subsequences of ARGV.
+   One subsequence is elements [first_nonopt,last_nonopt)
+   which contains all the non-options that have been skipped so far.
+   The other is elements [last_nonopt,optind), which contains all
+   the options processed since those non-options were skipped.
+
+   `first_nonopt' and `last_nonopt' are relocated so that they describe
+   the new indices of the non-options in ARGV after they are moved.  */
+
+#if defined __STDC__ && __STDC__
+static void exchange (char **);
+#endif
+
+static void
+exchange (argv)
+     char **argv;
+{
+  int bottom = first_nonopt;
+  int middle = last_nonopt;
+  int top = optind;
+  char *tem;
+
+  /* Exchange the shorter segment with the far end of the longer segment.
+     That puts the shorter segment into the right place.
+     It leaves the longer segment in the right place overall,
+     but it consists of two parts that need to be swapped next.  */
+
+#if defined _LIBC && defined USE_NONOPTION_FLAGS
+  /* First make sure the handling of the `__getopt_nonoption_flags'
+     string can work normally.  Our top argument must be in the range
+     of the string.  */
+  if (nonoption_flags_len > 0 && top >= nonoption_flags_max_len)
+    {
+      /* We must extend the array.  The user plays games with us and
+	 presents new arguments.  */
+      char *new_str = malloc (top + 1);
+      if (new_str == NULL)
+	nonoption_flags_len = nonoption_flags_max_len = 0;
+      else
+	{
+	  memset (__mempcpy (new_str, __getopt_nonoption_flags,
+			     nonoption_flags_max_len),
+		  '\0', top + 1 - nonoption_flags_max_len);
+	  nonoption_flags_max_len = top + 1;
+	  __getopt_nonoption_flags = new_str;
+	}
+    }
+#endif
+
+  while (top > middle && middle > bottom)
+    {
+      if (top - middle > middle - bottom)
+	{
+	  /* Bottom segment is the short one.  */
+	  int len = middle - bottom;
+	  register int i;
+
+	  /* Swap it with the top part of the top segment.  */
+	  for (i = 0; i < len; i++)
+	    {
+	      tem = argv[bottom + i];
+	      argv[bottom + i] = argv[top - (middle - bottom) + i];
+	      argv[top - (middle - bottom) + i] = tem;
+	      SWAP_FLAGS (bottom + i, top - (middle - bottom) + i);
+	    }
+	  /* Exclude the moved bottom segment from further swapping.  */
+	  top -= len;
+	}
+      else
+	{
+	  /* Top segment is the short one.  */
+	  int len = top - middle;
+	  register int i;
+
+	  /* Swap it with the bottom part of the bottom segment.  */
+	  for (i = 0; i < len; i++)
+	    {
+	      tem = argv[bottom + i];
+	      argv[bottom + i] = argv[middle + i];
+	      argv[middle + i] = tem;
+	      SWAP_FLAGS (bottom + i, middle + i);
+	    }
+	  /* Exclude the moved top segment from further swapping.  */
+	  bottom += len;
+	}
+    }
+
+  /* Update records for the slots the non-options now occupy.  */
+
+  first_nonopt += (optind - last_nonopt);
+  last_nonopt = optind;
+}
+
+/* Initialize the internal data when the first call is made.  */
+
+#if defined __STDC__ && __STDC__
+static const char *_getopt_initialize (int, char *const *, const char *);
+#endif
+static const char *
+_getopt_initialize (argc, argv, optstring)
+     int argc;
+     char *const *argv;
+     const char *optstring;
+{
+  /* Start processing options with ARGV-element 1 (since ARGV-element 0
+     is the program name); the sequence of previously skipped
+     non-option ARGV-elements is empty.  */
+
+  first_nonopt = last_nonopt = optind;
+
+  nextchar = NULL;
+
+  posixly_correct = getenv ("POSIXLY_CORRECT");
+
+  /* Determine how to handle the ordering of options and nonoptions.  */
+
+  if (optstring[0] == '-')
+    {
+      ordering = RETURN_IN_ORDER;
+      ++optstring;
+    }
+  else if (optstring[0] == '+')
+    {
+      ordering = REQUIRE_ORDER;
+      ++optstring;
+    }
+  else if (posixly_correct != NULL)
+    ordering = REQUIRE_ORDER;
+  else
+    ordering = PERMUTE;
+
+#if defined _LIBC && defined USE_NONOPTION_FLAGS
+  if (posixly_correct == NULL
+      && argc == __libc_argc && argv == __libc_argv)
+    {
+      if (nonoption_flags_max_len == 0)
+	{
+	  if (__getopt_nonoption_flags == NULL
+	      || __getopt_nonoption_flags[0] == '\0')
+	    nonoption_flags_max_len = -1;
+	  else
+	    {
+	      const char *orig_str = __getopt_nonoption_flags;
+	      int len = nonoption_flags_max_len = strlen (orig_str);
+	      if (nonoption_flags_max_len < argc)
+		nonoption_flags_max_len = argc;
+	      __getopt_nonoption_flags =
+		(char *) malloc (nonoption_flags_max_len);
+	      if (__getopt_nonoption_flags == NULL)
+		nonoption_flags_max_len = -1;
+	      else
+		memset (__mempcpy (__getopt_nonoption_flags, orig_str, len),
+			'\0', nonoption_flags_max_len - len);
+	    }
+	}
+      nonoption_flags_len = nonoption_flags_max_len;
+    }
+  else
+    nonoption_flags_len = 0;
+#endif
+
+  return optstring;
+}
+
+/* Scan elements of ARGV (whose length is ARGC) for option characters
+   given in OPTSTRING.
+
+   If an element of ARGV starts with '-', and is not exactly "-" or "--",
+   then it is an option element.  The characters of this element
+   (aside from the initial '-') are option characters.  If `getopt'
+   is called repeatedly, it returns successively each of the option characters
+   from each of the option elements.
+
+   If `getopt' finds another option character, it returns that character,
+   updating `optind' and `nextchar' so that the next call to `getopt' can
+   resume the scan with the following option character or ARGV-element.
+
+   If there are no more option characters, `getopt' returns -1.
+   Then `optind' is the index in ARGV of the first ARGV-element
+   that is not an option.  (The ARGV-elements have been permuted
+   so that those that are not options now come last.)
+
+   OPTSTRING is a string containing the legitimate option characters.
+   If an option character is seen that is not listed in OPTSTRING,
+   return '?' after printing an error message.  If you set `opterr' to
+   zero, the error message is suppressed but we still return '?'.
+
+   If a char in OPTSTRING is followed by a colon, that means it wants an arg,
+   so the following text in the same ARGV-element, or the text of the following
+   ARGV-element, is returned in `optarg'.  Two colons mean an option that
+   wants an optional arg; if there is text in the current ARGV-element,
+   it is returned in `optarg', otherwise `optarg' is set to zero.
+
+   If OPTSTRING starts with `-' or `+', it requests different methods of
+   handling the non-option ARGV-elements.
+   See the comments about RETURN_IN_ORDER and REQUIRE_ORDER, above.
+
+   Long-named options begin with `--' instead of `-'.
+   Their names may be abbreviated as long as the abbreviation is unique
+   or is an exact match for some defined option.  If they have an
+   argument, it follows the option name in the same ARGV-element, separated
+   from the option name by a `=', or else the in next ARGV-element.
+   When `getopt' finds a long-named option, it returns 0 if that option's
+   `flag' field is nonzero, the value of the option's `val' field
+   if the `flag' field is zero.
+
+   The elements of ARGV aren't really const, because we permute them.
+   But we pretend they're const in the prototype to be compatible
+   with other systems.
+
+   LONGOPTS is a vector of `struct option' terminated by an
+   element containing a name which is zero.
+
+   LONGIND returns the index in LONGOPT of the long-named option found.
+   It is only valid when a long-named option has been found by the most
+   recent call.
+
+   If LONG_ONLY is nonzero, '-' as well as '--' can introduce
+   long-named options.  */
+
+int
+_getopt_internal (argc, argv, optstring, longopts, longind, long_only)
+     int argc;
+     char *const *argv;
+     const char *optstring;
+     const struct option *longopts;
+     int *longind;
+     int long_only;
+{
+  int print_errors = opterr;
+  if (optstring[0] == ':')
+    print_errors = 0;
+
+  if (argc < 1)
+    return -1;
+
+  optarg = NULL;
+
+  if (optind == 0 || !__getopt_initialized)
+    {
+      if (optind == 0)
+	optind = 1;	/* Don't scan ARGV[0], the program name.  */
+      optstring = _getopt_initialize (argc, argv, optstring);
+      __getopt_initialized = 1;
+    }
+
+  /* Test whether ARGV[optind] points to a non-option argument.
+     Either it does not have option syntax, or there is an environment flag
+     from the shell indicating it is not an option.  The later information
+     is only used when the used in the GNU libc.  */
+#if defined _LIBC && defined USE_NONOPTION_FLAGS
+# define NONOPTION_P (argv[optind][0] != '-' || argv[optind][1] == '\0'	      \
+		      || (optind < nonoption_flags_len			      \
+			  && __getopt_nonoption_flags[optind] == '1'))
+#else
+# define NONOPTION_P (argv[optind][0] != '-' || argv[optind][1] == '\0')
+#endif
+
+  if (nextchar == NULL || *nextchar == '\0')
+    {
+      /* Advance to the next ARGV-element.  */
+
+      /* Give FIRST_NONOPT & LAST_NONOPT rational values if OPTIND has been
+	 moved back by the user (who may also have changed the arguments).  */
+      if (last_nonopt > optind)
+	last_nonopt = optind;
+      if (first_nonopt > optind)
+	first_nonopt = optind;
+
+      if (ordering == PERMUTE)
+	{
+	  /* If we have just processed some options following some non-options,
+	     exchange them so that the options come first.  */
+
+	  if (first_nonopt != last_nonopt && last_nonopt != optind)
+	    exchange ((char **) argv);
+	  else if (last_nonopt != optind)
+	    first_nonopt = optind;
+
+	  /* Skip any additional non-options
+	     and extend the range of non-options previously skipped.  */
+
+	  while (optind < argc && NONOPTION_P)
+	    optind++;
+	  last_nonopt = optind;
+	}
+
+      /* The special ARGV-element `--' means premature end of options.
+	 Skip it like a null option,
+	 then exchange with previous non-options as if it were an option,
+	 then skip everything else like a non-option.  */
+
+      if (optind != argc && !strcmp (argv[optind], "--"))
+	{
+	  optind++;
+
+	  if (first_nonopt != last_nonopt && last_nonopt != optind)
+	    exchange ((char **) argv);
+	  else if (first_nonopt == last_nonopt)
+	    first_nonopt = optind;
+	  last_nonopt = argc;
+
+	  optind = argc;
+	}
+
+      /* If we have done all the ARGV-elements, stop the scan
+	 and back over any non-options that we skipped and permuted.  */
+
+      if (optind == argc)
+	{
+	  /* Set the next-arg-index to point at the non-options
+	     that we previously skipped, so the caller will digest them.  */
+	  if (first_nonopt != last_nonopt)
+	    optind = first_nonopt;
+	  return -1;
+	}
+
+      /* If we have come to a non-option and did not permute it,
+	 either stop the scan or describe it to the caller and pass it by.  */
+
+      if (NONOPTION_P)
+	{
+	  if (ordering == REQUIRE_ORDER)
+	    return -1;
+	  optarg = argv[optind++];
+	  return 1;
+	}
+
+      /* We have found another option-ARGV-element.
+	 Skip the initial punctuation.  */
+
+      nextchar = (argv[optind] + 1
+		  + (longopts != NULL && argv[optind][1] == '-'));
+    }
+
+  /* Decode the current option-ARGV-element.  */
+
+  /* Check whether the ARGV-element is a long option.
+
+     If long_only and the ARGV-element has the form "-f", where f is
+     a valid short option, don't consider it an abbreviated form of
+     a long option that starts with f.  Otherwise there would be no
+     way to give the -f short option.
+
+     On the other hand, if there's a long option "fubar" and
+     the ARGV-element is "-fu", do consider that an abbreviation of
+     the long option, just like "--fu", and not "-f" with arg "u".
+
+     This distinction seems to be the most useful approach.  */
+
+  if (longopts != NULL
+      && (argv[optind][1] == '-'
+	  || (long_only && (argv[optind][2] || !my_index (optstring, argv[optind][1])))))
+    {
+      char *nameend;
+      const struct option *p;
+      const struct option *pfound = NULL;
+      int exact = 0;
+      int ambig = 0;
+      int indfound = -1;
+      int option_index;
+
+      for (nameend = nextchar; *nameend && *nameend != '='; nameend++)
+	/* Do nothing.  */ ;
+
+      /* Test all long options for either exact match
+	 or abbreviated matches.  */
+      for (p = longopts, option_index = 0; p->name; p++, option_index++)
+	if (!strncmp (p->name, nextchar, nameend - nextchar))
+	  {
+	    if ((unsigned int) (nameend - nextchar)
+		== (unsigned int) strlen (p->name))
+	      {
+		/* Exact match found.  */
+		pfound = p;
+		indfound = option_index;
+		exact = 1;
+		break;
+	      }
+	    else if (pfound == NULL)
+	      {
+		/* First nonexact match found.  */
+		pfound = p;
+		indfound = option_index;
+	      }
+	    else if (long_only
+		     || pfound->has_arg != p->has_arg
+		     || pfound->flag != p->flag
+		     || pfound->val != p->val)
+	      /* Second or later nonexact match found.  */
+	      ambig = 1;
+	  }
+
+      if (ambig && !exact)
+	{
+	  if (print_errors)
+	    fprintf (stderr, _("%s: option `%s' is ambiguous\n"),
+		     argv[0], argv[optind]);
+	  nextchar += strlen (nextchar);
+	  optind++;
+	  optopt = 0;
+	  return '?';
+	}
+
+      if (pfound != NULL)
+	{
+	  option_index = indfound;
+	  optind++;
+	  if (*nameend)
+	    {
+	      /* Don't test has_arg with >, because some C compilers don't
+		 allow it to be used on enums.  */
+	      if (pfound->has_arg)
+		optarg = nameend + 1;
+	      else
+		{
+		  if (print_errors)
+		    {
+		      if (argv[optind - 1][1] == '-')
+			/* --option */
+			fprintf (stderr,
+				 _("%s: option `--%s' doesn't allow an argument\n"),
+				 argv[0], pfound->name);
+		      else
+			/* +option or -option */
+			fprintf (stderr,
+				 _("%s: option `%c%s' doesn't allow an argument\n"),
+				 argv[0], argv[optind - 1][0], pfound->name);
+		    }
+
+		  nextchar += strlen (nextchar);
+
+		  optopt = pfound->val;
+		  return '?';
+		}
+	    }
+	  else if (pfound->has_arg == 1)
+	    {
+	      if (optind < argc)
+		optarg = argv[optind++];
+	      else
+		{
+		  if (print_errors)
+		    fprintf (stderr,
+			   _("%s: option `%s' requires an argument\n"),
+			   argv[0], argv[optind - 1]);
+		  nextchar += strlen (nextchar);
+		  optopt = pfound->val;
+		  return optstring[0] == ':' ? ':' : '?';
+		}
+	    }
+	  nextchar += strlen (nextchar);
+	  if (longind != NULL)
+	    *longind = option_index;
+	  if (pfound->flag)
+	    {
+	      *(pfound->flag) = pfound->val;
+	      return 0;
+	    }
+	  return pfound->val;
+	}
+
+      /* Can't find it as a long option.  If this is not getopt_long_only,
+	 or the option starts with '--' or is not a valid short
+	 option, then it's an error.
+	 Otherwise interpret it as a short option.  */
+      if (!long_only || argv[optind][1] == '-'
+	  || my_index (optstring, *nextchar) == NULL)
+	{
+	  if (print_errors)
+	    {
+	      if (argv[optind][1] == '-')
+		/* --option */
+		fprintf (stderr, _("%s: unrecognized option `--%s'\n"),
+			 argv[0], nextchar);
+	      else
+		/* +option or -option */
+		fprintf (stderr, _("%s: unrecognized option `%c%s'\n"),
+			 argv[0], argv[optind][0], nextchar);
+	    }
+	  nextchar = (char *) "";
+	  optind++;
+	  optopt = 0;
+	  return '?';
+	}
+    }
+
+  /* Look at and handle the next short option-character.  */
+
+  {
+    char c = *nextchar++;
+    char *temp = my_index (optstring, c);
+
+    /* Increment `optind' when we start to process its last character.  */
+    if (*nextchar == '\0')
+      ++optind;
+
+    if (temp == NULL || c == ':')
+      {
+	if (print_errors)
+	  {
+	    if (posixly_correct)
+	      /* 1003.2 specifies the format of this message.  */
+	      fprintf (stderr, _("%s: illegal option -- %c\n"),
+		       argv[0], c);
+	    else
+	      fprintf (stderr, _("%s: invalid option -- %c\n"),
+		       argv[0], c);
+	  }
+	optopt = c;
+	return '?';
+      }
+    /* Convenience. Treat POSIX -W foo same as long option --foo */
+    if (temp[0] == 'W' && temp[1] == ';')
+      {
+	char *nameend;
+	const struct option *p;
+	const struct option *pfound = NULL;
+	int exact = 0;
+	int ambig = 0;
+	int indfound = 0;
+	int option_index;
+
+	/* This is an option that requires an argument.  */
+	if (*nextchar != '\0')
+	  {
+	    optarg = nextchar;
+	    /* If we end this ARGV-element by taking the rest as an arg,
+	       we must advance to the next element now.  */
+	    optind++;
+	  }
+	else if (optind == argc)
+	  {
+	    if (print_errors)
+	      {
+		/* 1003.2 specifies the format of this message.  */
+		fprintf (stderr, _("%s: option requires an argument -- %c\n"),
+			 argv[0], c);
+	      }
+	    optopt = c;
+	    if (optstring[0] == ':')
+	      c = ':';
+	    else
+	      c = '?';
+	    return c;
+	  }
+	else
+	  /* We already incremented `optind' once;
+	     increment it again when taking next ARGV-elt as argument.  */
+	  optarg = argv[optind++];
+
+	/* optarg is now the argument, see if it's in the
+	   table of longopts.  */
+
+	for (nextchar = nameend = optarg; *nameend && *nameend != '='; nameend++)
+	  /* Do nothing.  */ ;
+
+	/* Test all long options for either exact match
+	   or abbreviated matches.  */
+	for (p = longopts, option_index = 0; p != NULL && p->name; p++, option_index++)
+	  if (!strncmp (p->name, nextchar, nameend - nextchar))
+	    {
+	      if ((unsigned int) (nameend - nextchar) == strlen (p->name))
+		{
+		  /* Exact match found.  */
+		  pfound = p;
+		  indfound = option_index;
+		  exact = 1;
+		  break;
+		}
+	      else if (pfound == NULL)
+		{
+		  /* First nonexact match found.  */
+		  pfound = p;
+		  indfound = option_index;
+		}
+	      else
+		/* Second or later nonexact match found.  */
+		ambig = 1;
+	    }
+	if (ambig && !exact)
+	  {
+	    if (print_errors)
+	      fprintf (stderr, _("%s: option `-W %s' is ambiguous\n"),
+		       argv[0], argv[optind]);
+	    nextchar += strlen (nextchar);
+	    optind++;
+	    return '?';
+	  }
+	if (pfound != NULL)
+	  {
+	    option_index = indfound;
+	    if (*nameend)
+	      {
+		/* Don't test has_arg with >, because some C compilers don't
+		   allow it to be used on enums.  */
+		if (pfound->has_arg)
+		  optarg = nameend + 1;
+		else
+		  {
+		    if (print_errors)
+		      fprintf (stderr, _("\
+%s: option `-W %s' doesn't allow an argument\n"),
+			       argv[0], pfound->name);
+
+		    nextchar += strlen (nextchar);
+		    return '?';
+		  }
+	      }
+	    else if (pfound->has_arg == 1)
+	      {
+		if (optind < argc)
+		  optarg = argv[optind++];
+		else
+		  {
+		    if (print_errors)
+		      fprintf (stderr,
+			       _("%s: option `%s' requires an argument\n"),
+			       argv[0], argv[optind - 1]);
+		    nextchar += strlen (nextchar);
+		    return optstring[0] == ':' ? ':' : '?';
+		  }
+	      }
+	    nextchar += strlen (nextchar);
+	    if (longind != NULL)
+	      *longind = option_index;
+	    if (pfound->flag)
+	      {
+		*(pfound->flag) = pfound->val;
+		return 0;
+	      }
+	    return pfound->val;
+	  }
+	  nextchar = NULL;
+	  return 'W';	/* Let the application handle it.   */
+      }
+    if (temp[1] == ':')
+      {
+	if (temp[2] == ':')
+	  {
+	    /* This is an option that accepts an argument optionally.  */
+	    if (*nextchar != '\0')
+	      {
+		optarg = nextchar;
+		optind++;
+	      }
+	    else
+	      optarg = NULL;
+	    nextchar = NULL;
+	  }
+	else
+	  {
+	    /* This is an option that requires an argument.  */
+	    if (*nextchar != '\0')
+	      {
+		optarg = nextchar;
+		/* If we end this ARGV-element by taking the rest as an arg,
+		   we must advance to the next element now.  */
+		optind++;
+	      }
+	    else if (optind == argc)
+	      {
+		if (print_errors)
+		  {
+		    /* 1003.2 specifies the format of this message.  */
+		    fprintf (stderr,
+			     _("%s: option requires an argument -- %c\n"),
+			     argv[0], c);
+		  }
+		optopt = c;
+		if (optstring[0] == ':')
+		  c = ':';
+		else
+		  c = '?';
+	      }
+	    else
+	      /* We already incremented `optind' once;
+		 increment it again when taking next ARGV-elt as argument.  */
+	      optarg = argv[optind++];
+	    nextchar = NULL;
+	  }
+      }
+    return c;
+  }
+}
+
+int
+getopt (argc, argv, optstring)
+     int argc;
+     char *const *argv;
+     const char *optstring;
+{
+  return _getopt_internal (argc, argv, optstring,
+			   (const struct option *) 0,
+			   (int *) 0,
+			   0);
+}
+
+#endif	/* Not ELIDE_CODE.  */
+
+#ifdef TEST
+
+/* Compile with -DTEST to make an executable for use in testing
+   the above definition of `getopt'.  */
+
+int
+main (argc, argv)
+     int argc;
+     char **argv;
+{
+  int c;
+  int digit_optind = 0;
+
+  while (1)
+    {
+      int this_option_optind = optind ? optind : 1;
+
+      c = getopt (argc, argv, "abc:d:0123456789");
+      if (c == -1)
+	break;
+
+      switch (c)
+	{
+	case '0':
+	case '1':
+	case '2':
+	case '3':
+	case '4':
+	case '5':
+	case '6':
+	case '7':
+	case '8':
+	case '9':
+	  if (digit_optind != 0 && digit_optind != this_option_optind)
+	    printf ("digits occur in two different argv-elements.\n");
+	  digit_optind = this_option_optind;
+	  printf ("option %c\n", c);
+	  break;
+
+	case 'a':
+	  printf ("option a\n");
+	  break;
+
+	case 'b':
+	  printf ("option b\n");
+	  break;
+
+	case 'c':
+	  printf ("option c with value `%s'\n", optarg);
+	  break;
+
+	case '?':
+	  break;
+
+	default:
+	  printf ("?? getopt returned character code 0%o ??\n", c);
+	}
+    }
+
+  if (optind < argc)
+    {
+      printf ("non-option ARGV-elements: ");
+      while (optind < argc)
+	printf ("%s ", argv[optind++]);
+      printf ("\n");
+    }
+
+  exit (0);
+}
+
+#endif /* TEST */
diff --git a/libairspy/vc/getopt/getopt.h b/libairspy/vc/getopt/getopt.h
new file mode 100644
index 0000000..a1b8dd6
--- /dev/null
+++ b/libairspy/vc/getopt/getopt.h
@@ -0,0 +1,180 @@
+/* Declarations for getopt.
+   Copyright (C) 1989-1994, 1996-1999, 2001 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef _GETOPT_H
+
+#ifndef __need_getopt
+# define _GETOPT_H 1
+#endif
+
+/* If __GNU_LIBRARY__ is not already defined, either we are being used
+   standalone, or this is the first header included in the source file.
+   If we are being used with glibc, we need to include <features.h>, but
+   that does not exist if we are standalone.  So: if __GNU_LIBRARY__ is
+   not defined, include <ctype.h>, which will pull in <features.h> for us
+   if it's from glibc.  (Why ctype.h?  It's guaranteed to exist and it
+   doesn't flood the namespace with stuff the way some other headers do.)  */
+#if !defined __GNU_LIBRARY__
+# include <ctype.h>
+#endif
+
+#ifdef	__cplusplus
+extern "C" {
+#endif
+
+/* For communication from `getopt' to the caller.
+   When `getopt' finds an option that takes an argument,
+   the argument value is returned here.
+   Also, when `ordering' is RETURN_IN_ORDER,
+   each non-option ARGV-element is returned here.  */
+
+extern char *optarg;
+
+/* Index in ARGV of the next element to be scanned.
+   This is used for communication to and from the caller
+   and for communication between successive calls to `getopt'.
+
+   On entry to `getopt', zero means this is the first call; initialize.
+
+   When `getopt' returns -1, this is the index of the first of the
+   non-option elements that the caller should itself scan.
+
+   Otherwise, `optind' communicates from one call to the next
+   how much of ARGV has been scanned so far.  */
+
+extern int optind;
+
+/* Callers store zero here to inhibit the error message `getopt' prints
+   for unrecognized options.  */
+
+extern int opterr;
+
+/* Set to an option character which was unrecognized.  */
+
+extern int optopt;
+
+#ifndef __need_getopt
+/* Describe the long-named options requested by the application.
+   The LONG_OPTIONS argument to getopt_long or getopt_long_only is a vector
+   of `struct option' terminated by an element containing a name which is
+   zero.
+
+   The field `has_arg' is:
+   no_argument		(or 0) if the option does not take an argument,
+   required_argument	(or 1) if the option requires an argument,
+   optional_argument 	(or 2) if the option takes an optional argument.
+
+   If the field `flag' is not NULL, it points to a variable that is set
+   to the value given in the field `val' when the option is found, but
+   left unchanged if the option is not found.
+
+   To have a long-named option do something other than set an `int' to
+   a compiled-in constant, such as set a value from `optarg', set the
+   option's `flag' field to zero and its `val' field to a nonzero
+   value (the equivalent single-letter option character, if there is
+   one).  For long options that have a zero `flag' field, `getopt'
+   returns the contents of the `val' field.  */
+
+struct option
+{
+# if (defined __STDC__ && __STDC__) || defined __cplusplus
+  const char *name;
+# else
+  char *name;
+# endif
+  /* has_arg can't be an enum because some compilers complain about
+     type mismatches in all the code that assumes it is an int.  */
+  int has_arg;
+  int *flag;
+  int val;
+};
+
+/* Names for the values of the `has_arg' field of `struct option'.  */
+
+# define no_argument		0
+# define required_argument	1
+# define optional_argument	2
+#endif	/* need getopt */
+
+
+/* Get definitions and prototypes for functions to process the
+   arguments in ARGV (ARGC of them, minus the program name) for
+   options given in OPTS.
+
+   Return the option character from OPTS just read.  Return -1 when
+   there are no more options.  For unrecognized options, or options
+   missing arguments, `optopt' is set to the option letter, and '?' is
+   returned.
+
+   The OPTS string is a list of characters which are recognized option
+   letters, optionally followed by colons, specifying that that letter
+   takes an argument, to be placed in `optarg'.
+
+   If a letter in OPTS is followed by two colons, its argument is
+   optional.  This behavior is specific to the GNU `getopt'.
+
+   The argument `--' causes premature termination of argument
+   scanning, explicitly telling `getopt' that there are no more
+   options.
+
+   If OPTS begins with `--', then non-option arguments are treated as
+   arguments to the option '\0'.  This behavior is specific to the GNU
+   `getopt'.  */
+
+#if (defined __STDC__ && __STDC__) || defined __cplusplus
+# ifdef __GNU_LIBRARY__
+/* Many other libraries have conflicting prototypes for getopt, with
+   differences in the consts, in stdlib.h.  To avoid compilation
+   errors, only prototype getopt for the GNU C library.  */
+extern int getopt (int __argc, char *const *__argv, const char *__shortopts);
+# else /* not __GNU_LIBRARY__ */
+extern int getopt ();
+# endif /* __GNU_LIBRARY__ */
+
+# ifndef __need_getopt
+extern int getopt_long (int __argc, char *const *__argv, const char *__shortopts,
+		        const struct option *__longopts, int *__longind);
+extern int getopt_long_only (int __argc, char *const *__argv,
+			     const char *__shortopts,
+		             const struct option *__longopts, int *__longind);
+
+/* Internal only.  Users should not call this directly.  */
+extern int _getopt_internal (int __argc, char *const *__argv,
+			     const char *__shortopts,
+		             const struct option *__longopts, int *__longind,
+			     int __long_only);
+# endif
+#else /* not __STDC__ */
+extern int getopt ();
+# ifndef __need_getopt
+extern int getopt_long ();
+extern int getopt_long_only ();
+
+extern int _getopt_internal ();
+# endif
+#endif /* __STDC__ */
+
+#ifdef	__cplusplus
+}
+#endif
+
+/* Make sure we later can get all the definitions and declarations.  */
+#undef __need_getopt
+
+#endif /* getopt.h */
diff --git a/libairspy/vc/getopt/getopt1.c b/libairspy/vc/getopt/getopt1.c
new file mode 100644
index 0000000..22a7efb
--- /dev/null
+++ b/libairspy/vc/getopt/getopt1.c
@@ -0,0 +1,188 @@
+/* getopt_long and getopt_long_only entry points for GNU getopt.
+   Copyright (C) 1987,88,89,90,91,92,93,94,96,97,98
+     Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include "getopt.h"
+
+#if !defined __STDC__ || !__STDC__
+/* This is a separate conditional since some stdc systems
+   reject `defined (const)'.  */
+#ifndef const
+#define const
+#endif
+#endif
+
+#include <stdio.h>
+
+/* Comment out all this code if we are using the GNU C Library, and are not
+   actually compiling the library itself.  This code is part of the GNU C
+   Library, but also included in many other GNU distributions.  Compiling
+   and linking in this code is a waste when using the GNU C library
+   (especially if it is a shared library).  Rather than having every GNU
+   program understand `configure --with-gnu-libc' and omit the object files,
+   it is simpler to just do this in the source for each such file.  */
+
+#define GETOPT_INTERFACE_VERSION 2
+#if !defined _LIBC && defined __GLIBC__ && __GLIBC__ >= 2
+#include <gnu-versions.h>
+#if _GNU_GETOPT_INTERFACE_VERSION == GETOPT_INTERFACE_VERSION
+#define ELIDE_CODE
+#endif
+#endif
+
+#ifndef ELIDE_CODE
+
+
+/* This needs to come after some library #include
+   to get __GNU_LIBRARY__ defined.  */
+#ifdef __GNU_LIBRARY__
+#include <stdlib.h>
+#endif
+
+#ifndef	NULL
+#define NULL 0
+#endif
+
+int
+getopt_long (argc, argv, options, long_options, opt_index)
+     int argc;
+     char *const *argv;
+     const char *options;
+     const struct option *long_options;
+     int *opt_index;
+{
+  return _getopt_internal (argc, argv, options, long_options, opt_index, 0);
+}
+
+/* Like getopt_long, but '-' as well as '--' can indicate a long option.
+   If an option that starts with '-' (not '--') doesn't match a long option,
+   but does match a short option, it is parsed as a short option
+   instead.  */
+
+int
+getopt_long_only (argc, argv, options, long_options, opt_index)
+     int argc;
+     char *const *argv;
+     const char *options;
+     const struct option *long_options;
+     int *opt_index;
+{
+  return _getopt_internal (argc, argv, options, long_options, opt_index, 1);
+}
+
+
+#endif	/* Not ELIDE_CODE.  */
+
+#ifdef TEST
+
+#include <stdio.h>
+
+int
+main (argc, argv)
+     int argc;
+     char **argv;
+{
+  int c;
+  int digit_optind = 0;
+
+  while (1)
+    {
+      int this_option_optind = optind ? optind : 1;
+      int option_index = 0;
+      static struct option long_options[] =
+      {
+	{"add", 1, 0, 0},
+	{"append", 0, 0, 0},
+	{"delete", 1, 0, 0},
+	{"verbose", 0, 0, 0},
+	{"create", 0, 0, 0},
+	{"file", 1, 0, 0},
+	{0, 0, 0, 0}
+      };
+
+      c = getopt_long (argc, argv, "abc:d:0123456789",
+		       long_options, &option_index);
+      if (c == -1)
+	break;
+
+      switch (c)
+	{
+	case 0:
+	  printf ("option %s", long_options[option_index].name);
+	  if (optarg)
+	    printf (" with arg %s", optarg);
+	  printf ("\n");
+	  break;
+
+	case '0':
+	case '1':
+	case '2':
+	case '3':
+	case '4':
+	case '5':
+	case '6':
+	case '7':
+	case '8':
+	case '9':
+	  if (digit_optind != 0 && digit_optind != this_option_optind)
+	    printf ("digits occur in two different argv-elements.\n");
+	  digit_optind = this_option_optind;
+	  printf ("option %c\n", c);
+	  break;
+
+	case 'a':
+	  printf ("option a\n");
+	  break;
+
+	case 'b':
+	  printf ("option b\n");
+	  break;
+
+	case 'c':
+	  printf ("option c with value `%s'\n", optarg);
+	  break;
+
+	case 'd':
+	  printf ("option d with value `%s'\n", optarg);
+	  break;
+
+	case '?':
+	  break;
+
+	default:
+	  printf ("?? getopt returned character code 0%o ??\n", c);
+	}
+    }
+
+  if (optind < argc)
+    {
+      printf ("non-option ARGV-elements: ");
+      while (optind < argc)
+	printf ("%s ", argv[optind++]);
+      printf ("\n");
+    }
+
+  exit (0);
+}
+
+#endif /* TEST */
diff --git a/libairspy/vc/getopt_2013.vcxproj b/libairspy/vc/getopt_2013.vcxproj
new file mode 100644
index 0000000..602afae
--- /dev/null
+++ b/libairspy/vc/getopt_2013.vcxproj
@@ -0,0 +1,137 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{BCA73C04-5A94-420B-877E-FE9692740FA4}</ProjectGuid>
+    <RootNamespace>
+    </RootNamespace>
+    <ProjectName>getopt</ProjectName>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>Unicode</CharacterSet>
+    <PlatformToolset>v120</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\getopt\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\getopt\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\getopt\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)..\$(Platform)\$(Configuration)\lib\getopt\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PreprocessorDefinitions>HAVE_STRING_H;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <MinimalRebuild>true</MinimalRebuild>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <PreprocessorDefinitions>HAVE_STRING_H;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+    </ClCompile>
+    <Lib>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <Optimization>MaxSpeed</Optimization>
+      <PreprocessorDefinitions>HAVE_STRING_H;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Lib>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <Midl>
+      <TargetEnvironment>X64</TargetEnvironment>
+    </Midl>
+    <ClCompile>
+      <PreprocessorDefinitions>HAVE_STRING_H;_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <WarningLevel>Level3</WarningLevel>
+    </ClCompile>
+    <Lib>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include=".\getopt\getopt.c" />
+    <ClCompile Include=".\getopt\getopt1.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\getopt\getopt.h" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
\ No newline at end of file
diff --git a/libairspy/vc/libs/libusb-1.0.dll b/libairspy/vc/libs/libusb-1.0.dll
new file mode 100644
index 0000000000000000000000000000000000000000..4bda76f4e8b5ce998daa9b956ae1f2c527987a63
GIT binary patch
literal 95744
zc%1CLe|!^Vwm3X#(-I(<04-Ln7^KxAzbZwc6ttyH+A3`Wfux9SOxuJcv`tKA+Tv}o
z80t0*x$EBRyLa8sx>t7ftKQvvue(<Pe_;`q!s=>KSJ}ng>)myChYh>dwL(}b^PclO
zGm}Z$g5J;f{qHSKX6E^Ep7WgNJm)#*Jm(qf?s<gCWEe&ZmnbsKA%^~yGgtmgz;)FP
zFI~kvKm8XA4rw<0V!>vwFKh~i0^38b4pXbEvopY&THK}(*J<)~nyMOXrj9_Hd)cg6
zGYTXahF{;s-~DpIDft?Fe&?xLxUWC@lT(%C{=_K@$tygyhP)p<RYUFvPTfWBPoJ6v
z_x8Sfr1$5f`wQg0$=B*dxaqiC%?z_aqh++SzHgJ$K4vl&%+ySWObx@_N7HIo!Ltz_
z?$h9_kvwNGOg5t-R~Dm@Dr*Q4Ki!rA^em?@Mp}j5>21iOVY;ton06?#789S-FoW7j
zh&!ZV#-W0BHpAp!W(-#ENE<7tQ>>Y~{4&<v!@_-4z0@x&MOFQ0g5EA`bFnUXezH>P
zdp6uRrvip{hn9uHp;mY%eRxhPch7`!<;z0u_5c+8eh%#$GmnvJsxG(wGF|=u|NcMt
z`zPSXF1T9Y+60#ct|GWhaOvPWYt}ID!gUO;m*DyVT>Ieaf~y5CD_m>gS_W4>Tza_9
zRcV-y;TnPKFkJru*As9(3|9!Q`{1g9s~E04xW+3r%qUzR!S!>vUV`ffaP5Pu7p@>&
z_rPU^s~oOd;L3+f57*z;Qyw}6_qX6W4A+n0`T<<uf$JaPdI+u_xH{o#fvXX&dbq0K
zS_4-xTsOfrAFerYY2g~L&@f|g{TZ&0;W||@aZ=q@qA^ZJQ(2~fm|z;<>W4Yn?_?M+
z%LdmhU*7I(;leG;e4U;E;Jtz|BILQuW4Amwn=!WIMGCAj6^2dQ3d2n%gte`3MccB%
z;@jJrAgy?HPm^h4DR(Fo2tnCySE$q1xt*acFie}fh1(8yu5(9cpu3acxb*+>-wdhm
z+gM+RJIuN|f`BON4Y^%ywN*_fkE_+!?qheF+TC65cGETw*V)SY0-dl(w6`~z)<T`I
zYrFdn0%k+)`YpEg&MNczE!Fsb%Pm{#@2+of)ZcQ8oM+ooS!uS}Ov_DD!sbmC^)`!n
zle4m+&bq<8*<7W-QL-BB=1rCj4GvWsN?v^fv}doaG*6Oe+g!0>!zAgI74?<o4I8kj
z33;1q>&#WohAo>X$un=-)UYX;PF|h0_4bMlwN*}Q#iok7^t^`D_X^Va)HH06HkX<X
zk6Y8z>KisYEe%`ht0tr?L`X?j5iT`-bB%e^B(QB;tk#B2>M>B@*O}|m`@I<+wpdB&
zwDQ(kT&9^eU$`~U<qo;qoNex|u+tR`x;xt#rqk_iGqC|sEn0!k!fs%uAn+Nx6L~${
z;&ZkJIy>F1EY|Y1y6OBdb%%T`%np+`zy{m7?Iwx!<T|9WlxoZa?ohx4i5}l}F62VC
z4KFcuxOReO<LWeVoi2{`2133E02{dqg%x&nLR$~G6-W%j1_DsEb7vYnhR$Z^b~oz`
z212Z}lj~@4hr$fLn4}kzD-?3=G=YkRP{JKBb=37bTs=<c{|<NzL!%7S8sOU7OsIo}
z+-%4PGtcCLSqC@TIA9xY4f%pBNR2c&zHlHFmXyzRhTI;xJ5Zes1$IiEHWh+^YQsMI
zI$3w9)75SY`?kZa9jT3i0HlDg-Q7lM<7smOW<HOvl~7=+dN^8cxgz`pVCZQ}*eNd5
z88(qdCHyd3Rfb_UxjTS$fK5WK&alTFG8G0*o=~8}#CqMpI7>b4zU^KXglQNx)m9e=
zY$Wx^>*{Q4cVmUt_CT06&s3mV+v;v_Cs;$7aOcge2}s)s)!`@H>UFnqfUF5}u??kR
z5AvQD)KQWwwE<&^z)@N=lflPIu1*!A3OK3d)<8$F-OWOKEgUPuQnx^R!L$XOq!;oU
zRh805+CfCGU4?PCD{Kn0zV>$L8bSrdz7-~myKM<+EVUc7pfq&=7S#2)LU`+Tn{eH^
zB3~>~(1-ca?b>-oewa`p$p=bbQyHG}C%gdPwkuGmT%dVmuD9%D-C>Eppetayw6dXg
zg)nzQIgf--3rrG}K{8BPnyBVe%1l?`7@jOIB|*YT>66RX;Uq+X<<u?F6CYE{fu@bp
zP+c;mO(oswYG*NpmDo=W&jfi=7J;td;C6+aUdV*<AcTVfsAMYaNw$qGNb*5S14;#2
zoggaQu8uIaBR!f5Ig>k>I)6POw_7PHXG(cHfEnEF&bAN?Xvj$iR?cg4v#wTeY7wP<
zcFH_c7ZDTmKL%G3mI!f=i)&}en4+~L!SR7GXF_g{a9nyBSd-c%Q3g7Whc$%*9rE-D
zn}}FqNRomu&FO|^4Jx>HfP9hU>15y;l;W4mm%zGve5{)HXfsX}Z#cePu6AFWNg216
z4erkEtk+aj*tQ7A#fys#fD5@`V94q~=VxKtavTSxeoBdUka`qAc!w_-q}a*p3bF>%
z0)O2t^1Y>nA-br$CrBklN@-J(l3v)e2<tFR&=mr9ma$gwlzXA7uf{gDKTyy!u}A5B
zN|s9YO0{OoO@?U}g|F0^6bBi8a&Dy(o%Ss`Ra@l0H2hU7_GQLIUF!1VQruJ6Geg}s
z1%<HEZyB}(H3e}xl5{L-A5ujb#eIUFk%Bv2GC<Z)c^gO}Bl;i6Ok$XjtJ{e=PBtL5
zGHIKVJU4aw07<n>pEw^>iVuT4)~zl>C5r^xIk}EBF_X}%&D|rlNpu`lNs{Mm+35t5
zav+h(Z6bc*u)^m~T-rf_40NiSk;g<usdhRn6c(9ds<8`)m%4*X5!6zdE0n@eR5ee4
zG)qB&o?@_6IO2VUvlwIz>+TGv;isC{Eudpmf=1p#EWgb=gYHS^H{qo2iF8OxNoT79
zC57TxmrJdO^3dh$g!RGKmQprJH`>cI(TA{<GA)7dB>CMcUWXD2-LUlJH1h<w&NkEf
z2Ae8>jS2N>h3S{zlhQq(JDeO3td}ZFRQ-fTQ<+cVeb7Wm9jr`H2m88}17*_fM8iD5
zu@lR71YmIqboyFRood}d^r6ncI!RX|+Nes4rFE6*CF=#Gm{TqWaz&+YgQ`mGe4;BA
z2I<_Onx|63DJiljJBTO>g8GFrixNWt2cTp(huk(B+UZ2Zov4MgVY<!+I^8CBdzh%E
z9f3BVhb)`H00<mUTR6F1Vik%D<U0d9RB%;!6ZDO4mydOVa!w0Pq$&KgBf(W9rSy`!
zEf0n(ytA`a()nfL7PcjafMTpphg1;Uvh^DD!L%Yx%1xLStOL!8@G8_TT9njdaYS(p
zK*C6hzeKVrBqvxyXmYqr9$(li+cWBhnJLQ1%CJ;M!UIqP($hwy{-bJL*oInR3O)?l
z_C0KBDdPPi^TXo{g_D`CcI-YZ&OJe2h*)Wz0n?UE>r)#-I|?XCo59IvYOs}oZ7dg9
zkUGDxd1a6&JeaGg#VH@V+S;7hK~Eb4kI+LhOq8ssQ=$!yhMEUf04bL+37Vw<gFes<
z1tv|D!KV5KFbSxD!k5@an1ZYgt0ygYbJ(O9PDv3F#)*JR<W4u}rd$yH3e-q-0Ahje
zuqg;q0yr85!v*EMFxRO24lA|=unE#DlRQ}%hNcF%kSWmJIUyHtOr}WIq-2eu_1KMh
zF0k5`5bwlJsgBgw6n2mY!l@X$3^Vfh$O|KfMh=erbmWDTyH7qe^6JQQC%<VLIec;u
zl7BMt(#Uhf&K>#w$ZJrdA95caIfNx%9eKe7X@^IihkuxJ04n@+<T-eL2p~a;=i%j5
z_;+~ZMJ)L;)P3mW9su1x@(Lyrxc>@;UOD+q$k}HCz`IX=g8+Mt)P0T_*-sK50xVw{
zdG#cZpneLsg8<;C02PX2acuWhQxV(`Ll#0mfDJD(o!kvr{TG6Q_79J|vWWC0**O#b
zNZHR(d=TCXq-QT<C*e9Y@&dv2I}#=@AuPlL3%)|gMS4#=e26Bf$Tf0^8F_-xH*&K7
z<Zct72nDgz%*ek3EbJS!bMhgHs)){uNY#;7Wk18n53y|k2y`P@{1h=bOh_FezmRk?
zg2bPU4Dj?SR`>~!?q#JWq`m;n9Fn?u7>G0SC}d$vk&)LZo|MGVliwl)M*L0=AibeM
zGS+kuo*VfoS>Fji{giZF8Z8(}lK%=}jQ$Dq|0%&1NVl8}tn?!HnUHaSVJbK<W>KcP
zIkILo1dl!|sjHoENi*^2vu>17nBoH#Kl*G3@I5AmVRE&C8SW<2(~a}f&D24D0AwA^
z^DyTD!Rvzg4zMeNL0Ck>JHzbJXJF}ZwZJ3_baozn)>IU9bL`Ti|Ax36eZnNUxqjFG
z7}qH|SC9y1f+YwINpM#keYPbKYIAqcB@S?ROQ;iB3;3abEerwx%$l~N&-wv$ptY3?
zk{p01bp+*6D8O~OTG~mv6-eL<dhz#u&aKW(K@=cL?xds7k};}iZ9V!7`ei&^n06}E
z;R~Y%8crca7)o1RAy>!IXIMfdqSm>U{@n~XA@<9|Kzg5>v2g@2Qvo_Ul=q;_U+)IX
zd<XG30SQ=Brw`<201Jd!H`hsIbwg)YpuH^s%c<M6-R*UA+ld!2-0Jo1XmPpdcw?28
zP+$l824Q5}?hco$GZb(K8K&ATWdwbGcx4<=r;TVVFy7lkfdEiFiAR?^)K2{fFwW3B
z7mG6A%e4mqN+;H8aX)~j5mS%2Zg+Pfx}A)wd<*W(xTMY$0l*fJ{Rq1Q-d%F3E*arF
zfsUI4?(Hrpu^sU6ZFh&-Oho}zw^^DU4!K*sU=1vS{%&`-w}H*)3T@{k#;Ju0?$FZZ
zoR7r^Lf>k4JGTQe8^}sSRk|d9;X<Waq(UaH6XyltMA^0KOD<WY4Kn_%KIFF!SU*EM
z85`2OgQ%W#Nepp8td5N1bp>Hr<FE(H46vduC25xpKm|{GpgWcCaUp`{0e^+>VYx!b
zqq&pC?JY!{sQp;49zb)gUfD@n<YRHy02V}C0?}EV+-q>7l>z+i4x=#v;{#aw)Ll~X
zI++W#lC6Sc2BU{6H>3qQc6kHG!p&r+{XpIZpiBrfLJz!mwxiz;bYxIFRmwN9ZD4ig
zT<uP3B1-yyYB@#iRcY(=Z?bh;QY&$ba*6ELCf;d9neS{<FaEMELAA%EF@c*7t%2>G
zKJ-xo2eTa56M;5jKDPy&1jQDveTT~YQ1GGJsuL&nb|0_<pe|V=81F*=n6$qzD9l0G
zr11q92f8UxVpfu*+CX8LIOc1YH>7y$iOlO^7`Yfe-)-JhZ{AR{B56w@M26YYN#q@R
zj;ZdCz*sL#Kk9XN5zZ$&6{+eNqu$qP<EYnBapWUfa`UF8ChDsUgnZk5s1AZrr0AH`
z+3EDqZ4D;S*}fC=QKoEiI5(Lqs&L-HqhnL;W;0A@cXCE9n^EgA?F?{$E3hW?fm$h8
zez^mtQwP`1x;jB+3%7%MM_V#sqA!Rzf)Su>!GwW(CFGYO9<mLNc)4KR>mW1M+OT0m
z!<NlB@jcW`L7iU0j50WrUcR<ItvKnET$<1T(MEc7CS^_7O~k5Vhmdk)(*bN+lsU@I
zH5jHi41{nTawhhliV{he#o2=N#|)|qD-%Mk>yt69sjV_qSZjgTI=9%?FKzejaN|4a
zS0zlgKp6KuumqIdvYtF`QQ?j6cdxGkFbq@Iu!Y>=2VeoO+16K9R$G~hx+<tzQj9R|
zkXQn5M3$(YD{OU}u@EU!TR|Spn>RJoONpCn>4RlMV@+jk4YNsAw_f!uKf;|<pm&Cm
ztPQE3@;oh;?sqdw1Fx-l<NjMLd;e*^*Y(H$yxI8LM^6>I-<|!)4a`u(iyQwkc-7v|
z^hZZ#59TsYoX9?WDo6bM!h-*JqGoSl|Lmuqz4cd2{~f>l?N1)p1Xo~mlZLS@))@Og
zWsH$eXcQLz8Dl&S*T^Vi+zR*cQJVe-c+UG9V{C%!y3ZNoYjD2<?yk=nCB|bnJj>TU
zxY#kqIQI+2_yc(U?m5PIPl7QPXEMwl4Z{?v<jE_yCSkM`XpHS}J$QjJJ^|NZxc(b1
z=I@Mg0bJ|hYK3bLTu;Gu46Z-HrMt)&7hR;WBF_W7@3}O_S^pQ{VT{U?0B;1~X;kpK
z;L;arjCVm97Vb~L^$uK~n>EH|MH=J3-J~(<;Q1n?y$<&TT;GLsj3s;o;Jxpn&zqq>
z!doR`TN<Mau1gw#q0<;0SsLTu42>~cuQ9#}?}%R@TVq5Vs%L79M`me^7*;k2@IIE{
z{UV3rx9D1p@&C-H_??IQ(>G|0PPi5>)EGa$QDeMt1BJK0SYv$VMtZ#odH+yYyt;8|
zVev}kXGJ4k%0v3qhq9W)%}AaRy7HidMYfz%(oIDc&`4Zt9o+~_&0NH6E96K(&%O69
zyBGOklY4t5?p5CH-swntuSk2x=Z%~@w9}5hV{?zgLGx46Dke!I^SZ4IL`2DoWo<;{
zF*aP|s(hf@bkeQhTG{^(wIyV(RHou9lu@-+?Ph6_O=Kw!?X-qKpAE4)D;!^;OvP6y
zGXbBe`Z5*%6L7AgTW)gKJb?|+qT>qr6<5fgj3x@%s@yCr5*3cGP^RK5lu@;1?&Lbs
z3WXh4$iGtk$?`k_$E0;Ufr=^8Q~FWa?h1z?FPuh$WO~IE=?bpE=`x>JZm`u>SwP#c
zu_0KC9h0P0Op?YlY%nX6rLxWm?KmmE&e|$OY(iSaBx%XIHeX9SX+HJ6BJEu%U+ML=
zw>g;9_lmT4CixELF6bAIwD*d%cP#JO-myKDlmqgn7>t5b3i$<nL)I??Ex4PaM0r3V
zx-W+sjkMdvp?c3Sa?m%71x!WNZroCn6!zE=ZtGmu;cE>A!T}Gv3@nJ{?#`uL7~>&B
zuFy^>u&Q)LY4NSgT;X63+OyqY*KS{?)_1A)rrJy;*c4I2Wzi&Psq11G0xF_uwbhlD
z5qcy8B-+R%N`o^w4sBdV$IeMnm`KmdU?A54I)W+*^pg}MQ+Q`bO8}I8Na)-_3*j0f
zW#eK-_+bOHg$Xk)OtCb!6Z+!x_}ZztI2moiLBt9X^18xa6H8n+)QUj2b|;3Bh1Ge<
zN5v5@10(o&Ay2Y3Cbe6_WV)rd$f)5Gr5o&vq9g{3C|oQgmu*EqINHaiqMHlDH=DY`
zCcLAuytaPJh7EUsP8M=6Qs|ltUV%lPMiHu`X*vU{-F~`}M~6vOsGF|;P6|`mxDBV$
zmiW*oY=o~-@3SPwfnx(pNt}-<Wl#RH^9w7{*dPGZNe#%(Kqp2r0Us$4-EAq@lkUhH
zH6i!?oSQ66Se`~2srR%96e+GK6-rSd^+%9;QVIE8uF;l8+uE=r(0%(#D-9=eq`g<9
zy@L%+B6pH93(RlA|8TciLF2*~>3Ny-O3KJ@cisuM$!3PRedW>?A9Qj>@vX!jU(L{G
z=cX0R>Seb|&n57@f+<Do7hSF)EK|H1%d8^hi;4ZzXeH0YPQrY=+hJ`-0a~)cMA}J?
zD@aZ-;O(_l%dKGNfqhw1S!MEaEz}N1K4ql&Y^|(aXgAk8VLtcVRAsi4hr(OvzE>aw
z^Vr+kHc1%6W%xsG%S-qIJw}p0SG8B48c3nq&L+FnYT<^+F8exl)xw!pZgpXh<Rrl%
z$WJYmYH&n_U02w)MA<Q4L}Q^`Q#UI&#H7hMDz~SsHUUv0iYJkgQ$lFrJaV9?L?wpy
zbz-<k_-o>pHUM;$C<4)szJw(vS6f?%KDD`ntd~BbX8@lTt&zx44J}D$0OTb-9CXu-
z;i>p%ja(9&pg78Mmh7*hmm0YX`}37y1d`6xBn@D-f_s}=jv>YRsBxe%MZ~&&1tow4
zEJ+6{o(t1BF-%5O4*n#BVDK!2Qkm|En%Y6haEFqSs|&scPLraes!t-3aqbm{rM#(W
z#3>#@vQ>;uyfEdeuoM8U=IrfwvQCvl9feYrg>vkfPl?5(vpyYRc~jU$h7dYMCML+v
zPISw;wu7<~W(ndGcvb2V3787{oa|1r)emyFD7;AOD~vFrM)VDn6nDu5gA>xE8$)rH
zR*G$fZB3?i1W;<4tY)C6Zm9_t-T=`c(1C`$Nk>UmqsSV@h1^PDMsg)m(X=qU%(NvX
ztWyckqCvWn|4kLAH}yEG>8jMcOdkL<z;$YP9j+eJ7TbDtfF4vP1BJL_zojuoT)n=w
zl)&Gq;Yu7KVM-i^mnjdVrqiq=fYkK5I*CN)!WhG(1Q?=67iKuSY*Jk>N&BD+L<iwy
zImTF_l&TbVZ(Ct|W78T&DTm#iyhNJLh0>aa^?S(vQONB<U8x1P{D@T{%MEuA6ry8K
z<^^%%y2(}xz;0|py>l569?}YcWjo#7Q<bNDOt=6wG2$Nv-J7nJp!}m!0R(_4R0L4k
zcdBCMDa1P$srZ_a{<u!;i(4fZWMKecpk?F`pv@9f8q6goH`}@_6(Wrlt=>{wb$Q!u
zjY)|P#lmDlRWWX+i}5k7aIa-L85Zs##>2QsN;Oy?wNQr6Jt@Yz8@ErSlfbfwlZ_}A
z2V%1qsR+dFRt<xstx(ypMp@8Rd_`!A8^5eeJ}!ZqLu3nsR!dti@lTbJCI>_AAmt5m
z;36D``Co)?JF;>B{bVMe^jwYVm`*zE<n)lSNY<AR2q_kJ8=V?52qJwOmrT(%h%@yW
zj4Rfa?UnSv@XO$nI%8Gq57{$dB%eP+{QU}i5`>=8PuvM1wQ&Pg2`mCWxS#W-#Mh&D
zR)IrzyDuw~lIKsTnhn^y+VLb7)|26cxt0!C303=vl0R2A0a+58no=h{pi!B@N+rT}
z$@H+h!xi)r;V8%UDR}{91DVJl#7@aehGjAq#olTS1b3o<#@<jLflsNMgeLDJDX?%4
zQ8p_jW|QNw=w_v|YpaC%N&Bcv<gipV4U*f#%9g2;CvEg9Ik^97q6asW{oOFxHJmi)
zEPeZ4#Vb_%F%e}XWw#jl2jk>=n2C5O`*pA`wvuoO8fr&%RB1aJv<Wb#FwVlqS^^;(
z6l-@kwD?hsB)6(nJV2sKx8uswAs?J-P50%vB%Y=k1GWc=cpNbx>2r|l!99B5Rw7O@
zBA`9sYP(at@2K!Pm%67%gBQrW!xA9umCf+vaYISkElR7e9D<q}CMj|AgnE)1?N+%o
zE(2p?=_{a_ieu`brpw`)Qu1rGG2zgY>de#B?M+qd>y5#rhp{f(?t~gwY%rCcssmbA
z7<;+ol^RIxkLrNe75b4Z`SoZf$?Noxjw|$MvRePEcJb`1YOT0Jd+O3(hbL+6Nn%~D
z&|Z3tuhAx1Kx6<{q-RR$uf>D3rm_lrrFN9kUq^PpDw$lQ=<dbk<Wzd;D|ITl9;0GG
z^a@zTS_oWfmrAK^Daj<Z0rVLMMvYi$2)vwTbF)^oimm9%-<g^YC6#1VdL<VkdpYeS
zrki!!6yYV6*@P1<t({GvUy&r~o$Lpvl_6=$R-ObloR**5q?3Fe$^2SH+e)TYPtm{X
zDf$QL7-`pzNBY~KBOJ=DWL{Ou`Ko046=?!xD#GDFs}J`fYE`mV%D05v3T-UyT-cjN
zn@Y;|n-%FJrB@)c%4IkBTJ9!23k6y$sB5ceQ8EOO7<)9V#Z-kKkeH;r9QT4jmtjez
zOCCs7wPC0E(q4=TtYqFI%Z5Q&l;fLdd<`ie`*^y5ory}~_F+8Pk{Kj|Yii?6IlRiT
zVP6|DtK4AXxRt}opeF$qJ@jC#V(;BOX`@SMOBh851BPBXIRYpNN7jMT{Acp#1;Q8-
zncPR9UZ&(8g`4VI6<anpI4d`pE2Qss(C91mX3r#bHf(5c;FmWx*H&yGv2V6Xs;TO=
z`NE`PZFPOaCbQF4)39kX)UUkTym``^lhsvMa&9(ns;jN9*lfOhyXY^%k7A^LX9OeT
z)Vn$9jmz|%Os|`4YbbRLChT`AwuO3sLly<8u06@Sc9}7iZQ_5B)}ypNC%PAwY`fT0
zgnLzZ(1+MbBwN<=DMu|z^V_F`P|%-hZ|tkIk)&yw{;J-SEtd9*(B39djhE4L(fyVt
zbW&^*>0@fh0I9nKa%`xpQ*s7S2PTGk$~aD?YbY}^ZSa$?9US>AhDjz8IeC?Ydl|iY
z>V+$%Ta3I=Emu~{)O`7CE%Npc!bayodYbIJPTkfeLzcd0tER~W9W&{LClFOWf&lu3
z2=gWZE}bl_nNb$x)UK#_CaI(UFWRF_?WX4oruN-UIC(C8Q-)!bMQjTE()G7we~QR)
zLwOqqNxUcxhO(G`g|bOJu3T2eE#3Yg?}S6#L0R4@XP?RbBi;9rKVgIi_d0xGnO&&U
z4`!dKh`L#5>r0Yx^>Wf8DxWUni;_0_<?pdzSh_b9=#-+M@yuJN6h4D~VJYr6sbk_y
zAnxr=ZfWN(O!_AwxCW2x)Bef+D=aMKD;}(=`2lwZq#a6WamKI+>=W5EKp{neU8$e+
z6D(i3qgb3J3wyG!WU>?drPB&2eJ1#Xllav5+N?weLKjP=D~M5R6VfUsNn=P_71i)S
zo#osl{wpo5Vv;oa4ibyvN6~Z0<<inCrbt)d0#4*?MiR_q=@nC?D`{5m&ae**nxt0j
zxJ+KfW%82kSlliaG=dbIq_m1j(v*HqsArp`o^4{idai?XZ9U<{a7z8Oyo$@@DPt|M
zL&|$a+Pk_RHg^aVm3krx<&eOs^C~WrmxKxWd>hxwDiMa0rdLdnuEMR()ya7<3L!KR
zw~2Wbm&ud)8LS*DOd|YdL0c6}NXHcE6;q_EaZUj<d3wbZ>8d`$y_)m2rSO}SRxwGM
z@?OD0$3V1T$m+zjib>KK2E+&n8A{tTL9r8*(UYS0CPf=XzR8rVEq(tAEfGa5OWR79
zk-OxJQh3ryipf&dO`aPea?d1*LAA6mr1&PAB!1?i@FMA$nF>3^n{I=vz9&Jtrp$yz
zxQ~iE%DxT`bz&5~(waaPOWcd52ZB^F5X8$(jR45U2G~GQwb!1cUXu9IYB@pgPwrNu
zb&RKl@Pojnq8;v?Edf`Eob~H~g@kT`(vxBG0UjLBud*i;1k=MMEiYj<#F2@CYaXZC
z9`Z<XDL~{k>I~#Y+DO;w<>hE9T^DJZ)X`KQ&PqMTNWSHk%)F!c3jI(oqOvkZK5#&W
zU=kxCT~|gsCXJsKO{PDml`Ae@MCmY<j!c$G>6-(H%l)`wrs->xj!8Y2yiew@BmRsD
zv6s@;agund=m)YtMwO3b;G)DTXe00N1xXM>$k&=u6T@PFR{`NkxQ+6v9Op5W#WYEo
zH0n&qPw^(J^HV+bDI24>D=IOUDt?7*q6RwUK2y^<X+Ox}nG}+;9Vzbvf;k(O@{*pQ
zA`1c5*}4;o)!x36Gu1q>X!89pC&kT8$7gbIlWgoIb-pS0fLq+H_+c~}5t9tjNI4@(
zj}WHRRF_oCnUt~}AdGs{MW-ky(NsF7SC|TY$~xg-pc5#b-1?mgCny?d?{ZUropgXO
z%#g38OO8LBOY(UlNUd+!oMe6`l@BCYoI1ktn907l2{@-Qg#3-&&B@Q+s?sVO>Mga^
zscE*&n`-OR(rDCB@_myTzx$e6##*!0R$E!IL1ky8d@m~5O|?&ihI6GxC#z)ABr}s?
zio6<QkC%RvIlI6A;r`wI3}eiExc}jY`g5|f%x3ezz(5wm6c_hf`}-LkQ*`rctD~Qp
z#;htXwps^q2`=g%ge-=+@4oxIUaw9!ttS}l4hD5P2FmN0X*y|Lt6~24f1@sqabyQQ
zd$-9}WvlRf^Lx23TkhKPLg}+-#_#_bp2KTfBe{{}TOfRIpvCVAxt-lTL1)kE+wb+2
zzz@w`dh4>{Wx=)<hB;oUVg7Ah+PA8CaSMNzH|zG6>ziKJGH>BuGHup`G``$8Nx7U!
z%H^e|Mb7FC2WqqtcY?9m9nre6ffKv#;(PQF_c#-IP|NIE&Kn{}w1xw>mb^P~Zr5DC
zLbtauV@;Eey=i@9D5va$-civ!&YQ<0NAk+5wY?vR<^*p}M22-`=CR%vONN}y+fJmk
zXy-YdT^Orm7}27&3pW8j^2eG}u{xji5jhQ-!EjmrvBvmJ-mK^AbkT~OlA)&8b*X(C
z7~-<_o7@^>q(=+o`8s`6H=$5OVA$Jh*qfH(*>QGm4XZ5~iWlw2W(u*Lc)t9sVdBP;
zq0%e?UJZ{9#WPEW%2To1xY5Qp=>|@-8|;plIbjuZhm4Go=f?TIgrD)xusek6pEHb~
z@s_VQFq^Exizo1H_b}6c<Q8xLx4*;e{$N3U%O#+9rB=v?qRwb$bIA}8N{#jYyxEK~
zGE{CAIh~lB4=-D{rXsTYY`&IZ_9J(e{45H?P-ld$+M}_=MN#DIavagvC*&!wL@YTM
zjg7)f*)TVqP^)a1)$+yhYrT)oVT@v~4&g)E4Csy?pZU>}p~xjIkRUoRh852n_Ur^U
zg}&<}7c)3r+2@9R+aV!xF_XUBLteD>r4C*ku>k>UT7{oo62;P25ej=#>AKa>Iyc{I
zg?5Lt@CBJ)(21hxO+d@SB`D3mdKOCWFGfTY{0j)CZ(9BCVWjBd+m=A`;sk#bM%A$A
z_c*!P!W#Cv8g_OKJMGX}0206U&?k7Cd*~y)=?}e+x2!{NAx#M;jQ9eQ$;uWAjUY^|
z4!idm$UKbyZ-v;vIAqy@6h<unhADoX_tB{`bNIx7*sCqO6v`+O#TSss{BOk<kn*uT
z>#*$N|F&6=0l(+wkP60uq26gR{pzx}LmB+h*oM^^@HFkvrA&rdJnWy5IlR>q-Is+G
zX;W6=?3bdrjjtPbmi(ewXgtm^CtlA{@j=X-2TYP9az>HU1Gfmjh4M{DQzt;;OT#xG
z2T~dKJOaOwMB>41Y(pgRI9nb`jIp;y5?`=4MiS@Pxsk+q!@v<JbLf#A#(3rxd}8tG
zr}%UqK0Sj^RrvIMd@9DLNAW2SpY{^?7ubSG;_qx;Byo||M-t=Q{f8LHjRy`1bK&Ma
z^giBPhhD+kJ%^sbn=LYw5lQH}En>mIs{0w^q3>Yox<kEqyZulb-j*M#!CTRxC3stK
zC}%Di?Zg~9+H=TgKR1Vr_LFeKDHE$@J`Xa+vv3sv*uTSF19u%<2Ds+Ibv;~!V2Ad=
zAgO3)ckq2WepM9Mx?3Bb0~8ik!k|Q}4(h~d{BYc6^S%Q8@;(VaeyyJoe8|4t+Q>0o
zO#1?^K30dATL3`$Q;|3F22OJ`;JpZ^SR95-9}R1T-~SzFsV-W@>%>g{=r(6_ssP)#
z5v8W1WGL2`_|cDei>^eB4CPf@qkV}eHy+)!R(SFb5Th0yZ_SAe8DsVNQB8ECmbYr7
zGom$G$bjNj;Uy^K5Y9kj14HbsSiF4oz|gLn{km9PVxv_k-+%+BW9NC#VvkP2k3;Oz
z3I77@1Z?YUK9Md55iP!1!OT8vPT(2|NC|VGu@cda$gPLR$k9BTaA_T4Y2pDt9dF6!
z>rH^2ExIc|y2~WwLn*&TxQn8<f}&S8ysJn?Z~xsCy{jpD`dlEm2Jt&TF5x%nQuDyI
z3<ERHY}?yh+J8~kmG2EgO>d)8{Sd7lIWER;*mIhj=Pgk3aXcTR*@MlwAfnS2DnbB9
zY*(J6<g{QSy~~N!8)3n+7L;w#vj)E06cO@c*8H-QTs*F`3W)>^^(lw23<^7&VXP-C
zRW`m+hfHVW&ku+XX8A8Q##iuL^m}V&?K#2Ds_$7csGkSxJuG`?%g*=B<%bs^v&OXZ
zteeDKEs-yJOafvwy{>1xPhejLu`d}m;q8m0EB-|MN697)2h2HEDm#Q85W-Eb8`EeQ
zGwZB&Vf-4TV_&}aBLq35kZ-31^zp{{jQ|6BAnZSnV+d>a#pbxya4@Jvq4Ze3w9@M)
z1^;*oc-=f1{IyB&cS+#atH3WY9JGRZQj=*o_&Prt`Jc?)e-x(ypIp$eS&<8woc@R~
zGxBj}x#2&L@uP^woT<<lILGdA*oAw_KvLIh`CXu#MB#ZrbaFPs0ZWb*e)LxFTENU(
zG*4oV-oGPud19AQ_%EQ{{?#Q6j0~G;7e|1XcTq&M?ZTVDM0TNT4a3-_$)CnaWQHFz
zi<*IRhCTnt;NrQf(ILFG2KA)P4&l-ooE<T<XcfEk!nbRXSP$Oh-G|t)h)srF`1ArH
zl|%S8)~bhE$KfHq-Y$IOretlMkXcJ==Xy7*YyU*9-6+@Ii|7hHHzB8<n8^1?6rBA0
zy3NpQi9GKk$m0@uqJ28y9s)KmvTH5F>HOo3XO7|WFq{WM(1b!Uv2{S?wEi#RfAE8F
zGL|B0>>U5&&9ao_kDd8v1`&Dn3!pHki&levW{p<oM60#2Y7lGp!eRwn59LQeXN#gn
z*tf!}8nWlqI0+{bh)}*=$N)j@5Pr8B_<_^KABlwv?83d!eylPdBxkHa2O>18Awtv+
za!U9I$OA>x7F{jWLRF&MPLR{MS~!HOL6MAAS6Kx;*6A+iE!xOm0p!|<ppEU)g05C}
z!LSFH)_5i;&$0S~XkDW88pA*glFnK3b=-Py;%dNJxSGrZ<XeKa5i+&xRo+LG%#66+
zTbx?-Pv@yXJ7%&AJa(^I%Ns!APU9Q2(2<g%=ro`mXsh<<G~p>IU~_mso+pDq8a)LN
zP^o_-k00gBL3>7&Vd??yk)gF^3B!Oz#1gQsKqp%$3GG5%0gS{kAY(43RO<P=b<k|3
zj=x(E?M7O4Or%v0BY7*fDdvvBaEW1~uoEVSP1w4MB$6?ou+*q$$3cc*jQ{hUmq+p#
zqm7{aw{w7y#mEPB&~-9*9$6*Lo!3{X=gvK5!u^ZA-y?N_^ABRxCah-{RuZPzvPzl)
z-++gBwOz0*R8OGSDTvwLb{PbFj*uLn*oDu&L=bai5LK&?c~<}c=eG22fz3twak%js
z#%T9zOHSK_MF48Qu7qfcWk*>9)#=0$J`oYexE}9nTGTe!Bnn@CL7MdnnKF7dn_uTe
zdl(sEW-$yyqU<6!pW29CBdMzqgU|<BHS&%azat`QxLL3cfD)oF5u=*;JcoBIk2WJb
zMhfNtlzG7YVzKvQIp;x|!w-{{S3MB`XYV7|pm4cH;wT#}+awn1OC(K8A_3SF4$z^n
z^po&YBKozCXy3T7fYyjyH1(22@J^y^Sd67TYeDpnH^!IRg@3;dm5gfs&G-H^uuIF$
zv4M0omY@(A2f3R$9fkNCx8bxMZ+52Phz(2az9nP%?_;TLmXh_|E|^o>ft6=ld@eSY
zQ-XROD0NxqKU{#V*`cJ9KbkHX9I(LheR_vie=W{4xxIB`R5*%Kd+Vvn^1({fB*35r
znK{cp?z9UcrVPgyfHBIy^WMh;7A?rki}63$g+Hvsu{JsYnLI$I*@?@3%Ic1b7PeY+
zt<>u9=Vb2kHE6v=cCKY8J!inEfmM@Vf=aU*dBURJ8oBzQs=6^*eHzp?l`v_J2x6D$
zy(}VduMENRInj6d3L|zNd#Ux0$FJF6Kv&PJ6k}$iI1<nFk2R+1B#`I*9s(Sc0e<nf
zB)}X6;Jp1s6yVHsX!<l>rQ9b&dwNo6bN4Ty&~z!F(%GJX8j?ZXI|ZoXuMFxV8Px14
zK&`wIsEr^jRYv~HMPNPKV1@{PT7g_$x(>~0Zl=SFcj1~(!B+3namA(U&`rP=d5f<D
zGzzXmG#mo|84(*|Rslj0&LD`PGa{JqcJDq0rI46Aj_#1rty{~^bNXTPI4;{~UV##&
zedFxaA~!C17^2x_!|b$Six%zwm$3obBzHZ9?$uvMgu5ep8zu`z+O+qvTcDY_4!_2m
zxRw?Wz8J+UQ_Pa*unKR1)QedP;OTYpR18mt@Tu7t-KLFR7qjF?%e7I+De|raz~n{v
z^{rsP_Ww`=NHF(7zl~9H|KT1;`XQ$Cv+yx?cn=ylu#isMkMGgd6vjGyAwc$jyn+nK
z4A23o90FaV4HN?MVu<0FcK3fm%VdZnWu$Z5v`8V|83IkHyLG~<9l4o_Y}ZQpp<A(I
zp!@u|nAjX(W5jRZ!Qv~8uHk3%JGIdVw2=i&#HD4d!nI#W^VJkNlOL_q#cJ})-sDcA
z)gnAiX=N2oFGt((m&*ykfQHMHnkr=&;ZiY?qw!oXz6+m{R~>dDT3j+j#A~{BC@s>*
zaU3PNo<PxV0UiTEhYQ?!E}JJ5cnzUC1RH>rNKz%vLN-8W9Nu^3d!L~UVHL7Im2_1f
z6hE^Z7|6R%&O7s0y0B4tIs^+8d2J;Deh$0$Fb*IOR<SWUo7bUww^180F_HVUQ23f+
zVub!IPK?m7UHI7&q)2|L#l+1(XP;f@zDc5eF+k(%bAZ}F*H}e<%x;W)nqT%hTLM7&
zyy&&Ok#E#S?~$Qz6dpmj_YVJ{NmZJAm(YhmyoQk9SZc{(LASV0(k=36hbR`1Q6p!F
ze<2xmA-^DnrO1HJSSF#VStgBXVrg<rC)mpStsqA1=x$Wc;DK`-I!ep^puuoUiE2JW
z1`+=w>VKX*CJL6iS?||KGdXH05C;A%8$N4ssMF0Y)RX;1)Bq?sx3%mTJ3U%FT&_iL
z3Fyx-QKDR;>=LjB5eRhsd7nriyD**hx|ACSd*X}6Gk-yK5XNjaX_Kwne-;P<AdwKx
zJev?*iYj<c<gfXWVPkxr9R!eYBaoC#N3hVlOppb{EgR;3AD=dCPN2N92{EV^zba-P
zNB50D42uM)%mZTYMwkWs>R7b~xQ&u(>sH7l7U>tx_=-ruA+Q>E75a7C_|e6uzzE{&
z#$(zNaivbUAV9;}kz-o1PR9v6fUMJljbR=yISqzOX<k=uET|K27d)SlIa>)O%kn~h
zB`#oU4GnKY<v2yR0Fn)e?9GurJ;PqZPlH~~we#n#P*<3baIyil&lG#gnK~Acvw7(3
zM<X0n#(OUz75i}1o#^Ja^Ce&yS3CHNF|%N`M~1b+OVf!%Wrc?~k9x|?dTs_h{SBUs
ztd3s=Ec46wJg74VX=fMS`iug^Mx1_)O{gK3!#FaadKo4<EUeQW!+{}K%HVdwbL3;4
zXXX(<V>mcu^=B(;?Me`)O_Np5p_Pp<GUQbcmD8$TD8Q;}WrE+L?_YzGjIT4=_+K0L
zJc-7p!*F<R<j*aJJt!>v8O@77V5=g3p3N>_`~mj>e=_nrP3F%deK`!9<>8HSMB1u>
zpVgitzXOy%^h9T89?N_?-T>y)g{Pi+Dl%kzDssdazf)ZmBv5=lRLnFS2xdUNnIFJ|
zMtUeF_vq}%kT!Be8_(Wr9GqQIUfEy97zXYG3Obt?n|0e#yF%QA#>k}%2cPJ>5hR57
z`FzxC@@2#D?K4!}JT9KutHC`993t-%kna#ag@K209Pb~`Vhj9Ph68U{y*;Vbze%gZ
zdcOfT0t^REmHl>?$);{51Iuk!$}NO)Yo~`mo6F%jz1`bRn%V<R#q-xrGdv`aVIdk~
z8_6QhQ%=9A$(VUD(r3(wHs!#Y(d#-)psVq{Q^I#`Mrbo)(qw$F5pgf+AJ?+W`o}Za
zMg8L%wt#eGLq0KCK#O`4CLlo9H06L6Mce3m8d_Z3m*7?|*rn&qIT4SMiMInMS-nfJ
zUfhb$sC4QH7}CdxK>8Rjko*{1qZU1t0FCj(pzSBD0)AUQ@`gUT%LqW@*V(*huS+3k
zxj>DL<06^T#*|5Ew3nPKUB$Ac-C7%eJx<&xH@d4S%8l`>GU3O9vL58mds|_BwCLFt
zAc0m}v|R;gs9W@z@LR5zix>`Aw4yl?F^}hzniIYM4Q4Q;isn(6!4dNq*|~eB<eaz)
zQlqQDN<Er_N~CU7wAo8e1J_OmVWW>WC8AEPVP9zm)lycK?-<In+NqZt)V`yJJr8M6
z=xTSI%d=&U+P#ll59%jpj7}2<!Pf8JrO_G&0#Iac_S)%&hX&yZNL*&lF?{oT@Z7&k
zYchP}X?PN=wUNG2F$$Vnb568b&rO4_WJJxQh6C9evr%JCEHdZtW{}Ne@oJmG9nh3;
z!??^JhKIbQf#YR$&;V{(A&bmMX1NCWBnSD#ps6!z>Jp3Ua-f$PegDNb85cK=u?ua=
z@B+aNdvFiLCURp|;cx#zN4Gg=uSL6OsEaimNbC@EWVhC-t$^;pX~Ui@+z9hCHsJ-V
z;2y(D&_SlFoWCe?d4N1j00;8J>Tz@pL!Eu^<0j>`8f4SNqNW@=d}EPe7`?IHpMx+k
zj}2P1FcLT-z10Atzel6x?l2rE&nPpGa<`S7KGO>GLtd)=Uu-)Q!M&dY7F@LGyzakV
zX2gSkAiNB#QG5pw*6O|Q`jq^C`2%ItH^q24<^#gswMvnU_{)f()ms2>@#AFPF!=Z?
zoi;h%kD$5uyMP2>EaZO)y*wJvkhX@EeJq=uA1ygu+N@^_S2t_B<~e|iV{1<dXMrjR
zzq0I9?^!2uuCx$#8DWvpDely5sXU7g^oTee#Nc#?w{booTQy(q&+sRT7<@xR1d!dk
zdOkxu;KBt_+-uRS&0uE%`u+?`toRYasRxF_*IK>#snB*3XgTrc%7%AkTI1gWc35lb
znn~#ZrQ+`aXV{MXDKm{VsP?j6W{+?G7{>>=TEEB)Ixn)8#Td2Z(0OfmcpemtHjTZE
z4THJ`b0EG=B@hw!B^Qz`|06QoiLySU;hQfr$nsh2t;qLFkmYYimcNmR#!s%7J!sGU
zUKBOJQ*Y!f0@|Tq{8t#T#eJjfqR6fshFj=JoeSuz1jZe;3V-~OB<XTg+mK^OoELF7
z6qP0qy9r<eU_};<=|C14_7%fo7GF!KHAGM$L@oF|Wx036_!3$Aevf1m>6=Be^Y)q(
zI1kLmZBCS*pndVjgr6XT4ad)_y!-w<iS(nW(GnTm<Ve{u{n?ik&%T8Y?;#xDCzbJi
z?03pU!bvh5UjT-aw^u1d5MqBvU18=tG=^~hPQ5|95tSdh)iG`bv(vi2AE4Pqs|oa|
zwn*PN!`*8*Xt{+ye&md9ux|RGSqI~&^F%GTKyvZK<YGu(F)?`sB(I#9yb{c_w4E_(
znR!2%FF6;U{~uzJp-4Ga^b~3=Zx}sKIiX^@wpgr+H!$lX?z5z0QL_*;pSAj@$IPQj
z?+SoR_6?BT;OTug_@`UxMAY3N@9o_2Kk`J3yKFEZXJh6Ot5*y82u8T~98CR#eeWhG
z4m#R!^lrt*NHY!_Hbhu#j>riB!(k(P9H>YnY>L+G#Qk&JKELK!+&)k3(@J%pjMyi1
z4ievA)clFzz){d30IAoOz>kB_YtP4Iyw^16hIIamjbtA@jR1&P5mMkGi2~Qj6mZbq
zmw&AEzJ>JtEmhy|`-1fSZDr1x1yC<=pX8rnb!Rs^RBhmz(F?r%2>`Jn4FI+l`S}#S
zNCY^F;RDSjzt|?^J%a?$rw||~NdVhkspmY-Rp@!o4Y(V6gTyHOf0K^)@5*J4nMawf
zTS%|7W9BiKqoeZ3L%)0HtZur%F1TbK-D@6QW62GD07A_mDrkJ`X^Mv7fO#}J4a|){
zs1;cPhy)?^EMe^IEjV}T5*uT6;~QbdLJLcvg>o`~6IOI7L7$DVQpA_U%zCRdsc#U`
z^ys|?3?mVJwvF+tk~3Zd4APuNhdv#{&cPkVjtgX~Ng`f)7?mEl!)WJ&u*mf2BMX`M
zEhvcfvS#|!=O~8j^!*ozYI>yX*n@TbUly}-GZTwPK|Aj|38+Z>v;7yc!?08wv3gGd
zh2zWo+46X2O2hq2KV$WdAma%eKF3|B_#34Bb2uz}Zjhza=f9Da$@r5K_BEGB+&a{%
z7)h1vy2cUPr9*X(N@E?Eb){zAR#;%|paQ1vasw3oUP}h7iC|O^No_TuKiMQV-bEVE
zLl3qM7RqVi8~xKrIc;jW`rjxVzu4i|sdoU$w9fT24(~Yh$u8W7-cC^LR#R!3>ad-B
zU{E#PTb;2s6VS{|qPb6L{+*9hXii%@1JIn2L^E0L>5r0V+Wj*otQ~-+-P>=%A$jpL
ziYD=ZrJ^aLqXl%dNp#*&nki33CkN2UNurZ1mzRQ0&gAI4LeRNoYIJs=Mej^<p7;0Z
zQOcpBqytstQsbFt(eOQt0dn@(z&K0~D-6eqA>q5DIE@VZ28kTg_Ev$RJ0PO@WjGMS
zU@gf`w}Y)6i($o$*1cxELvWFby|(^Wzl6k04jBCf%q|<<m4&@o<IlLKWT@<KyO#2O
zISpmQeT94X<zj(7CwdJ1ujFDahRYh%XU4V1w3&C7uU}vGLGOp~$TZVvsBOYsKSVK-
zW;;Q@av~SAK>5qEdDkugY8Ee$srmC?E6U&9=(PqN90l&-q6H|qz;O8Er(mJ<eP&=y
zAeuh&8zgl(31N^zh~L=XH<}eLKmlg;>Qh^3`?WkB&wPSvlHow#XxYVG3mg;hS(C))
zMWVAcjm5N&lei(-6Nm1lF%SntVSJRB%xG=_u4_I;mCd-QF9#zy2Tt$u@qJ(?=)f+>
z>}5&UKtI$ipeB)?^z2I`*RvOt#LUoxh6AHzTn>#3v&({K8tQi6A}O5FD$Mu+!)Q3;
zA`T2@Jt}S>Dw-0#kMriSy>*Gf8ZGf)DcZb06E%Lq!K9BwJF@?ZQtVBj)t7#wq*MQv
zFuPz%A;;ohQNq0q@^?&Fh3ez6_z$sU{QvmBXpWyr@m!_oBGP&-lnfm+k1?^nFMj0D
z!ga~M;>2?X;a~nDX?QnB#PjTRU_d*($8jirOxq6Xg#SDx?Ps1DLRJ^E`U;_#Kg;2L
zG_~Nvr<5`KHt{}^wcm>@gbfNm{0rJFV5J`H`>WOAy%*A7#@bZRu7TQqjf0MD<P8(3
z^0MdPE{BBenX`y3TKQrxN<~;(aWRLs^N6Mz&!O1cC_-O+NHE7ziknc57c6=rUE$fd
z(ZTOp0zwy--81OmvY}_2EV+J0w6dsB^eqx|#{fUEn70(**6|pU;A4dZ5!xbHa%O(G
z<lWcM0mr{{{xiO5{6*&H-z@{v-1ja<Yi9ns>{q?B`J*N8p8pIJhnU;lZ)BbVV>4>e
z^G6>$FM>HyG6WjDWWcS*=J*<2tYR%+TV8gY%Z=TorEYpD8Y5bxjc;=B59o2-D1E@l
zme?al#^Wabem%;>()*3<^=0QDyax2y`;BEG<AVmiRu?&=joq&;8|8i#&x}=Qn*nIF
zf^GsBqwuT)WmjcF5^C^+WUqk4my^hj$PvBaKi`Q}X*Q&}$yszxSxnaG9YWnavZdmj
zxQOCXyy%=oo8jQs;V7{)d5ekqXg=H;Irb3(5H`)jnfKw=^!m7+f{}>RkUEXJSY?$p
z*8P$2Bhnf)Y#tZ>6`muW9OjrMpAqIzNAC1tv+i*;u`2lwgeNYc+Z!XMjk2cJM&5Bg
z==gdqhUIDbdL8aJd9(mb$HZsw)5M@rxbt1)>8^ZGwjzHt3Z2+4;2^l+0s56~6IPxk
zKI;iv3p7lSS{$#H-zcfj&|l$>Uy33i54Hxu|G#r#fs*j@5++<5xp<MiE^=|4orfM;
z2KsLEnr@^jbWj(cDZk;o8hu~dydUSZ{q^}ez!Yv;;b^WDYIh=Ck0UYVV-q6q`0}v{
zw5M@?1^hIWHOdGGOLA%4<)ow|CCs@bY6xh){9LtG!!F_*jH|1&xy;BJU0Hn&dyV(e
z8!=GgMoGcG<$YB0fF$K&ci!Fxt;5?W=SQpcyd?)q4c5(!R_6$p-UEtP=V4gs5S!@`
zN6wjNYT0auuor|xEF828`*JY!lC=rB$X3Fk9I}Up<Ei}>I*}(tol`cIH|1<J3eAGm
znm0Ry9(ZsLoZiM>=Y1csdPT;XeUEI)lnj-}b7B^+Rd{_aZW3^R9k#UNrqHC5L2iXq
z_#IT3y09ZzI^t<(NR2qui0ukGgs10X*b!?NigR%j^S!w^-j{_zdKH9nd>8cU2Uua?
zTr+zu?NvhV)%V|(dNs)@fJq5;{alGq4Rccom9tO+dH1{W@WwNFOMCN#BO1x$3`0Sy
z@YWpMuefZHPbL(R!q7lEN*idPzXPhXW7R=xWSDgb`*U&EKHirU`x+4YAT4f`g}%3D
zAuh{^wZ<WQ`y`oJ7=u~MXM+?6R`(5|$k&*uxG$|6@12X=SZXN`nb?BTEKY@`8*XNp
z^QW#GDpze|_1ENU?2cHlz%Kk;av1d$D(g=+%r}R(9}x;JBq{~0KbZujJZE#N+Yh~n
zvF5d<&E;%!>Y@gUXgwhK*o%nv`3rnkInXG9j^kT+>bftr7}=t8mi$aEw`};q`LKGJ
z#~|&&9R8Sa4{lm@=`e`TqAfehy@jrkZHk{9T20}uDu*y<HpZC>tx(ayj|z9p#<-wk
zspt}|4Kc2?IzR%B3BNI7+}wtUpo{%OO{_*&_71z4FDGgjB;h+Z%Hvien{(vjOsk}_
z@yDZe;{zwqv>g+E2_R5UoSC73vg*n{WD6rlF7d|55nXiS-#xI5dZHUImAvbL<*!^X
z7vg@45dImFuxJ%Z-Qg4QDKjzfE~}}=y^X_z1uz(G1@fj!*E?h|9A|WR1OzlU10B4`
zYOP@pYT2OWCk*>G;if>{ICRugT9M5bc*`jSt8m*pbkAPY81|q6g1(v|PqZSt!LJck
zzeP57-7tEdNY7OayUm-gG=1@H8Xl}e4NMHL95#=U<0LoCC&A)|f#-?73`XOqO?YD_
zB=()n00WX66*At(fEwD+Rs3*6B%xu8s8b302&;!pv<8tE*?A7{=t2@XXA}0426JF?
z^^^>in#b7ttx#GfhE?#tO|3eH!VtcD4aVR(ydN!;QLd387zRczp`T$~ancayW!zRG
z#;^11tlmR%qq!2$$Kx6Pb52!_;rLC;n>=A0-Y4XGzxf4;bp=J$nYO7zPI%c;#YD_m
zWfShX3O9AiV-0J|j&KWY!T`K`3kosdzEF~3-}r?j7SEg`#$s?ho=4`5KC(;CaJi9P
zMusyar^^xUe{f@c90vx}1OQlay0mGWyW0DHfdbbi6jQMAWvD|__ZF2(3lynDlu%M0
zq!L5Q=YSx)ALfL@uJ!uTy0PAyxU4dZvG)e=^Xevk@fNBmdT1rusEy{uZ(Ce9#&6L_
zXYgId#iP-XcIR|)#_si6R9wZ7R$Srzj=K6kz9nsJmQRQ#REuS_h-&WT>x|Kw`}n$?
zXiZz{KCQ!VoZ$L!OCCp~;k9E{n|A{ee639IdC;yW+O0)L>kWWFtl4T4exgUsuLk3k
zReG!~suSMT;{?8!1ip2(NiMGuT<g<(0-#bt*2|AzWBrA)ee%qkK%_ohtlA3H1+k<P
zEC{fBL#(<6w85*&>h$aqzDpnZt1ecr0|lJ~tKFy6_r56^BRZi5D#llXd<De_L$`HA
zS0cf{pdUp%dPXSJD^V$Y^?h4OBwKeI!FWP^wf7KW`edPOEMEG##E9vK8uKKD%~Dk&
zI*4w0a0XI~h}nejZ{($s%G}4vix*!;g-6Is5MRy;5%R*~iy$l}<X$U9j@87Pbv7C}
zwsa0TxS%N7AhN^~JJG+(hJkv$%VU<6Rw0`d>-`n_eplLs&%czi`!>V7usIK;RM%=@
z1KvvnGkMhu>+lXjWZewBCxqL`eN0$N?xR8>xt|rTCwD=3aV81MQg+wU6&A5eXD6Od
z^p}2oHErY+xdTqZmzc3q7`~b!^V-$eWzb;{Pbb8)3NMg{Myv2+@&HQM56J_lA>W-Y
zDPgzGoS?yN+(^zz!iep<NM!lVd|iUyf@{|Ffp@tqR2xlvcG>aXY1~z1c5UDEs3Gdm
z0<&dDr@>Mbt=5(dO$aZ;=oH7mX^>vmOG=I{)|U|WLMKYl%qbgY!N3%n6QX$L01-VH
z33vFBn;2t!wN2p95nmaegDhRm_1c8Ob0lcVW)uDyp1k+oL<F`&_|9>{Wj5jT7%A{Z
zvR1x#tz0TZOF>74`3YiX*@Sg8@-ANH&5?`UtrUYPT#qP>f+EO4;rZwAkY%5iKNg=E
zxdaPgxhNenNcB?V%0fKYW0&x-PO4##QXRb!gxbUA#9CYn--Lqc)B_ka>?ft<eo|65
zfzC-Pqc7M&=zQZPG$3Fwrvs5M0P=Aic7DNmQB1cfqzI+${BX>w*{dtxbAr3D`1MF4
zBeZ!!QkMaprb}7fS|_VryNp{=a?YRO5LdpSyH5jRbCmc@FtQ=r61k)e{T_cX6j~p>
zZ7qowjA!~UHKyzTFbd~S^<+g7SM_H4XEpM(u<VW#S7jdOwXr;aoOZ5jZ<B5?Z*P-+
zuu;P|8IQzugH6--HW>$-bo{UF9vCl7+JdPbev8f%wQBj3NB#^+(+BHx9<VDt(O^ci
zCt8!eEmh=_K+ODM4X%Y^FvqK3h6cw{NzgAnMx*2vWYF3t2g3O7{P+qxuoN}xZ^omV
zH(G`3p@P+0gFsBnP%PSnGe09R9KwSb6nh85o=Djn-{^pLFvu5&AGI6eR&<_t-Ne`o
z2b)Z>N}b)R_Awj$Uo<;})ijQ8Tl|+8%Ts5<c=j!Mxa*AEwb!gK=pQsM<Y39>@?#dA
zRd_c>_JnzJ0q{?>8Wyf&)mhB3>TD+3Z899RWYc|0vwpB{mf;|*$wPRuCuSaZM62_M
ztMguZmN6cy)@BHo{z`g0jUPS3!Hf`uOX$U1*w5vP-8p=<2`T~$=L;^W!3I5l1dn@H
z*RXfiu&Zj=(i(PY4SQ1!djnr-+~|E0iM4N;Y)HKHhGg5sukt72GyLQ6Z2x&svo18o
zW9XzF<g0Vy5w$PCfu}S+B<{p$(|FlM>X*ecv3t$B!RjpB1g^%A$Y`|*o$;hs(5b!V
zd`EPZ)V0CtY@q;pR(2HEfSC>o5M)KGFb%gZt8-9u(2(9NKFXRW>5N70%#hNVzZ{*S
zGuz^skvBz$a6h(k6qT2}w50((wfQ2Kr)-N0vw+$#jV2V#OfUG!r3nQiJp~L)<oaC$
z!5k7qTEW+79gzznt1}#YpcpI}6JMi~-&er9k+0F?yWVi%fhA!1V5OO2&}83)J3iJt
z=Y(VUWJ?|6yK#lzj~>WfOZaMS<kO;vPy`Eo%vlt(6qTJ~?;|o6SJDGmY75b{_+h~+
z68#(Ov(`-F#+uJpYWbO<r)2VXlc?*3Or%xIC}+|75`6U%3LK9^Ig27g0H6B-g5H*i
zeup$^y>TO0FkP=n;lwFE14nFEu|xPX+G&<0vHGI;96+qhn$JxeE-yg&z?WlFF>6uT
zN$wMea4`c7DRR&j%^eWjutx6#W6g=DVsoWKyF?1uh2I|`>rC?`k~mgfOtiWnw%o9U
zzh4_UQxvNxiVPP;{#pbp+j83!0n9QL-sZcOU<EAAy|)b)qvni>P8aBT?_siJ>ilDk
zXBMMz*q0;P4}s_t*{lI`4!0oEmq#A+xOtJje36}g-ki_ipiJXA6VQt6OpP++y926a
z$l)(m9I%P4TO}!W=4VJXb53M?0fQ&pq=}f1jx#b5aZ+|eVh)I<Sh(08y#eN^fFWV~
z6S%x&;V(?pSY;780$7xG1h5B6o--RY>_$9uZxfcG18y|R<qw?en<aMV+vwyy7QZv%
z&H;Yfbpv0Q$8X8ubG}t_&c+X0gx`)s=P+h1r_7w+`#-41<_Wi<C2B4L7Rllp@}oLf
z^>GijV4}N8GOYdcwgQhHiO=^l_)pAz1rnne=Q~3xppXA%Lhy#<f}ShhF6JIGl4$X1
zk(<yHG%E${q)sWRW&XH-USm`fUka@ji@DEJFxRg`7dbm`T?P<{`=tcUNRiA)*Uu*f
zc(q?t0h~qvavxo`s!WAzu;O#1A~%y}m7J)E|9*m9(5GY4>)vSRZ+iybL0D>#kUus`
z#)bF+`UCz<h<HT|bi?GcEnf*+12G$Lxx@S9A2dm;vZ=IO%gQ5bjQ<$~Ur_JhcWGmd
zy7&?j6Nlr84(O|(LN>aiL3Z85peI^3uFmrhYPXhs&W#YSZ<@Y?a-rn(fSBI$ZJ>B)
z%g(d6kVc-QG|ntJUCDPrGIwU+G@Di<gPaAKWbYy&=6=sekLHOqEE31Vu;(Jq*=~Kz
zsf+8%EIPIsL4VGT`HjgfmXe{ZTgyhdIWlwe$AM+eyiGktR``p8eVO|Nf+xPb<ROJ$
zfIyFe1%ZM+S{w~)36ZERno1{FII!RycrONHTj0MWvTFyb+t_<#O{mBxgxhJ(#>oku
z-r{bN%!)ZOzaK&u=$W-dyHA^W6An@WJHWhvHTL-l%6{am$%Y@G`53gdM~w_IDd^jG
zu$kPE6&NU(00J$3ozH!L1^PkB*JrN#`9`Z?-or3EPPFj}{z$ZGEV^avvBP8w@9py!
z_}_wA4DyoK@#Wgb&R<;o&SLY}&g|MO^ok6e=+l;*h#MdCogn^}OPR;fEm#4FqD>*_
ziB*tX1jRxebn@uEZ#g=t_R$$W+q)TF0ozC5{f8USo4pQynM1fw#AY3`Vz#$nIeO2R
zOZxGwmx+EOtFt!#l-;rWB6<uB-}nY{!{<BB<wXwn?*KTx#r)wt@DPEurVy-;1^l-M
z;T5pGn*Yar_;iAu!$158J`J&e{RpZnmi>qXnircK;z)cIW!fXZ&nk_4FQPGWSBVD@
zsF*v5LL<-HgZQ;0ei?vY$4in!!kMab+xY8I$k-hvV)fw~Xdph_Axj&FU3?D~-B0`1
zm1Fn0yM_0FhA(4l!{%}93g0&#xqDm$UBsWgHCFk_;c-~xt)D+7=I%jj$UL4GIcnP7
zH{K6bdfz>kg>W>a89&Z`Y}u)DRwF_Kr~5Dj<HS)Cndo>8s}i!6&gbTUw$lrBO6RjT
zz+*qMy?H!xEH5%_+I@*M@+--si08r1OJME(oQX$=nvaqdiilP^J&h^T^EZl192TbQ
zXjHpCk`P%uO^Py2E~!TT>yVS(g+6vl69(xC=)a632vb9N3HQ?b#-;x9VXe>wvr^(i
z?yAUxpquE#5{e1X9<;pJKa3OdBlQVo(EHj$NQCkArpVE}-52*DjlO^R5s-&FOZXLF
zVRr~Gq2@4JB7#^Y(J^=1hO;v<=y#V^#v2DHQpWVrLzIX!y!955w|>eBh(Pu3i)57E
z7oG-~^7#S~Om#Ybc*js)^bi7ymPU7KkNhbs^3Cr+VR5)0se-Pd=yNzvhWj7gK|jqD
z`vyX@(k4J;{X{K;@}z!%DDr2&jFj2Re;(@-K7R^&CgP`4@Kn+&48db>1+9mOmON0O
zVX~E)jcl<$qY>{#UR^QFq%oZIFp&xl()0A6qX5j_$|pX5N(wMRRsWk`qJt#|c;&Yx
zr-#i(g?mfH(mVR*p;<yX_zonFQ6`Sj1Wa5hvGDsmmm_=w0FmL0|4Xz<C?x~WHSnJw
z`C}HH_%N$A(T8y^I{0-#B4y87#Sck@A^hgDbVamzpI<Ivk9z=~19Us%9|>hiv^Gfc
z9RA`CG0&e3!es02qlm=rVKNZr(HJM#WR8O8Guh;fls@_}0*JpM&oBpnRLH)V<j}?Z
zMHs-?K`a%yLu6<3M`3uy=ct52rj1-BMxI9W8PYg^5QkQH1jYqL$!plW#Lg)@X-Vc>
z3(XPjfWJXFa*-ZT=v`nJIz<GL><WRR^kISqfG*jR({{(|>k%-({p9bWSlXm#%Lr%O
zMg<U^m-^CdE?1tD_{J`g#1IZ25kh2w{gSkq#vnSn2Bc8=7<LnQQcdFcuo}618_E)?
z*U`Q)K(G?O$<(ChZ$p6=tHg5?(Y|r<1HaY=0|wgR8!&KZOZ!F*d+q_-r)=1;XA|59
zP8%NnBd$bSM)~990~y-IC!=)&aC~&jC-}9GM9B$Hv?jxFP=|-XE_q-<nttwx*084p
zx5paCg?s)^1i@+ij2a$-fg$Aw$x3zs6sP|OQp(;m?1^FNK^#tedl28YBn$`VoO@lv
z&Wao&lh-gX8x5A%wQ@>^VE{ihxVsbu3wI4~7Wi5tzvUCrJQmewL{|g0QL_-A0a${_
z_e8B3FcW}&Kt;PeixRr(vOc}xp%sKj$w>eoQRc=O!+?`Kje%OXMMK=;nIL|w=&~He
z69KvHWWE^o>9H5)F+(Ji><OObwYxz&#a15S=aVnSctE4_MC-GqT_dc5;fqH;&dO2=
zBVrgrJ-@Ee6Ro<CO?4@+_Ez+%731t3W@h05K1O)&r({Z=d5Ktvx>#=_+Y>PqNj2Uo
zR%+OWnd#^X{Q*>f&O@D){>OVK*8Uz;j1NsnFZ-N=>NTbl(ff$1y)$^6j~Y(dxEjaj
z)9S-a7JeT_FTd$ACan(CfWA?Nzm3EXWg}TX*c$0O%i!}_c!m{uf)64&n>)|LYz9MG
zICq{-<-V(A@Q7)AC5RZ6obV=6C%H;sD09i#j0;TaY)>}$C4LvB4-Dq(yi0IYOt+$W
z1>;fq6Xl~@oz#;rv>;BS1Lt~I0msJ<AqM0yYmpc<Qrm-{7BMmWono~%oua6^EmU^}
zz)T=JQCiacv5v?)ViMi@G<17qbRT_=vd_Oro(SQEbCVKqCy~JR7+FI3YzIMIvS}BK
zxot+&Y424)qt00R9NjKc5BdT=TddLY+4xDz?%4#07yF+*%;1CpwFd@;j)_f@xZC*Q
z<nCUi)+&~~Yj+H8EFauh5#3l7-MAt8t<9jY4{lr^{Z@M>+Ny`|!!M=WUlV(=5#E0U
zf1V%tO|go`t&tk77`2W^iwCW`s8t`e8Y4q_wVaS#BQVZ_w`?dmErqg`9Yu}p!>!Tg
z4SOxQdxpAJlztyuVQ+!woA`(EIi~$iWHkf!VzKxkO^FnIhrz>%xp=ti*D+Fq&qVVd
zV1c^3HTM0@=}CTA#M`#<mQhsNG0ii|Y{etaw8Tx!R#+wO=6<Va;IKSvjv5Zs80;J2
z_bU9Eg+F@ynTbC$@Mk*y=r$S-)@0+4cB5E)*y_<3y`w9M7J8O!JgiI&;n=tlPr1`^
z1*H@}2x)g%y}{cU<7*6_>^f}4JrmGb#P|3u<NWIw;`=c$(!wLhvKl<7pI%jVguBLY
z@O6+=hW@yI;N4v_>D#n^3^hBZ-X1}(<FQzcX0Ne)&%2Ot#Lw{WEUrt$`mvdfRxf^^
z60|`u^ziekV(xuZJy}UH#1CuXVF~Zr+o+z5$JPv(P@p6jCA{KAsZGaoV}sbp-r4<s
zpTTDJ|9uvheN4mD>=ZDnWm{@+fhsPS91wCG?tunkePd5W>qeg(I6(qWF?N7I5(_H5
zIR?*BPKaE}?3%w<v-VzY#_9?Um$kYglf7o`Le<+$zqT=R6jom-ZS!mFlF@MrjE>WW
zJ&zL!Kbl0Izr=I@FMIC;7gd!$4xeEL9CdU?g~Gz3!qRdJ9W4;dK^VjY8yuN|6cJ_c
zf`|lnPzwqh#u%<sR`zFivn;jzZno8~nw5V*{SHuWi}pub-LkUw(%3F-tWu))_dMs^
zJIsKR?fZT{@8|QrFMOW4_ntq`dCvdmobx=-Idj{A+b)`tTB=5dc-?lu<PQ^CP<2K9
zqfNZdNu#<B>5wcri0`t|VBS(Ud!1dvd0$$zL`pSV7bZHz>M{C#n(JVO5>a%!L317C
zMB~$3cT;+jQ>^@2I2e%3eT*k0P;gfJ{?0@cJ)sL^YEuZApaseYRWte*)UQpLf=g!Z
zR3ZvUe7gC~rMO;o-psX!Iz(|zArAWb*EOiH*NcBd5Pp6A<KWA^DM#6%Al($|5XG$z
zanRT24v2IrBCV67>{gIgggQiVi$Waq_38nUegk6ymnlctqaaNPb%^5PLLBt<e}riJ
zqx+O`C}sgMYvp)#3g)ha5Qix4REUGV9tWxY?Fj>6o`{%t%kdflr5oxH#WjRD=<9zD
z8>k>of-hGgM_H#J%?)*k;!Gh9`ueQ{B7GE*#>r9ED@Zk=4pH3cyMi6`^_BsVPC}$j
za+D1U(&s}RqPSHd4*L4@s)3OH9qqp4%2A#Rw1ZHGC@wn0L0|vMfJjjpog;FT=M|*l
zogofUTziOvzCL?Eq{!NH+vO;m6r>HI4pCfDh=abqhYW=DbMWO%a+EC!(wI<(D6V@-
zu!Fw-Rfx7<oH9^jMX7i0V>#Y7hUiAFDb!&Ew>`vx&kja7EC?Zg7q>|cx?MrGKGb0Z
zR~O<y5C7CK<iScZXlg-;JHtv?-C3BeGVCUv2v@g6PZ)F1%38~y7(80P6KG+mliB1q
z4H+l?Mq`sW1GrkMP#ifGhEXzAktTZc6=us5qGD5lrL+GJRO~lYS8_tI(uvk8eC9Eq
zgk`F+&F(ROoS0=;IjnSKc6NZc(wG7$fhkrre~=VJ)=fcV>FdW)AxZJob3vr}tLb(w
z#H&3eIX^C?nOc9T*x%8!2eCwnU6h0(F2)m9ulcyeYNco(uH38KXyJs#cXdC&-vTl3
zP-2dQn4BSr70F3)<5pTE9Uf-c%Xz%_$SvtSo&v)(G&Ll~vaL)T{yv&^%b;*7et8^7
zum{oLj1~8sm6O~Oir`k3q|oAz<1#|M^jn$jvEB+YHYs{wGnV()YE2HUDI2XQ1M;l3
zI^o|?Tb`^#iTROOVODFP!jjJOiKrajuOWq&`D?7k{_`K2jYw8wD_M<2wwO=R$j*<g
zm#wr?hG2(+fL7X_m#MOwReh_hMu|tO>|~&jzT3>IY$&yCa6F(sd^qW#^Lh+VE37yC
zyEJ@c#|f$jlyy9tEkPivC76i)7z1sYiE1TbtT;PE;$(?(qe&PE(2fI+$J~m$xejmE
z$JySjlK}16R<0dzSv>hCTg)G8&|*}6yA&mlDwEdKo<z>MYCPZ-oQJqQNa+Y0v$k&I
zo=c+Y9@d7122pw$Q;n0Htx^;Y8-n?;(r9|~_qUfX-Ds#1vTj*F?ZIi$cp(L>gFE*x
zN`^J|D9)5D=Tj?s88YCnV<42c7`6UCRF$gpTo(sdM;VU_zH>jgkMcuPQiNvx8_h|+
zO26Xh)TF2TKe2If$+EtRXG#XHv8Mvcm+;Lsb`c(1m`b%4MKvsDGZF)(ay8eJ6d*$T
za<EoH$f3K{cp`BO#^LX?u{{F2QA!+x=&Q%SgdSc^cVaXjDVQ{{WE*CYKBcaCo(0{S
znMu<yVC6BExwbEXF!Y3gLm*(Dhhh$_t9sW!LXLKKcoeL;k5a~-S{m6m1dmsiHQg{n
z-Aq56KjK2nBn-neP))!p{0-&_RjN$ZaRHW2p8Ov7QGGqO#iWm%C@}&N!{0d#WhVR}
zWN8~mOufn(U4N7}G-j)&+Eh+mN=kY<tRB8Kw)w-aZF7Alp-iE0P?mm_sOf3$5X9$p
zC(DOOt(#!!E|cNC|Dtg4+*urOex8|F+p}`8(0p5q%G~2ukFV`X%<tjn!n#c+v0X5D
za=L-A1Smd~_T5bh>%_}83<1I{j4+c)CaehvYjPb&0gwr<+HT@}E^!#vbmh(2+;aiK
zaFgMVO|n39$24Xmt78g0_hW6?#RI3%LIWeE`CGM+7NKG5IeI=qon1u{8j?p}Juwlu
z9~HDzGzGK;hS30N!!<OdzyqSQFe8`s(qa?0yeJ#kTZ_s1I<{Y=(n);~qOH>JmZI_B
z9#jqu$87mO=xrKn&Y;e4&|<JwrvfZhI9V^l9arPo#9CeT^>&Nbji$$eM0xQtMW7C_
zWYSfBX{YA9yxtlKRg0x4nZqB!T*OCF>A5rM9OVH<+Qec!Pr>76#q`5MYWhLEerbQp
z4?4P$Vb%({2D|Vem8vNvR!@GH_~l;3MBH^2E_WJ=V^6~!8@t%>f@~Z)vf~4~*6dz(
zHd@Hg0TZB}+>E=m7rlJ6Nl1?~o`AkHRIZ{t&%(IInVR}0oHun`bO5EsDo%Mp5oNET
z)=m^VD{(MrGx2bU*^nNaP@t(!xgoztn5lzi*_aj<Cd`5HPuHLs3d!krX`(IMndAUs
zXj3OPqT1d}4cdN!R*oAj2T+oD=zbKk0h-ZFi(twqh0>4hcl?~4jc4>eb5D}be1Y&I
zun7dMg4sdUb*Q?d>RpEebKpTkdCtM?ln^jlZIFsx+~*+FVvSvxb_$QojzON8{^3Hw
zsatl|Vmy)XLYa{ms;3ESIe4-yBj+I6(O}7qo4tV%!ICXSoyIjb3XR9=cdf;kn8AaX
z2Cz%VP;nZ?DYm&jkWd{%QL~ue;egzSv;*9#N8?Pj1~m#RBnSltAyrGoymUgme%<@H
z`&w(z=pRSjU@i@Z?mPZ2N$#_HFJ5?IJnK4`3&R)M1|<4j<UPaP#E@h*IQ4iXixe*o
zf0fFB>F~HV-E}dx<`e&98+U4&A~iqhc}eo_c{>I-&<{nrrW2TXwoQ{Q-gJwjo@dk8
zAc*Rmz|~KaP33fpKmDHiw3zW$6UlFok<hJEwaGJx(Yo&>J5h><8kZ$xgLa9v%i461
z>s4_yu$Nb5igQm=yGzloJ&z(f@=ytWdF$zyqz(3R&cQE>UEJ~tm5UfdKe^ny(Q5GB
zazmW^d&U^vXc0MhwXiTTAz^O+J!2y%#k!LyNf5l*#?GquZMmCn$kC++HnU+id8vV_
zI#cA`kqvj_0_W4s^=z!Tg{u#BxQgS099+}z7aBOW94QJ9`ruJdd5WG;)tNPCGDGYr
zKx^6eJT`z6HZQfzXSH}XHo<V&;@$(l^QIGn`0iq;k7*V<r|VcKi)SZ3q+>wKgg{Jj
z{bDM_Du-#I532Eh43}>IfmO6?Zw0u8>D}=tzUMB&1MBXHm810T4s4=(IqLfeTE!Hm
z%`?!cCCqA-jtLtvtjCR#B%Y^tqYb{hA>l*tQc5i1RV-y`C;BjFX(tW4lLiTcY_+0e
zR4&_8)TX-553b(pcP3KARl{6cF>T_ZpOC7Gil!YCC`rO`InBhNG+!?4mnJl73ro?n
z_i#vZGhNc)>I41=55q@uZam@Y*6SY~t5R|fAJNEHx1~(Y`uW<n=2M!XZgfv^br)_X
zP-ptb(Hsw7D73r2v+%R;;S=xSZ*hG$-1%VA2fV(;jWw4Eb=GkNg0asu{5%l&OvcYY
z2R;+<b4%be9zUN({w08J0y;es2oX0Omv)%`V%~lapKuR9+SP5T)q2Jtef|Y3R5XUN
z01_Shj>K;hd)MLn<X%55e#fzQg74Any$6S&51d2TR~LMVf9|29&=A%*&w!IaJz<`i
zCbz8J;@wpK<}^H{oqK3Iz#^1(Vu@S0<JeoPIYS|yF|#X>V*GX%vN$pSEI(5JcGlT!
z`02{FaIFy9-wy6w{21A3Pk#i_{;Mq9j{feEzHoOT9$qU9`}~5SEmJx{`O>3QR(cJ^
zLutOXc#<*Fw>A$|Q+;bo=p%iG3Py=*xYp@t#9=y<l0Wzi<K%mC{RK>Ns>i~u15asX
zrWAFOc2!twg*iu{MYUqj+C_k?7)|8e0wK5s0bF5LaV6l|y=)BlvtX#-8)<@%#q^_~
z&+d3UomjdWQ=@Fgv-M3(#C1U!wSgFHQr3mXAxS=J1?clhO$n({)uV)`&{4mu^<tA}
za^uw0sLJnsX6SRyZoB(zuWerA*~Tns>g*`JONB!QaGiShITaHhZpV|J*Z!d2m73x)
zw-@VoHJ1)9_LxP0<397pbw2Ya5khNjDdfidH#Ch>8ii)LN~0{CL31NoQC-sp%RJ)A
zI#cY)`c#U_WF2&@*zql08S1#26eyiV@Po4AU84PIwj^c8#GO%kw;A4wUA3PN);}^8
z7sGGYe(q|~+55;3-Hf<m1GrR(YbeDPDVyo-xQ3a}vx)Y6EEdR81XR))7*vWq>G&#Q
zKGL<`nO*Q0g4wa#>^3DQzI08UFFiaWkcn%=I3*LOOo4<u?u4|GYCH9A?8f@H(}x!)
znLl@~s(WZy7(W67@8}Kee?Y&hRzkb8FvX3q*f~DnhjZLL8_=*<`fyA0Kf+`+3jyoY
zqtOer#?{@fL$NUb>+7$U&^&@p|8_<gu)TMQ4=<p@rGFfzm;hM)>+r2-dPr$^JjKi)
zWOYjy%~HoV7nl}NU(VMAobP9_%5|UMZ-u6Fvyh%qm!JY3*i+lX<3&E4n2HPORL1l^
z#jrBVRmeEhp{nPS(y&~*LuKw3hjc-~+5OkmJq#XW?c(O=P|~@Zs=*q>Ge6Q|?GX<>
z!xX%o$NXbaadvkg6)c?zkWAxDv_WWZNY{x4&!II&9dwebk)nz~SZE799ZMmBhEyGD
zU8JToqz-FLH(hLMNHuw?(u_@>DnmkQq~4tcf$APKky34*x3=lW*NUO(*WVh3LIJy>
zGEJ6JHOy0C7O5KgeFkMCJZL&na*j7PiC3LQva2(>dA)^!xu}1VDdb-0ICGKOdeN5N
zlm}~iGxY2x)L+f^nwu;z*kwRN!+RA2E$nvjz}IpMiwwmX&v4phakHL|Cs2B;_6x!m
z44pHAGcSfc$@r;u?|V4td7X#QY+v!#Mi-8H4XII$=1&_^XW()I`UP~}Lo<R4`rs36
zvlCUx4B}#@mN(Rw8by2*0dY;k>1c6H39#HaY@CKcqtx)4E9;B~#s*K;X)g}u-mKHv
zs6`3mhtO={7SL{G2xRs~@sqFQ%+}2a$!sc1-#_H6xl_e!eCA_n8WFR;8wEP|Vc6nC
z^JmqgxXc;s+7gI2l*ThOnm@y;j!afLM{(L-?=$PEH&n<mq1Dwv_^Gq_+h_4N&f;N$
zIg=ur?}b*lo|WDmEveDC1?9gPUNGDKG4O(SnE4~&1-V=QP~k^kYNSdOenPw8FF!>W
zPB_+J!J6;~FB(eK!OWHtT*QlL8ga0kZ|ezOZLB$CQiojIXx3Ui?$#d4pxf*o_s2cV
zikG{czC`X@mj+9ry~p9}y^BCm@m2_bxCdFL6FroZ+9KL>k-s<zon1pYjZ^Se57Fef
zr{NQ#dENiGAV;{FMnGk%5i|m};|d6Cm1A_`biUPi!t4GK*)oXHWk-e+Y4Su1G<}yA
zGYBh>k%+?Fy&w(mZ}GaDdXQ1TZ9MOeX-GEmeCQ_aLMa}BW>(sX`9#rucHF@iyY`{4
z#(90xk8~|RJoE@!-O})U_-8#hoHgnqz%9}nIVj=zD0Je7!nek!iAXZ}zp_cY&=3J<
z0dhD~8e3u?eT+4@cx4-P7=IIV@F}M#Sv35(;P5ZA@D10kX+dG7HBuZ-ypLQ@xz1Ft
z8?$9R%PPyt@*=i&%El|A*HCwi2x~oc<>$aFhu6IC&vKnt^TSX^#3Ixc!E)6<NYLzE
z4=thOEC#knJEmaGak^eoQ2+ZeWOzeL{!p|hA;1-xZGE>fv#FjYT9ATKJ&cdFa|vb?
zzcDL^9S6N^JnzZvpb{lb&=3;_@rjMP1XJBlS<aE{WtMX=dnw?xb;+<4|H6NjexEME
z)e*m}ZHP&~FEYWKIilT@)q}p)_b>q*t9$I+skDH(R-0EgFx-QZJ$$@LNRMROVUZf=
zHFlIh*pj9!gvWd3q1C@s-Z?>=MtMT5fd*V32uQrNcR*Q&Q%RO|NC0i&AXd*qk)HGz
z=Qt>ZH9kC^b=^&X1&meq-cSM@R)k`AD-3nx7lz)dnT<O`YcVc_x}H0Q<##wxey(*2
z|45aN8cpHJvCctU0|f9NM{|oX@LKJ31L>hT-iPMBN4E;IbnZ51nD7BE&f$5m(J*yH
z@3vt!-8M`~>AP)MCYiOkKhYAMWbUbXml37kl@Si(#j>_&Puj$J!eh*BR(J}ySX$C1
znl?>_1m&Qna0@LsmH|5c3s88wXvrLkzL*|ffR`I0kHD0RInEp$`e}i6p3j0uu`^+P
zM=_h-c*5hZp?ih8(uh2dJC<IQR%-HWT#rk<y&K^7$JZ8m-F0YR5SEH`p&SXn8TSxF
zi#r<LO!O@V*H-Z6*_ero!Hs3~cOLz%puap_oTkzDWQGU2&iY9d54^pJmo{ufd($oM
zSoqz9*NsITg29F*U#hWr+;P-<5q#2952a<eC$mKn)hhdOFtBGESK;b4%y=S^lA?Dz
zsVm->kVr}7M@c&~>57%@_EE<~N-KI*1bbCbFJAWIgS}|3Hd^R!JpIk3fmx!W7FW8f
zsA0qrbe>FfBMJKYKL>om_;P6{Itp(5ly=Z^@p{+Or5x6dcPEy+c-z;wACO5kiuLtg
zKp=Fwd>Y|Haq>y@sh~d2S{tW<ir~)7qLVkpAi6y4*ys+LELMwJ@45#*l%(g$Nz-cY
zm-OvlQPfd4Q0gTbT1Hd3H-PWwLG&7By8G*%KsShYZlQ(6wt#s9`{v#R(mLiNyX?ha
zB7Xwu=NbJ<ARYrDCok;8a&c{q!(#NNORjF!%B5a6hfT6nQ(*VH(Z}L-Cs3CduN&!y
zw2Nrk@^qz5+>0^zc$h{0^%?cY1i8tx`j(Zwfvtbkm>o@lYpV$pc6lctI>AS8F&-Pn
z?wRoE>)Rl^_<W0In^FZNjSD8}#!Hj*8%C0ItZOd@Cw#iJa~v&tN?B)yOqs1?G1Wd2
z@9L#{KYDO)W>7&eM)!-4vR)rf{h$UI2`2Vf&mKsCMZD=8EXImaTVbzBLDo@$41gCY
z%HEB2Xz|e8c-`BB^D_7nd7<&qWSUHQJ(2~>8%EclN6|b(h*Q^E%4^XBNV@T)>Vp;K
zG@x}~gr4$QZ@GHS+XHkEE*?<YT9^+V4Dd`6#)u4x0Z$lRd+{9>(@)dAHXJrgm18+g
z20NT%v~X+LhO8UAY&Wh_hrrm<tIn2}Cv@5{Whn{;hy*(NNc7jk`l{d)(~ltw)iqNw
zZZ~QzV^~>Tu#T?MuYH^-y<V-af1K_^dv@m1!4QWKYGq)jg*E}~1ES+w%IIHbk!iit
zgGplmp_4^~wcuZ1?HwtX{5D2`tz!ss9c+B@rkgx8j&qb?(!#2dkG6?B8X==MXnM(c
zbQo?FQ!L^~Ut<DFyJ~J=va?RR9M(BPPAwNx>v$IL*XAY!@_x0O=3R-N`K%mW&x)9C
z1iXrJq92IrPhgN9)60_ExSn(cO?y2xh9tOgvJiIS2=9qm3t7SMBsWeZm39|>ngsf2
zJ{8t`tp#fbxD%=DvIx|L%@yE&Eq6FQxE(C2XEMV!9G9w0{s>`bd|*^Iw%yjOuWyE4
zpP{cGuA-0aggyvmk!hWnw2dTL<D4SUs*$SWxNR&u*<x5d6C0)zi{O*f#H(>Vv{d{V
z$zjg9y%FmI<<ROvBCxz^d^!s4G|^wgr4%y?Cb+sU@WWC5AOi@!flde##n_<>v?;-z
z8yI4Q52T$qc8bsbOQ8eL1B9K(2Uw*$#s8^ilg$h)xQLD)a7U=S2j(?=*^1#w$4R^@
zZjMgx{)iR?o$S+f0v&gR_GL#cNzLBhA;%{?jkJ5bj2)nLu~6%=86KMK>JHOCwt*to
zIB)LD_N|SiOr5@d5A-#kDV)%qDIr~#)J)eMx)4dvQdRGkoSV+b$h_+7PZAmj&2$@2
z_zgm<ceSc<L<&6|{j2a9b#H?;Oo)3*YSL#_Bk|xi*xes_nb6tLPcccc{vMhbwS4lc
z)1xzGZ=U=kY1lsb#GA}$8Jc`)T8a2aOVv6qmo^$@9(#NZTQlH2dwHH{DihxAk8h-N
zI4;L^thQjaOmHW`HOC;eq-)=Vs`5o(9kQyDXn5m^jzcH{#2M22&X>2abR^nQSa(UH
z!=wI@T8L5_UXVzK-s&5?JNDA?62-rjb5;}qpP57hRDL1srJYmaCm7Er?!=B>eT|@b
z8@IqMq6){<xVK4q67{M4Helv~w%ow->f4O|2gfnJoG%Oq33y=SHH#e76P_HMk&k-J
zqJ<rVNKwgjU(@3}jaS(I2L=0tX{Z=b3LWkk9t_&p=10eI9J7aM0J|^+9rPYFVP}1h
zH)3FEl<S~n&3VlfVyO8+JmbTHOdLZ{<YTrpMaQXRRS5_=1zjobo45tYz-8XUmbNVq
zv$cy#4iaU;!&vtIsfQxluSL;-K}iSsa0|Fy?`qMkkqqEg^W94ZCKECkJ;vb2OPXL8
z{1ET|yClsor7~lurKmK-4=<k<$d@o|m>If_Pp@`0qb+h+uHkkT+sksr5_Sbe9}7B-
zS-PniQI(p~i~i|CT^a4oyivca&8ulZ6@zgC!A(=Z8kzKARhaOD4L2#p=`-=P9+rqY
zR3q^%qymPaH+7(lNy?1+CU#vwl;n)O*a}hEon)45@qvC9qzgG(VTM7-$bgky47UZ#
zdBZ)5mE`<~0;dcSbD>JIqx%^M5HbwHtPBf!#`O0z8C*@KMpGD2G!zZj#S)}z2rMLl
zBs9ByiR<Ihj$DPo<ukd?YuUB3W7q}3^xs-K7?0jM-=;&ex?y2hUn^@e61%X<;A$}i
z?!uiatF}x|5YpqY!3I|6aU{=5H`Ae1XQIBkC2k?$9*mCSQ=dyxLBAAqfQnr&SA~??
zy~**y%n+<g0V|ZeZ)PkmNriN+6%mgEygDkkV6ch_pG*A}dY}f;KLra8=Fe=5HK9-P
zmk1KyFG#5W<Urk&cIEahF42D&n?>jiE7Vx?vL>CEPsp^1TYY#vbxcUP#gIIqMSS=a
z=At+Da46noZ93WTlVHlQ+e#&G&BRQ}k^s5Cp)q}YTpiRt8c}tfy5MTkSfsnG;>&MH
zQr(;w)IC=uW(UBOJOHNL{+N_L+L(T8eG@-7S;fz+)+Vc~$0uv}iMYkA7zxMbe=^Yg
z7e2@)jEnx^XVb^mIftH2AE)KRp#=RY;wY3>m?|Q7<TnmPs|nX|fDlOA`^R3=`rGAb
z%(%6_jlZY*rn;Zh)kErj(l|$BQnQ7OIANB-)oc=GX=z8x@ZTkvkYE@xvKi5a*$UDB
z^MFG1p?(q5`lOi}M=dBqPl2YsFESI=GG@zmKB4c3`46yL($PS(zJ4b%>)qGu>z|=7
ztN90}eT_O&<Ha{Vpu6N+K#0Y72yqzCrrVI7(GRfIqnk=)>Y#_wo{(vjl3MtY7H-{a
z*|c2eYD)Oo)EE^%lv^b``>*E~C?P&v&4wejKaw*kbc(xW*RX~DIBpzsUT6c47nuj%
zn$nxB&}kK~K?y6Xcxnr4xuG*-B;5&eHO1MDXDuFQx5wFq#uUTe1<uLYlL&+9S{t%k
zwK{(oOv=tk{bT9)o!`^^wc5)kMd<fOSkzxgMy?&pb9bh^2Q`9H6J6}On=tbsXwfMv
zk{T%7`VN}sH9@aMlcOogUYjPVosSnrd2)2ZRm+a*ybC5}qM^_H?!-~NVww~KIZyd@
zvdvh(TFCGArU1Gp-a!UEF{=w$MC9^PwQCY^YZ}I2lg5)pFW<T`+nd!1{8^Poiki%n
zt0G(u9q|ul8_XWFPBP*E_~dpx!@3oE%T2(_-!Au*49r`6ree5j@+wx;@shJs_#6#s
z{2ndA-q5#i(HOLuhOJ^u67Ib9B$*BRN8Ui*%6UfoXm`MFpn+QZ=36w<<QA?WP@HrJ
zvw0=kXNCFXqY!CMXs;sb^Yg=DF>(kczb{g?*_XIwD#Ot5GWca{6=7ODirO^bf&DRQ
z3S}9_AoC%8Buqix#y^4SwH9#kS!l*1ORmavnsjJP>7&vjX^MgJAkg7`$iQgmmoUu2
z^uj$_Vc0xWn9tD2e$?uZKi}9SE^npl<;>t@zNikEtxl%)vZ9&{icOSK5>D!xZ>0uN
z)*QKE&f<&N7BPN0HHzZN@A2gHU~>uc+@q0;Qf}njddx|Ul0;24>pQ)30(Tk%v?~GT
zvj73#adYqntU0ppwBG1C1wRJhl>jmQ1CV>s%$E}2yfY9$=1RC#7+~JLa)7@%`(ZeR
z0S+kv-svB}WPt#27CFFk&VG4(69Y6T0ao@85Sxvv71?qCTmJy-F+iCTU`qc0WG)V-
zN`T1z0XPhhF;@=oBi}DTI|g`D32>C}n@wX=AANxsG!<gC2~$wC%>G`(B&v}jOj~bY
zW{aAfB~~VC#=hornKqQQw6UXiomkG&cyASp$u9h+dqu(V^lp@p=8oqmal<g~B$>YR
zxgBY!EA}RM??Z1kNRMLP+@>66a|GG?I6Qro+No~+8G8BIX|66uiScC>#)#$0lo;%e
z;vrlz4WjaUj7?~VxqDw-G4$vSO&)U>s_yf8Zd@QrdXIld>9tmGdXGiQ>89SpIYYoZ
z!at~VkkzJm>A9YHftVVI83QpjmR|49UT-a0+_Ivn$X@UEUT+<E>%m(W<h{Mu8|`&P
zg0~^adqb~xBzQ-FcVv+Fs$TDC@Q$_O?byBEi+a6d!24?OjtTP4==F{T@4;5QbfedM
za<6wBcn|ZY$615CBYVBaf%ix&UIN(b-DM4UPXO-`;5{M8`&6%YJa|W0@jCCIQtS1e
z4BpXJv^U)Ay{FeZ0lcpP?}Q-l=X$-9!Fv>VCkJ`g^?IAY`zr7@1$lG5-f7^iwc>Q#
z>pid6I|IB&gLj7F?Hp37gYQiG{ZJf{CU3-pQ2u%@*{bvmXvZz--PEA_$ots_=(Svo
zHKgPGRKet3in~dw%a`jquhy@dd?7FehKMu6y2&QoZ-CVVJF&8(>X=$cw=8SQHA;!Q
zR~4gilF|#nG`gB&tT5Gk7tW*V=eG&7HFb$<=S}Q9!bGJ;)ErQT;@TPXL|NjmrI#VO
z%sTB%*THC)6kBsZK3UYFu1{+-?&U9&q9y*WdE5pZJnC(VK*vOyj~K>1WMuHeU80(&
z0@nLVFZjc74Y@OT*{Q>2ConusCf84xi44QCwp`actEg7_M6|~f>#dCOu8N*745~{|
zJ4e!8k`Uucu9j$*Ps^0$`?7HcB?W^p@BLVpqmy7twOR?LMrVXzF?e#cxFlG1HrKU}
zChF8e!F5=0*Db4CTGke=ZmwGuE5Wd$e=GqnjJEGTZHMVvEttE6tZt-QGwFms0$B0J
z7!{Q?)0C<k@(t9iXpi(vQ!x|OrPmN{u`BzR+7+zAYr7?VJ(J7Us`T|Jm+dv{>4pm~
z9L;*t9}5@2a-f`Ikz;5sndXE*=nWyE!x?^6{}^31CC1{A7-5&h-xLTvnT3Xu(eE?G
zO6G2QH!2zeE0|Aj?+l%(76r*4qmi0ayfDdTHy-t5wF(&-b%|lnGWJ>WQ0ZRWx>dj7
zfGca8v~{Z|rwPKCH+gb)dvbPc@#Jim+m1!}0V>kt+>`hW?E`~KFLWFYBP1~grmIi!
zm@x;KzQ0grIM!o6v_AoGCmn$H2_0yXkQ(F7It0w{Gh2$8l4&DdtN^cdi0jE^dx*|f
zPim|<d%2uZgO@)Tdl9b-#?6^Sf_aa$ejSVLz6*sGhfA`ghIo~}9z}9~^Abw#PH>5t
z`ufS#7OJ>%pR7c9JXcnaY85-m*m`LyN+JK;p<^Mll#uHoB!|?OhWXo(jI@K%9&-~a
zL><uApQL-n(5`UrIVevwzew6sxbQGHxiYkp!sl;sbpwU-Fs9>8f=im+{1C~xTi#4e
zbnd{<9rCB-eA8<_%r#BIjY4OuH%s*9Y!mNkL2Z-WiO%hMcRbq0@#*W&VAF2Wa1FV1
zPw^BxI%*Z4-G^a!pk%1L;d_5z!}miW#~?U2Ejt=5%$qb1ZL7bFf(HR*rR=$Y>9|3*
zp{;k*V>x+1v&iEa?pn&CaCl(mya9@D_+ENiCPEMDE$N4svGc*ZmHKOdlJc4lS>VGa
zt!Hh4AKYTzPM23#)A-4~@ux47moRU3_;A0~yhVIvk6caB5Uk_Yi}aN8iC{-ocQn3K
z%2qHv{#&7;30X~^6fFiLxk|VCdnuKqLN$}rXj!8;u&t{%_Ej0h9k(nTAz^?^F$gA{
z7F@g8;6`VKu~57=FMlLf818Q4N1?Ui;n^(TRI!k$Ecb3m-DB|1yx?j!+3<+@PVfCd
zgZG|TA-l(YlppQ-S>hvw5%4-3Uk3{?D2z-x#@}LcHEYq_UUzKG$NsChRe5;XN}kNe
z4k=X(=k(K!fK_*Moa=zrE`;GIe*+q36-K*H@K@{it?n_NbxRKoYt$I0nzj6O=}G5m
zenhi=2ehu{Xjg4dY)u=pk3%iRnS1<Q!2?bP-g@fIjT44?vbxb`RJInENCsG1+r2em
znRHa>g7WiZb$V(=Hm#-vm7m9ahRqLXA<9-7ktdrSgQ3eM!fdRah89bzaZ9&E7*(n+
z5cgx{pH1??Lb`U89q(7QigVaiFlg^Rm5RP%(VV13V-q_$+_R?&J88|acwh)zE;QQR
z7V+M<sKGO#(_7pA<5pbSx7Sk9j&`cR)peFEa^73FN;TLyOUUUg*6*4-qd3tL#^1_q
z3#35h2G?<nOTV}fWunEu{)uYGHBv0cTL_hIGattb>WU=iahM*nh1s!CE!u2UMT{5B
zz^8vKt*>LVz(iRg7!6wRM%4d)2UoG{Leq@q*nIb)<Zlc~r9y-9%@IO(p4SQ4YRu9#
zWJFW*t9^`!X6bO3ItA~n)k0H)s<Bvv13`^j0~|*2n%YPdD0v9$AP>ip%p<YT%J0Hf
zK1p&$LPOtEENgFH+>M0h-UozEzK^L4-oKQQ2@FdN^n_?GGT7I;R9W6E%<pquXEK|@
z;&3ONHLFpqSzVLqwM2VUa9hVy+vUmW?$77|hsK)K;?QQL-!*%DHjI^D^eBx;TYD{M
zm=6?n-luR}`-^3o{1!Yd9&h1V?^6Omd)ict?MaLK1!=9ghj%u0d>ynYlBeI$oRV$9
zkxu;29|JAxB(y9T{7?3_EQ}ykP39+YJAx6<EJl&x)baF^l+!i{Ayom_>^uccS6aUV
z^5u``HU-Cs8ZbsH#DLjgYH(|s4y`HgZLFla`$97PzC-3qPFh66o76m{{}#b~T5eXU
zlZC9)c%h8BOKw>wv1Ms5-?Ct!v}oCNE32bDIXZ8K31<y8@YzAUAss#+Mk@%yF>#h`
zND!)|4y&YWKBG=2PH-qylBM5eHdy5<p#gC8(}BNG^M#g*E*tF9GrL)fyiqLMg_)ff
zitg`4ij<=);um^W!0r$coH}9nvNklR94E}g+&~-jW=_m>oyTnCT9%#2b-mZyQL6R3
zQh;TEdE)w&Kp-81bPHqxmlaXrH=(8_R=+D9E6ie-o~mI~-XQvR(rv2wN)%cpcPUi*
zucaNQsn>h1cukSgar!N1TxU%5GU{A|FdGKm9$XF39x~e!+(Wdihdh7`%E3jhrdXTD
z-03lQx0t(P={Y1ca2TI;7XQ^~FaQYp;#o;TI|SmtUZ=v&D9bKRW-Z-YdtB)JajUEL
zIC;1o+q+I*|2<{Gb-*@#4R3WxME}^|D66Q^@6yBrp9^`}ziojsE6-d4WyJijeCTnG
zR$3n@q?dL;Aq67WERY$79&z{*CPzxWBI=t~PYOh?S0WdMM7H!sKC(C{a(p1-ZYAPv
zAra$xBR<C>>i4PBlREY5ZbpqebGH^2cv4oE-o2NyE?S}Ca4~Af!-zRTFn0=gB&o$|
zSZ$Gx^t)z}UOs71Wkli$UZ1<z-$m`3Vo%OLCmnSqj%>*3Y{>bcA?M%4f&m=6iUms;
zJkP$1Vj}R;-MIc56!_2ixpDoq@X}Zp1HV4=nUOy8_bQ+HM^i)2`37^3&wN2u9nqpf
zQEh1=HDl`3iW6>S>Pk9O-#a_;7||{y8k>w~edeCQ5MAR!#loiu3PbmrT!v*cy+B&y
zHTNv^TlKr1pNjM(=4*LW*;Chi@4sDWX+EX(rWvl$zilv{MT?hL>)$^5-e3*nAn7B1
zNV@**$O>?Fp7HW`hCw7J&Ox`k&+^?sM$*KpFwexs5e=h!sVcQFc-E|Ji|b&RRa`M%
zAs+ay?*9Fw@0Hiaqosp<^k(Y_pBpci-sE%R{ne6>US~bn=f;}{R6e%~9xwUaVfd9>
zoR}TS=QXB8UTiHL)!^3A@M?*M*Rb&6C?D4FbOiMp1ixc_ZmmSW24e^Exre|*>vIo<
z$J0JH-mI~v;b~amNQnL_zQR`@-a|>K4@bhnO!7;VsbK?sQ5?o9F98>)$t1_tDlbo4
z8}qI*UHqWodHSh1KY_@o!+c0JnqSo?Rdv5q8)roil(77w4N&m3>0(>Mx{yTwq`ZVF
zFDm7w$&?sT9p;IU?v(Evw~No;B47Sz{0r8rxa^j``hJ2r653|8&Ddral7JcAr&&l0
zi5W5cD6T!9?tNy9-!5bpGTMY|lRneeSEBs>d9;nEf3%qLPO%yMH5nQFFv%Iq?SNPv
zXsxux9Q&kdD8Z}hVqb<A?@U!d_J<jlgJto5I&dqa(X4A=SIlq9SN2=)Ur5E#=@cE~
zSrvyGg@D3hwZN<wi?(C&-g;RvW>)ZAjfzIEzd`5f0JfVJqQDe8C}uZJH&Z4v60eoZ
zjqzl}8k;))i2V<k*&gR;E}ljW%N9HGk&b9wBg7JanSPf#$*kj}P=0~yS|A5HluyUB
z#M++fYdLX&oN9}?8|4+nSMu3u6qE$re8WpDREg%EDz!k3I1rD@;*9X7sw{pLPU+$|
zW2t7EOfXC+dHyIX_wfR`K5Y5&kt*w>F(F%WYMY&I#zh*XeH*YYSH<unl)AKw*DzWH
zHCou64Ae|x6*-<(WDL~eXj+jmtRkanMaDcKS7gl7@PaFaO$xsE7f@OfYjsXFtbeHO
z?B2Whu!6s4vl($-<r_pKBh(?i2wlbU=%0YcdIr1rLmW!h4+1AF->ZVl7wT`x0$IO`
zUcrtE5e#C2TR}>2E4Uf?|JSh<lr2<R!5F||4{inid$5TuiY1;^$Ydu&eR$N=epd8C
z`2tFmgGSRGESj+?&*YD?D0Kn(pWj;-p|=28h2ui=yEw8pcWZAtaMSxjj?VSf^{$^)
zyavYRbogBJ6>b<fuXWWL20NoHfs25$>0E+Rhd06C9)l)SomZi^HOM~+cyVfaV1CeD
zL00?zlZ$`J?BOlpy=D(v7c)CyO^U&@9ia|U+@=r*ef>8B8WU_m3x(_DD2EiJHK7hs
z92erCuU|hP(n>^Xk)yN*EYpQLL~*ep4*L3}0g;YDq*^)3VFhVtVTeN%cRa*FU;nLo
zAf&B$*0e{C(jKr&80rwk)rUCf>z^19X%!+ZlcRjBAe|TL5XB{jIOyw>2Sj=uB8`=!
z91qwf40VX&#6`gl`ucwiXqT`J?GhfBqnuQbwuU-Hal1nt^z}~;h?Ga9o8%~`6r}Z`
z4$!1R9Q5_m21I&2BF&YfoK}#gg*rrW@gWZSdT~Izgzux;TdW*KRFLXI9iq7If?x-I
z{Zj)Xbt2M}a+EU)(xy;{C~ixLgTDUmK1f3>2;RZ1mxFh*_}6i(LLG*2i-H^mK$IZ|
z>rxQKhdK=7qJtbRpUubc5LYV)?N;m>b}bBX7{Q$iap31)ma-J?upG2ULAE>8VFb4&
z#DO2)5+2F1OB#C3CH7%~pCh4KS~^$OZV3eh1)J8`=E>Ra$=cRJZDeR2s5w=JHazGX
zT7&2=f(dyTCc+kx1{i}9sjeBY9J`Cq2tpBCr&i`DEBDW=u*S4|vUYgPZ=&WKh7blN
zHS;BcT~jwz<1EaUcbv0BPtZK(-MDd>z%440RR_0=*XGE^&VqKSEz(`V5%^gxGb0(B
zvRg2}>49uX<{d8co2W78s@)M=v&QS@srHa_cME+RLe)Fu8DkC?4e516QezEb+$%KT
z4pjQa6FO>TXS?{+ywKCR5qLVMMZOHLWs?u+I{t+=S*XrkvEW4mR>dA|;2UK}OJmXY
ze}O+t4f8r45y+!Kr_l1-+YTJ*ws4(GsD7hSvWwTxlecQNS!h^gnsDI3Ozk#(JsOSh
zn)iV3HYp0nrfGzXAp8)n36ON8qDhIj&1XF3I(YosW3Gosx5wPjV&0&ohh=r+%^N(m
zTLkl#=2Kz9x^Qd-+1{G)I_WM?)_QK!5=GVWX)E%S8<>`%y2TZzB_8uSVGt8+Tl)_b
z63XZmlQ(ZdGGC)-K-=s<-WKpu$kV%@#JU>f>Q?C=p)1I?q-IanbDpf{q0Q(YW1Fd)
zTuounexN?}yNHEb7a(N_CFM;hm%0SPhfC(?{lLdP2Q@CxO3z3dRMY0FeV*`XuG;4a
zGG^<!j3t2v_5NIT07Yv>$XeH;p?7imX}H+la4*l5PZ>86Jigha9N(C?xN5hA=^tys
zWxrgtSxr!@k%6xR@O4$->kxcJv#-X-igBslfD2^iQnwr52{jhZ8|<#8Ygkp|JnN63
zH$_~d#9d0`UK<n_-w8j`9)1ng9ma?_m-+`|#0GR!;&L=@Oi<jIK-@4TE>4;L>sVZH
z^pE0BFAj8oC$rhPL+v)g52g(c84MJ}lx4b`M)#GHXS;)VY&;D|kie<*{jtiawC2~H
zN*mj7vrZn5=#FB#U_+^K1HIQKF*9tQ6VC>Q?cR9=x=7l^7zp)quK#*FJrm*#4&0^7
z_JD_Yz(VWS^H4Mj3iR28Vf4aa$x<1Qr{G7H9gU`f)iqbmBMWId-+0qnW7Z^KV$M#N
zR_eEz!|*U9cLwjTce-jL34a4_1DOn5ngivn9Exb)Ef!f+$=`+;LwCzF@LWD@S(DD{
zU0}!*X5hBDs|hH(U+Xb<8k=0rCX~3$f{rdGhWC!#g~(kf8|1?IAGZp#V?3#`Nv*tI
zzSq&UBnGd>%+v3h3mNX7E97*FFMflUDdR=eXKJrw`{&WciY=Ch@0ExA4gvctEP!y!
zQ{J+r!C<{{-@VvhJMoT>%vLSi6OFdp$KpZ)4Q6!a>Nhl*&|b!Fi}>oZxW_1T=6P$|
zjZHspO*FUH#N(Nc2S?{bb0>dmVv3f(70YeaWT7*7i4NmVY78E&<L)~y`4dxg&QEc3
z_o2x%{h#2q8J-8@_`8JkG&|P?g}o0+r0Xm^nEulob{L7aYT3eFs*1tGny7IoV`vLd
z;aaW3>$0WlG^fgB5x=_%H#%crl!BF@#m*ge1Tqh!)q*+lGLT}mD<~%z<m7?gte{1p
zzWx<Dmy0jFhzr3T4%x6pmpE#UJQuWE#JuNl|1?CF9I7r4mxr~OP3Ndf`PTNJ27FyF
z%BC!)r^v2Y!L5L6<gEbe{gUD>c2jGVy$4Uw;XN6eM)Mim4tBO<V`@l^7R+M*9qQl?
z5QDXbmge-kGF3%_DNf>BW7$P&ef1bZ;@v`R8Q{GSu?3-{1@crdRNU(n3;JDlX{G!6
z=>{Q}o~1H`o_x7SuSQeR-VBrQskrAW*=WOPb{LUc%q&E`l&LT@>39@jXYKku^ky?r
zT_&qr{-TzVg50EddL!1{<YIZ?)QNeS!DkTt^cAc^zQIN<5)VT0VOe3o^-v7qi(C)I
z5`MP(M0IM?!no>Ngqc(j80(1Rij~pgr`bUN!Z=!0x(KS276VhGGi<iWYLTjA#f(V0
zap5YCC6~}ZP!&W%y#$kGY*Gpm-a;>NGN2p~E7>^)JDP>*dhInBab7EpH6DfJ(E_12
zC8l78kkO;xHQ3bwJkl(u!IRVDA1ctxel?zX-cA^=?scA=bV9%DpsU8+Nq9Y8In7O`
zQq!nOdGTP~d3EI}Y_t4OTd5@8@gJ0V&@oE;Z>7T!h^9R4Knf$OH1@UoO4Y9cE%Skt
zgwaktOJ3WO=B2{kK*BxF(?-eb?7};;VTRWMGhPNH%yjuQvz_1dPbUZMH=txi3Q8!!
zw5C2FSfaC~iWq5bTpuNr90(GLVd)guFZj5=Iz$7Yp3wJzKu2edI5bna${@@{F5V0S
ze$RWlrNrQ!$r;aj%-x9@XZSI=GnkdA<!9NrR@Q8@#rJ2?=4fma%-!iw3a*Q>5WMEE
zC<{>A6IQd2+n}`FE^*_mK8H^>u1-O;2K?~0MI1AA-n6?-K&_AwEoGbhNBecdIQ_0U
z<B?u(fhpT-i55N()4rhhddIL?C4MPw&nva!_&}O|JxuEAgMieAC6S%bk0H1`_HREA
z#%>8<{~+UX*pn}VeW8Jl6%U%cwrJt6qE|so2a5`ZxJoNl_97k$;SqOB0C)T))Rc6B
z3OoBeZ6-{(Q1fwE|E4~bpVn6`>55`y^cCjQ1^R5DhhP_h?r|S<50q=XWdHbD>7reP
z*I^f}pG>E$!K{CNeF+guN+HevFA<s9w_Qim>r6Y*`YqcYoy1M%V4jTR=roNhqG2;>
zA$z8wDuQQP8U4+rzYEazaE4IZB{)0nHcrIVIWcVg*fXU!toX)oV1mGNX$acQ6hjnZ
z5MN8DgE}7lF=Yg*yoe^a#Uan($lkP6-bh`O&c=1g&Y}JStQzR;X0XUkYT+aC@?bqo
z<exl?kv2gjf1A+S{AHN;x2W|XjB+1!MoDi`%?Eb36H1x>Nig@^*20g;aBkxol!T&b
zLI!$mFP_o`G$ZK6QcPMaj%lEzP#q0n7-m*zA9{q3&$ckxaB&`Ho$3Kvvtc~mj5-zK
zi+JnM8{wG$&8S)7*Kz1xsuKV87fA|MvamB{4SJO&?!@Dfm)+8F>|&^8t7ugpn=nwN
zJJGb1cW)2Xl^3aP0(8M8k2vo%Fnoh^-!ag`Oz*!h;?-|n^e$*{qX{aX`v>^F!RPM6
zC_eXpF47aXv+%ePB6P!ZVWPS^%%hf!UK+z9?ZiaH>|votNwLFleG)pK#Rc1OMG*!M
zs;ds5&1;lq+U>>@R;JJEF`rC2=tKh`|9qO7#w@`N>Jl`eAudj1&Er440%tGi7zL$h
z=vuxM>~@I!7LB|uDDqf{EKH+|Aw;oIa-Niq2|oW0DI67p_hB%-dm)zK(*KbpP797U
zRP8;JO4~{zwI%Ajo~tR5`MJ~LkyM$VJJp2-6Yz$4E3>rwdlwX!)dN4yXQ_PEHQa*U
zc)v|mxO}|vZ-0f6>heM(yxP@bStAkDME)mWMKcUW$qF-vRle(0vscR$gQv`NNntgo
zt<;i>RW7{EOpn-kI~UiR*aVhX$66Fj;5xa0$EZ{${#{|k_;}s<W~O!Q9K^LkF#kUA
z;656sGNAv*wB({U6D7#=807bO$wQ2+9Bl~nAXEnD7D0fHm3U_BJiYq@^b+xVV8K24
zr&u*4j=^%*yI)35IscTt9xcAgde>Q()Vo$t-#~S*soA;HV%ChyYhE8?n%DcN8dU_-
zyguf+4!Dsu7yD^mAM2-ieN5K8KKCMCta*x$U^?V<B0tGSF~NDN<4+et4PTo=daK9W
zN^dI#&TrCDPgYZLVoD?*cJTl_ufnI*rr-DPWoHN38_b_Jm`^mAPd1ppXfU5@Fn{Sa
zf93LBYw_kE^49u&=Jvrp^O3M(kMpR{{ISYs{siDyozHxHlF$4Z`29`Okn?w+`EzxP
z`4GKt@ja9Y%4*WTof26L#TJv{Gy4bm%xA)V=I__|%>Psud(8jxnSU7Kt^GFyx(WkD
zXZQvU^37C*`(}oP`DUsi%uJ1MX2cM|d^j;428DPj9#>2#EIMN_9S)!$<66P^7t?%k
z_~4)&3%NuxWPbby;b(olhS}x#h}q@XhSQ>W9bc2d&&}Yk<LXLL)~Hlo=~bF!$-vx>
zf8yMe8{#{U`AT=9x+sh&uv%bRw?(d|jU9V2LRv_Kn^*+*3FqrVmR6hq%u)xcjdGJi
zg7r*Sf~|#McHwie>Ssyvui#=sf_(zPgd8m%3tEK_#nHgS_-AvvkT7p4sPyi;Br5r4
zvx}cnEkv%nBsk=w(`BtzgB_5W|9%NAY$h>ES9|i(3#CWBX{t<=AUz|@GI+8&g;`n;
zunV)10rg~wY@gyw$fT`zqoVuAtwKhOyDhLw0c@*l5w2$!!E#0x9_{HB9xW0^m1+va
zM?O~M{<>=Qb~MOo6-T^GRo+d&*fOE5?WJ_E-F-La_6%wz^pzXE`q2=%(X)xp_F8Hg
zAQ@J>`dtR$eb<+Z_<Yw-vHV1CU8#(d>7^9jEswX<R0>_VZ)%{zVKUQ%0;02HC1*E^
zhoZd#{VtQrGFNhb>^1j@C9o{*Kod~<T^TA@M+E=StXaH$7N0zeA3w|aBn|(zNdxn{
z(I!6jJzX9p`Sk8J)D)wR?rE+PQe)-iz0ag2{&FD;g<EIMC{D}>;}=ok){a?}I$$D<
zqI<uL#(6hT)|ew2n@mu;4cS`%t&mulV2u@8*L;b)SlK`(V3XdWCgcuin?<cRt4G}3
zLowh*56&pIRS+x{>v8H(V9fnb+&r!AZbTtNCcG+SbvL9$cYGegPwZY&wft0~S?e5z
zr|aTq=&yNs`3H?n`F-@#jZJ<%YKc>^>@evF44Qaz#F>S1Ksxcrw<>Jjuo<|W^_%H>
zJ<N2_6-$gwLHMl3CYwFctaIL+7#<5P_o1t$VfYlLMIv9YZym(!_=axNbj+p}jdd!$
z8&9u_gkjOR{?5~|uqabUgZoFo7=1NmzNDyVoF(u^1T_8r4-`_MmGx4?W@I7@P-4FH
zdT}=7)t|_jMxewy{IrClKh=anF(bV5K<~yA1#U71iH9F?D3*_B8U{3;$V<%EIki^#
z_VL6qo4}Qi;qW2euZ4h+&@d`Pi2@1eEYa-xSBB7u*E%4f-%<Kp-C_I?pzd`<;Lj4q
zU|G6P@bSVlEKpYquJiHYfiS7v^)F4*`KlijA(pWifVjqD43bw$Y%E8F8QP+IK&Ief
zq;vw;J{@SyMYD8SI^)q9o}AOLv~~7)hLOcE>wV}nBu<H?`<uYEbwuDL%<uDqT|b5C
z-Ciuv=QpEREPp3(yPl{xoMN2@6hx5PJ?7K68+As|3WGgar!3i`_X3vbLBSzn5~r!6
z`e}XrTU45)CyZ&cFw=;1Obo?v5-`lZG=>%Qeq$XVQ8Oe|6k^pNLPAj-2Nc?VC|KLV
z>je;*`zhMDd(gtG4R6#C;{lI<bO6c6faG9LFp?e!9v%pewh)7Yw?ps^p~00xn*i}5
zlz38mP^7~UsUS2GbZLGFkg8_-BoK8_NP%tb>04l}faIE<zPVKrzdLaXRu_LKVA2L-
z>RWS%0L@3|`=WtZIO2*!=|R$IaXw@OT2)IpHXG#df~~RRKou@N2to2YJPL0V{AU%?
z;v$DOIirQlI0L-v@a`gbYT@^Q@u=S-v<eHrXI`8RU5|7eIdSB>BgcofIlIpND72m{
zii>;#ehlg(mBW)D&`K>lAz-!kwzN3Iwe#X4;i-kE?%dzb9e4eW%vZLC<n(QTHd-bi
z65i?MNy2d?1)d-IQz!wEKmaAL4*{K!b~J>5Oq}~xrojL-3<4T-)v7soJ=MZMl1amm
z8+57<5Yll0+6{G-#uDhjhvoNfgYwS)Y;yUG3n`!DatU<`2Ql+NfR7b|f98PYh2%z3
zat#4;vB>na$Og|*%FKA8PpJv-3m*xeVLA&#%dfW_?Q#)C0;SP8b1m7~Tx+7rPz3yU
z;Eeo`2hbLI#-a-ZjYnG~nQ;@0qlF5c>*7T|32;ny{d|$vB>lVkcJJhB?}9%YfThXM
zxgOLI=V4Aoh3K{7pP=;KQ8D8Y;vx9(zghG+_C&O|ig#!MTFto>4R*5K7>+k$aR?b&
zW2@+d_M0Pc(NcvD?|!a`6z@i%<3qZ98V0iA3EPe1$-x{zqZP(W_s2;0M@#pQ6QksS
zu*}S{0kiiVDtQ}^8qXRf=?DtI9~8a==C&D@`1)|1!@#!<{3YpIy5nU>8$sNPsVYOZ
zI3EJwkPNAm#cAheOMG0UxZ|RnK<ExrG_x8MX%nin#(29Bf!7kqhBdqo!o+crA1chz
zsQ+rzB}h3sVUA9)Y4K|+ewhttO`2l8dnDDm6Fswgg!wwODQ=GTn9sP*U*s40BfP)I
z;`2t%7c!rT^rk%n^J^yxu6M(nA1NFYsbsEMQn{OIk{?b*srKWLtn<UVT8Z$nLc}l8
z&;@xFzR5obRAWN^zW`Zl5|9OPj(1Ia4ks%<mcyqQPjBhL3%K+`7A)t0H$`{XA+3-V
zDgK#CghwXk>i7}Bb<ed!(`*&rX0E{KKx_GBYC54QK&IwEtaouZOSJ0r^>)UXXWNAj
z#HDD44~5Z{p4r}~X9lfmAkOZr`v@scRN>8<&<IkJ)y-=XEM`KS|1utZ2X6}mrZ8H+
z;ec=;|6srPXs0S!-HNL-SOdO&e}wU<-J7P3cAu@j7SAp+bV)x|4u;;M{w(Qy<&YV!
zrg2H1R*LMrgP|+cauySm9Ul3kw%R^;8f@YM<Yu5Cr$HLG`7Ab3kl7plHo+9vEM9-E
z-E~SOkLmtc9Q%ntjBV4PaW?5UGz-l*_RIcg2n4%@Tq1`Jz2jD^@(z4Pz|h4XrUm*x
z4mqB(ID;49wo}j%=zuWM+++M-i^m}Xn=Y7@sRi1c*W6jO8RH!UF1QF-68Ot2U@a&+
zXo8WPk%8%p%TK`j!~w17V>Z0=LoNm}&?M0a1=Z%W@1OIn>Am-0{zFSY!`!gUKi9sw
z3onV8Zws<#;_NZv-B!43W$cuqo|m6G`eYlban$Zfm(kp5>`XexYu#h$I3K?6UP!?+
z1wYPx>Y0ML7lvL}vgXV<7-%++D^VFd!{YEaDi(jo#Nh9gX#AZP3BSebqD=HLY%+a}
zG0;c2jy}d}>EkyVcs&1jctQypbRnB3(5Gf|d<iO!YBwk2xBC<nPD}VID%qqWFQMn=
z$?(+@J`R2dYe-W|_yk$*i58iMT4R5yi@u(uCh?^xg3_XgOVQ@D2468=;A$r=JlX=y
z+?xHK7I*{yQ27N0Rh?(H)|0C7EYsy=TXOUA^XB7qg6+XQL+&3qBE!@-v=w7H2gA4K
z+?Oy1S<ihbPlGU}soC3?>W_M-cWJBvsKEAwjc14aRK64MV$AWZDJnz$6!tE_^F{gn
zLwJ5AzmK|8Ww_-|_C5oiHu-%eJO%lE4?NrDcQxR?TE?%WcRVP4DOqJ01zn>e1&f&d
zeLF)%pbwF4re3!<(QuQ2T=MTp@T&$`3@{fU9bg<lEPxi^j9EpF0{8&l1$Y@?9Y8g}
zVgL(3GQjNsF#tM%vuP@F3ZNZeAHW|0HUX>!s03I9kO2@65Dn0isv?~LCjs6Eco*Ph
zfOP;h02KiD0ayS`0Jj3f0O$bzJ%i=*I6Myn>;u>i@G`)20FMDY0<a389AGg(F2Eds
zG=Ql9@c=giTn8``Km*VNW!eSs9l$Ao<8m3lqA9L)IH0p@DjkJoWh<7D&o#^03wc>n
zT;b%a$O%<J$%@5<w5kiLtI8`XOUn6TLheu(1U~9Ch5U*VLUw7EI(SEUH6dp-%N@&?
zuc&sAf8tw}gD1qTSt4Wp4&9bitOibBRp6+sEMGwg2l)8P@{%RXE6C9BDjD<CaDIie
zqQX&07E*ueO~!@8E5BkHA^PyDswIWxK+pB)R*v3!Rl#D%Qi#q$o{Ai+P~xK?cS!}G
zUQ)&brcWS0<t044E+;BgLE-YMr3H>vB|zcws_G?`{Ov_$WiZOCW;%H5>MGu`d|t_N
zM@kjMcHkRXKvDrQ@5plUj#VjyOeCpgE2<nBh2=$M4)T!NURc7Xuc)+^lrJrF+`G8c
zv4kgo4x8&Ja}-vwNQ9)Stz`~Jg?SYj6E>?HNP%)$<|s0+TEZ2UFLe-&+UnrV)sAwY
zYPOsn{e<-HM#@s1m6h;0kLGb!5g{|xy~NI25g?ZA3(W_44!<pxE0&}b6;(Q_stBn@
zm#h^<&N4X<kj5<}wXl4Nqihz`Of*nf!j}}5l|0}`t%NtIMk{2hWJNhi4a;;CR`+uz
z&k!@_s-OGABn`@e?-$_-lIE-^0~cN?$E2WKBDqLvjZ(H*&N9BFLMdIy!+t2=sz8Zx
z7&o)9iZ@qQuBZg2ia?y@g?ttuDO`&AOAE_fQCO5&vbeIaay5LHscnwRlH%3yTLtvY
zDlc9EuBGS-6_L84yr=}}%qpx}Mm|UEazHaQfCk7@b;%OPtQ8QBuUt_^?v-l{YaxZ~
zQ0m_5SYBAct*C@rnXR4&&99^!0<kJ2oE#?*2+~jPUj|Us>(KSyYG^Zs&@+l4<4_tT
zHn<(lDqm9RSWe60akU-Fnvz0Z0ZIys=quR}mhE&@uC_QTi?M8=vQt+$5d(R;pHF(F
z<9?^3e93Au0ox^`IHkB4yU}V|CNo%jCf5d2k-B1eMPa2Q(5OjE*j&CWr+j5ec@g;-
zb1|=E$ugQOA@}r_h*I5TzB;Fzqs;+(hNA+jK<>okPNd|r-m}ef=a@5%lUQG7f9hc`
zSn+Ae!U>*`Ei#BOFRYpc^FyYJ{Go<WSo~WCU)3_WcRPdEf5+hc2N>L1!=Q5&gQPz&
zc(#_o9Tf~*8yQTLVRIdWaZfU^J;C6@lMIH{Gf=)2xLCvB&%b4$xUYVULHM%_zFEc~
z>v0BOtY^@&n!%Q*7z`_8aDxn{#~AE?gu#?D25mfpQW;DyGf?86+rr?dWeh&6Vvxx*
zsCj}x)Kd(M8yJ*7$zaj_46feBz$8Pd3_Y(h2$SLV<qZDtI)hjK$lx~*F<7;oL1rz3
z;~N<?J<p)7n!)UP24!(73hzN)5YirGP+r5}i!uhA9$+wdIfJ(zWbou>27lbfVB-HU
z`0=+4=Kr2Snhf_n&*1z<2H!u=z~W?Z-3tr~psn%%9)K4Cb^;s$_#Pl^j*46ja65n*
zU;#iCfE(ahfGq%T0ki>p32*^m^t~!_8^APxJOC%aV*sxL{25?Bz~2D=12D>>A`<~}
z09FG$0q{Qnp8}|}Rm2Fe1YjkA0I&&QC&1?bgXTgy0QUlv0Js2t3-AWOVSo+*y;Vh~
z0L%ec3eX7fI>3H_BLIGY@Odh7BfxY38^Ce^H^4@KJpd;F&H{|cQIYWgDF9Xg2f!)-
z0pMkTcL0t6pvvV%fKfKU39t;{cK~ewX8`ne6}bzb0H6}U4e&dFHvm2a_#R+zu8NEW
zm;q1#uomETfP(;^0rUV|p9j1hKq0_#fYks`0lW^-2Jj7l1TgwO6`24q9bh(q9bhHE
zvjDpQJ^}a#z)t`p=R=tSOb4(6tOD2wunXX?0H*+c02sLd>IUFmfMozR0A7HN0Ivfa
z0yqKi6TsE^PzL~3fKq@p02=|`0r(K$Yk+eALl>&Z4S4boBWD;<6AcL`5o8e2lEGvM
z8A^0y7#U9Vz?P37BgrTdNutPA<Z2R4Mw4sEwIqg&A=i=XNi4a6+(>RBabzsH8Musb
zWIVZ*+(ssl-;mqM9V8yOsY%30CX*@TPI4DXAc<ruNg~N)8o8THCnl0YW{^~pM$9Cg
z%p@6P7P$vFq)d`U=D@sbA=zXuv66WthuDan<dQscADIt4TRvGx3dkZ-NEVYNq=-03
zF<A<;ZV7OQ%SahnPRhv&QbFz~m86RB#7U~jO0tTqCJ&GYNe!tb4*~a5N7j%>h>O${
zH(5&_g}L8D8i_#G5ifa+JWkdFC-WqEifkZH0}u2pd5-*+{EqydJWn=~7s!ib6M2ce
zOg59UlEu!d#lM+&dpw<?*k=J{kCDxF08@Gej(lZdc~vn?cLTffeBlzVV40(`+)-9g
zR9RAeWqymDWy|^@yQJe1$}3*6b6H`@a$vz>o-Qt2;`l{pM`2|FR|qW504~6PU;2Y_
zWc_KljC+ye^5rp*p92}qg7U)UjsaYdIW1reOJzYJFuv8l)(@5x1+eV-MGsufT;d(q
zdIgJDR6$m%mQ<Eh@GB~>)C&r%xMb;n?aLRIltac!ivF*JDWYt4L0L%^e?{(9RRxan
zqKXyJrT{<iqUFFKUJm)M4a`~uO?XLRMd9L-GT?>(ZwnvV+b`?ZxA|V)5nm=1#6xp{
z1$xy0S-X;eu*#R)=;dqvO2b^b&HaLpv#OxnxqPwX3S0+F{MUIFEM8quU0CLH{I{W;
zm4$S*dxahYb%-kr!dl#wxD*u1`vJekXP`s}_6+W<zwBI9;cygPiTm=xRRtwgD+($K
zVFAh)RFyp7_?6zj-m4tCN&#Q8+_A#RUx_=eiOYY<Wkp$8aZ%MTI#u$QX!5`8d^s%r
z-75-t?iU@ebnN^u!d~gH`QHTRD{<Nk>bZqgOG-+9WsoZ!FRwIQHQQJkz=?4QZ1%6Z
zaz|R)xc64{UwN}FonP<Qrvv<Y&tD>JfM8WYjo=qtSMU{OPORxl$5I%BU`)l$>c!CG
z|BE31eE{51yYxGRu5?!L{bu*e`-Cv6eR#@&{IE7<-g0GO2_G~nT#3&>PAe)L<(GR`
zy6wsmo-3$^39X`}=t}+Np;2iVa*L?CLhnjPai3Z7QZ94{xBv2F0FSDEv+bqa(52AH
zuNZK7am9fy$xaODQRG<cTsojbAZxI`<k5wPG4WRgU=>hMzJf0)E(vNizu*TgsIbg&
zc?V#K>HhxZzMYGgm-O!zmvL6Um2n?<?SkGGc7?uG|BdhJOLdjYI6KQP-v_VM@0T3=
zxBg4HVFCrkFeB3FmvR07|NdX{r<}fb{e~Di0nPx30H**B1MCJ^2e1Gj10Vq)4j>vp
z2XJx%F|-1#1E>R71yBTF0f+@SeH$@+46p-W6Tmuv8h}Lr$pFy+Isgs8nOlkBIKXxQ
z9$*20319+141f;c@OZ!lPyw(AU>?8(04+f4IB)|<0Eh)ReG9k&YzN2%NB}r>Gvo<C
z$+sl`*-OfcR;;Xw%_%Q(6vNW1=>MU*z*}PK0PxNi4qy>LE<h%L2_OL=9v}`N2EYKI
z0qC9x<p*#YAQ;C<`2HB+@I)qAfiggEjozQ8q^aaTHvFm4A;f5ao*sz`Goj?G3B#hL
z4?^vAN+_9*!nCmj&whjcHiel2@2%mz?>}n;@22N<fp^P6ec(N=YozjC_snxwDetj+
z_Kjxmn*D9pJ~kQOU;6&=hu0qXXpSki^M#!iw{3g<e>awx+Vd}r{pOm-?j7xSneKn)
z*wd-Q!@c9*c)|43{!MA$uNnFHnn&I-?N9#XmA^`}u3vTFBhw1ssdXK7Z8P6}YFo-4
z_p+Q@620dtPSwoV^Y_O-|7qiS|3iPsPJQXy>aP#~d;A^sYi>>(XSn(g-G4NE{lABP
zPV>L|@sH>HU*7Y;(|<KP4!1lp{FOg$8vXU=^kI&xb<Q<woz-m_S-CS#zxq^S(v;nQ
z`rexL>Nok*{x?5Kc;U(Wr2JPpUy5y-w{_iJg-0$3_X)?x=6ilRvGfm5cmH_H{+C<x
z|6W&~+4lQqV;jTfE;=;UiCO>4;lIcdLg%O7KW)gd%@z35J^j9-q%ZFEK3hK0^`Gen
zKbqhe{Z;POZy)(#db|Fn`kB|x-2T6>{&TwNm0cxeZ-no?Yps8}aoV044}9~<hW(%Z
zWBP#$7d|YkAF=ZAYp18*kvad%tV8=YJpFCk^d}EllbmUPiQM<QH>Q8S^xX}K=GU)#
z>#rN8$KB-nYR|h#6AOh0rWfYqH9z#0wPxgd1=ElH^A2ysz9-#L=hLRgP2bv)xb>Fr
z9^Q8A^xEw&o!(PalivRKoV%Ai7;*Tfc`IGg6KkeD@$=Nt4=fp*I<aYc@(rFN36IQt
zb~m|jEa_xJuJ+ou#IM)BqE7PFn`aE#^;_p%CvKl=yg%mXO(!P(bJqI%5?^_AUz7cB
zTOWDl<(-qh;{G(^)wwUG<-Ki~Fm~4I-`qL*Uh5w}TsHRcJk6G-&kxj|7k$^g@Q;T3
z>`x@`x43SMo-^CA_=4;4HzGFFjyV0B&tLrTXshP$uN)up3*GYnLw_ndNJO)49^#H;
zQ~V{|(dcdlye)cDMdCF5F~(^o!>^54Ndf$t=^4%}axa+!-?QL19p3S8ujXGD*$Aj2
zzrA%-;5l8!qk;dhKDg`E7|Kd`Qb|fkIavzWU<pqgfVrF$lNCr84HHi$10>StV$26g
zAUbeQg)qxW1u2B^tAUzA_;OI(Wq@fh`9JMlX?PVyx;`LFG6J&iXaE;>s=D^-t|~SG
zM-(KivXdZN2oM59Kn=JMkxd91l~oWCMG=qzSp)>xf^0!Rf`&y1vWN%*BMkRD9cIS4
zckcan?{j}x=gH}$yQ<E&zTf+u?&rzK$Ow3E6z*QIUlyz^^pDSJ0Y4)m3E}4t133o5
zoaAtQb3n#|JyKxT6xcm3+#v;yqr>^BcV&))mC^I5;T^2#u5po$pj9(CCWbRd!MW(Y
ztGIAQTqsq+nW*Fmp~N~;@^^A|x_kYf@?g*c!4C#2MBfXn5k9I4e;0?fQJbZP>ylyD
zq~BTN_qK?Rsj#k4qzzo_AI@wZ-d}q*lr?(iElLmL;cCCT5+{Z_420vzaDE)@G!%YM
z31yGkr9kQtkp}QrEBNG&aBKs=wS)IKSnGu{$KADG66{hSX`@h{agloeB2S0V=FvNW
zLqgjRhMl7$Dp@K>sw0izH9CAXf;Gt?OQUe_{%}63ZB(x0(8?piGyP#zQl#NsIU0pK
z4T(e_KxrAd4?er?UEK%XwcX$Sko<3L*zh0TfMy|5@EA*681e1y`ny2CW-vdxPn3&r
zsKN!;hlX}cfEoW?y#9Uv=&)g2{Oh{^93B5tY!t{95Bm3mwF5)#elJ&x@Or1v&i^(0
zApfI8;;u)c7A^4IKjSjC$nt-K8h?!cvr)R>k=p>L<H>k>)cKL<e+oL{<$0&QeDAV%
z)w|){@**ULlpv)^c~Y5FCvl_!L4*=X0@8%EAgxIol1PS;RFX!<k#zDB$sm)-bdpK3
z$ZRs7EFw$DM`RUQLpG7EWCzJ6`$!HsLUKtSIZg7(1#+2OB{#?|QiR6P(zHCSOsms4
z`XH@C8&E_kl{BDDXbak!wxJzp7uuU9(g8Gy4x_0wjgF(~^d*`>C)4RPlV;J`bP-)b
zm(x{r4P8$+(XDg`&8GWk4n0D1X&yaI^XUZ|=^X*oh(xmWKAq~P`DcQP<_Xi)3^1AI
zM|0hjwJq#ZwzEyJTkKA|*B-YQZ4p<?)pf`TXI(d!?9$w8Zhf>!4U0b27l{l;Bhd@!
zRWuXLLF>>Kv=i+^hfzMdh_0gFP+=U4OXEuTe*6$_fCcuk!_9Fk{5Wol<8f!)2hYS=
zcs2eC_wxpMMMx}Z4z^7o14wn+7_2aXPNXO38Jf;sW^>t>tQ0TD+wiA&CZER_@!k9a
zuP%s?;+(i7iphIrd09nvmfhuUnI~gaDfMSHMeSGLs57dNHhO@bpg+(b>&^PG&eb*j
zwtfeHs{e(*)vp$?KnHz-)Zp1*POv&y7vu)TO$pP`bTm(!v1Yz`&wORho6Dw*<u<U*
zY`pDe2ip`o+Gf~=cAGt7zq4oTd3(*4a8J4(F2N0U!`w(W7VI^{Wx03VSMGrO*5yTQ
zmmZ1aMq?2TK_k$M=wq}J<)EYJ2e8^TbPH9+^)SZ=@i|=BtKv2Fx_JG(m%ME6Cy33P
zUM(^bBJHmvpbfdl+w&wo9PIHH-@uRX>%6dFVu%<gW{P!Ulei{k%g<z-N>T5s#=3=m
zOegArdZM1J-`4NxmHHmPtWSOAclL+-6a0z(GJk^~3CacSg6D%{!CwPu`kMYG%}g|t
zLI2kF2|K|qvKt^iPTF7Xy$~0j+-Nt>z30Ag-?=MM-KIk>!66o5)ENy&qtIM*7A51^
z_y|6Uui+T4q}RlI*_-4o^Hz9!yc1q=$Sq7dkgkwT8Dt$~%qhr_duS!<C}x~>VIx=?
zdy~y(o7q?FCq{TT{vKb-xAA@a5HBU#h^NFzF-E*2R*E%ZxA>E+DW8^uWtx0W4p5WT
zcGX&cuD{TEy0Bl`Kj0tsulU#ffk8$vCD<F>4w{;tCc(@wpPJR?2NPov<UnuR-zI@K
zZ`j+mv6~mwYknk>35QbXWi$ybLD{G%?u|#|H}M+$4ZZ++RrIQR4|<)wk=_{4>i}TM
zuikC1FyICwLqWHBfCFd9c@huVoJ9}Q+q5vNAexGSVwzYj#>$)Wj;y9ysd%+l<*4$y
zitexTbyL5k|D|6Fe3AwpsA?au&)dSTr0e2(y2$cK1ZZfa5UPl3p;o918jGf)#UR`F
zs5q{SYeBBX<6ihx{29*2w{RtodVRfdUZ%GmV(E@ojnpM$$a->sRG_tKT`K6ObRFGH
zchUXy8^Dc|^c?+(UZoGRhAdz$Sv%H;4QFH61eU?3u}rpxZDD)ZF_sTrDZ)$gYP>eD
z3o+RVJoF4iWjdeFKj%C6d47c#7iC0sQBMfrL<`YLB!bUg6t9U)u}FL<R*7BWy0`_t
zt1KUukIH!PV4@r(Q{`AWL(Y*$<#)2Ys-o&Brkbnvs)rh+Qq@>BRlTWZt7U43`dS@V
zmsBxbUO%YoX`-EeLbnGC&eU0Yf!-8m{EzyEF6x)?8$rxB@q0kbUkA%R5-7;~vBAcm
zkclz(o7$$1X&2^wDrEjtGt(?KYt1IJ&Fq5s_{9{r%(jR4NCQv2XeZmncCFoL&q1u*
z>&m(sAy#&D1Kbcd)4lIjx()72w*xZ&hKp>9MDoC2B~Ur^IGTZy@Nk@lXF+Z(!k^$>
zxT4q46J86iBY0`7x7b_lRUk{rF>;dp1a%^omZ4Q?En1%v+KjfPJ?S%aC>;%zAcMXM
z_`ec-w-r$T5Iqi9f0M?r(yR)r$?7qWIq+UQ>&pf~E{$a`vB~T$HlHnH>)BTD;34)M
zJHxKA!n_Qx!fWw*oN%B2nRf;+CiBt!1)jmD1LA(f*YPiTHqYV5`49XmFC<Ef%A%&I
zD?FjaW8l?(fIXwc^I{^z^jz@k=VA+F<Ux@uPK#eeMBXPW$v9a@VyR?H`2=`*pd2p8
z$O-Z_IaAJ+AIjBoqueg{$|Hc_B~?8|)#Iw2>Ze{*OVwtz8<6~tiUlA0fMq>(f=<`d
z^(@Hl{rVeyLI13a`3?PU{s{j$Kg(a`Z}gA)m;76PnV@2TgQh{tU__7>ObV6;TZ1FP
z<=|#;C#Ym<num>V`k28c1(0r&*=-J)W9E#x1U0dit#7II0TX)IM4N2K+0FKVy=tjb
zt~KEM6t~Uo0b~!cZy!K<*f^F&l^`Pn)Eu=zT~SXo8xa0`bPukNN8&M%jXUrjd<NI_
z9`@#V+W`a50ag?vrARem$Sc4dz6OR+jC!;eT}nTpU(<t7!3(okR*}_WkFdr}vL@^?
z_7v;P64_ujk$u8GXASuT{xkPQf=ChL#dI-GtPq>UF>w|$>mFH7J|OFZ)!WFvVDs@Z
zLr#^S$Sraw*!o*}LY|eErB+UL2V1|QUQ?%3oSvZ<LA}h=m-RK>*&pa9`)~N~_$&Os
z_+R@mLD`^EFen%r><bPBw;*?Vn9*h&WXf){&zv?l&EJf&)((RFSOXQ~d&rQhww&|b
zY`4JebXTMH%8NvD;7}hS)E)H&D;-4jF#^=;2H3g_D&QG>9!t-7bG;9|!+=>4Qh_`Q
zoa;F<7r0ejs;H&?ffY>yo^ukSJ`SQ?gKc`Tg=`}`%0}`ryqKr}(K$gZ5Q{|x>B}av
ztL!O9%Eh4d8F@{{D51KkB=xMyR2$VEbrHD2P<>pV(+J||6@RvW$Ctnc0yD}Cu`BF;
z`;D#PdbwBKEH@V_-x`<ga@|>X(cO&dbQyXGh=F3L0;+*(qxy&=A3cdWpr=8@{(#UE
z&@_~Z7NAvVE?$VIc&EH=WDb3owg+#%16g^RmEm<D16%W6fSi|k6d|{ZY;jZkO=#%=
z5y#6ZfQoO+`Em*5%Q~4Ya{wPN$g5C6Vu1D3P_>j%>FQ;*KrL2ZsI4kb{Qz1O)3x*?
zy18y0vVfQMB)wRFsJH8Es52LJtY6Bn=Qs8f{XwAjcz=pN!(ZgD^>>1|^Zkopg$E#q
zng#JeV(?-xH`o9i>9?S&QKk!c{tfe)$pLgMYq4!-huW!jna#DQY(7-0;=qSyxm|9r
zJL#g`6SzGRhgzdqXahQrZXk>;RH-EVI-ZNaz}dLCSKsU7O$4uh>g9SDy^6rOA0;Vd
zG;r*XfFW!rSIA9*siw_=6Q=|FT?(A{EWJewvDz#JD$^Bqovq+Ic}Y=L3>B$jo7gK(
ziG0x(IKgE3x?BpeAFJY2pqfH0>8n<&b?Su52j7>|H8j>-f2#NDoG|k5^Y8a-16zI_
zqW?4CiaY&NV2}F2s$gyKZSXVTM<b{g{mt9Pi~7HGp-2|^zYMO1pTa448fdf=AIFz)
zWr*W=Z=Uy|cicPcRV4yA&m6Li>;=Aal~e{?7xVx<3T*c`8euW444`){h-U@Z-I4WR
z&#+`Rn!UiLLX<3JE7&^V!`Uo{onn{S9afx|=9PI(sK1gw$~*AxydNLJNAc(R6#h2<
zfPV^=cndJ*gZw1_iT@3<;yzJH#ECjkkz0s((G4nc64d19#ANZ7SR$5-wSXSG!~t;v
zxb<yORF;wz0Ye^<TsD{O0l5=^W2MS*fZSQ~eX!>mxe3r@Kj8L7c|%52tSY0bLL}Bz
z9IX5pRPCo#f*K55^aZHfZ>V|deYISzQD3Tk>KNe71$9;3Rz>xFn(3z@LX&l>ehtul
z1=Q}-I>vt-*m{zm?(g;U{NMa4!9&4d;Oc9FUjqi%GY0Vb0pR3A>?FGyxOfq$!hw6n
zee81F(WqY_DWm`XrV(n2I-zlBJX#1Wt^#fey+{h4kKe=F0C94F$(8XMd(P|Wed6s0
zKb3%<uRG~O#zL3(CRt1h)8e!h{g(D%)wtk&f#V$DhdBb){i>KMo|C6R`zx}TDxu1%
z%F0txwE*2afbN6UaLCC_;47c0Ex=cD)H&cQC3HpofPM&avV-obd+Q;3gnm}Ppcm@4
zegfz_!p{H%THx=1O7@+99@u%&paO7~M!}Q8GeLSVJy;wp3$_Kjf`h?@ps4wiDQ9Y!
zhoE!erip27o;01Is->AJW|n!!EHodO6=sL|8gez)oG{nSEfZ@?*=kVb1k|`mZkk)-
zmO)KB3Vc3V%x;8zN>TI(Y5<(29dvtRpqBjzT}sq)Z{vBmjTew+q!k$geaTodp1e<%
zlg;EPxkP?}EG<JT0%!4{pLMho?M?^MXX#Ynzboll$l2Y%R?gERtQ5q#V7+)QKLZu4
z7sOS%d_r|q{d5|5Jj<^dtOpGn7zzFAAhX_VHpflGmb6uDO<NcESS#DXcDJLTI!}Op
zY^u$)@7Q<k2X?vr3vjb-c8@&--RwDg#a;(SU)+^;)u5|w<fwD5rR(f^1BU0j%TSeW
zMPsE&p-7!j?-*19l}D9P9C{G+M@T|VZvn`ahz3NzZt7hqO2H%1S*62y)x()}!nrh@
z-6Wjf1}xVB_<48KJ6xNDhM`oH2632<UP2jYGMWxGAqy(te6$GS@*}hy>cbke9&JKf
z(GFnr`=CQSf^tzFIt|_R1#}tu>*+WXy64#ty^HV?{1IM`S3x(j9&f^1fnj9heGtz_
ba4ycnr-A?f?|-%O$M|FXG5#3;pT~ayQ8!D#

literal 0
Hc$@<O00001

diff --git a/libairspy/vc/libs/pthreadVCE2.dll b/libairspy/vc/libs/pthreadVCE2.dll
new file mode 100644
index 0000000000000000000000000000000000000000..9d148cc0dae8c9d0f4b4bf73d815d33bd544b2e0
GIT binary patch
literal 61952
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
XVKff%m`saJw?fMQp_%aiOZWc(;bt(s

literal 0
Hc$@<O00001

diff --git a/libs_win32/libusb-1.0.dll b/libs_win32/libusb-1.0.dll
new file mode 100644
index 0000000000000000000000000000000000000000..9057e715cbae633b63fb8848f3a3a10cf7cc83ef
GIT binary patch
literal 348305
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

literal 0
Hc$@<O00001

diff --git a/libs_win32/pthreadGC2.dll b/libs_win32/pthreadGC2.dll
new file mode 100644
index 0000000000000000000000000000000000000000..67b9289dfd9f6f1ad12c1d137f4e57ad1a54271c
GIT binary patch
literal 119888
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
F{}0#lH=h6i

literal 0
Hc$@<O00001

--
Working Copy 3.3.5

